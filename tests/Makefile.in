# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# nbd client library in userspace
# Copyright Red Hat
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

# nbd client library in userspace
# Copyright Red Hat
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

# subdir-rules.mk is included only in subdirectories.
# common-rules.mk is included in every Makefile.am.

# nbd client library in userspace
# Copyright Red Hat
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

# common-rules.mk is included in every Makefile.am.
# subdir-rules.mk is included only in subdirectories.
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = compile-header-only$(EXEEXT) compile-c$(EXEEXT) \
	compile-iso-c99$(EXEEXT) close-null$(EXEEXT) debug$(EXEEXT) \
	debug-environment$(EXEEXT) get-version$(EXEEXT) \
	export-name$(EXEEXT) private-data$(EXEEXT) $(am__EXEEXT_1) \
	$(am__EXEEXT_2) $(am__EXEEXT_3) $(am__EXEEXT_4) \
	$(am__EXEEXT_5) $(am__EXEEXT_6) $(am__EXEEXT_7) \
	$(am__EXEEXT_8) $(am__EXEEXT_9)
TESTS = compile-header-only$(EXEEXT) compile-c$(EXEEXT) \
	compile-iso-c99$(EXEEXT) close-null$(EXEEXT) debug$(EXEEXT) \
	debug-environment$(EXEEXT) get-version$(EXEEXT) \
	export-name$(EXEEXT) private-data$(EXEEXT) $(am__EXEEXT_1) \
	$(am__EXEEXT_2) $(am__EXEEXT_3) $(am__EXEEXT_10) \
	$(am__EXEEXT_5) $(am__EXEEXT_11) $(am__EXEEXT_12) \
	$(am__EXEEXT_8) $(am__EXEEXT_9)
@HAVE_CXX_TRUE@am__append_1 = compile-cxx
@HAVE_CXX_TRUE@am__append_2 = compile-cxx
@HAVE_LIBDL_TRUE@am__append_3 = dlopen
@HAVE_LIBDL_TRUE@am__append_4 = dlopen

#----------------------------------------------------------------------
# The following tests require nbdkit as an NBD server to test against.
@HAVE_NBDKIT_TRUE@am__append_5 = \
@HAVE_NBDKIT_TRUE@	errors-enum \
@HAVE_NBDKIT_TRUE@	errors-bitmask \
@HAVE_NBDKIT_TRUE@	errors-not-connected \
@HAVE_NBDKIT_TRUE@	errors-name-too-long \
@HAVE_NBDKIT_TRUE@	errors-poll-no-fd \
@HAVE_NBDKIT_TRUE@	errors-connect-null \
@HAVE_NBDKIT_TRUE@	errors-connect-twice \
@HAVE_NBDKIT_TRUE@	errors-not-negotiating \
@HAVE_NBDKIT_TRUE@	errors-not-negotiating-aio \
@HAVE_NBDKIT_TRUE@	errors-notify-not-blocked \
@HAVE_NBDKIT_TRUE@	errors-bad-cookie \
@HAVE_NBDKIT_TRUE@	errors-pread-structured \
@HAVE_NBDKIT_TRUE@	errors-multiple-disconnects \
@HAVE_NBDKIT_TRUE@	errors-server-invalid-offset \
@HAVE_NBDKIT_TRUE@	errors-client-oversize \
@HAVE_NBDKIT_TRUE@	errors-server-oversize \
@HAVE_NBDKIT_TRUE@	errors-client-unadvertised-cmd \
@HAVE_NBDKIT_TRUE@	errors-server-unadvertised-cmd \
@HAVE_NBDKIT_TRUE@	errors-client-unaligned \
@HAVE_NBDKIT_TRUE@	errors-server-unaligned \
@HAVE_NBDKIT_TRUE@	errors-client-unknown-flags \
@HAVE_NBDKIT_TRUE@	errors-server-unknown-flags \
@HAVE_NBDKIT_TRUE@	errors-client-zerosize \
@HAVE_NBDKIT_TRUE@	errors-server-zerosize \
@HAVE_NBDKIT_TRUE@	server-death \
@HAVE_NBDKIT_TRUE@	shutdown-flags \
@HAVE_NBDKIT_TRUE@	shutdown-opt-mode \
@HAVE_NBDKIT_TRUE@	get-size \
@HAVE_NBDKIT_TRUE@	read-only-flag \
@HAVE_NBDKIT_TRUE@	read-write-flag \
@HAVE_NBDKIT_TRUE@	can-flush-flag \
@HAVE_NBDKIT_TRUE@	can-not-flush-flag \
@HAVE_NBDKIT_TRUE@	can-fua-flag \
@HAVE_NBDKIT_TRUE@	can-not-fua-flag \
@HAVE_NBDKIT_TRUE@	is-rotational-flag \
@HAVE_NBDKIT_TRUE@	is-not-rotational-flag \
@HAVE_NBDKIT_TRUE@	can-trim-flag \
@HAVE_NBDKIT_TRUE@	can-not-trim-flag \
@HAVE_NBDKIT_TRUE@	can-zero-flag \
@HAVE_NBDKIT_TRUE@	can-not-zero-flag \
@HAVE_NBDKIT_TRUE@	can-fast-zero-flag \
@HAVE_NBDKIT_TRUE@	can-not-fast-zero-flag \
@HAVE_NBDKIT_TRUE@	can-df-flag \
@HAVE_NBDKIT_TRUE@	can-not-df-flag \
@HAVE_NBDKIT_TRUE@	can-multi-conn-flag \
@HAVE_NBDKIT_TRUE@	can-not-multi-conn-flag \
@HAVE_NBDKIT_TRUE@	can-cache-flag \
@HAVE_NBDKIT_TRUE@	can-not-cache-flag \
@HAVE_NBDKIT_TRUE@	oldstyle \
@HAVE_NBDKIT_TRUE@	newstyle-limited \
@HAVE_NBDKIT_TRUE@	opt-abort \
@HAVE_NBDKIT_TRUE@	opt-list \
@HAVE_NBDKIT_TRUE@	opt-info \
@HAVE_NBDKIT_TRUE@	opt-list-meta \
@HAVE_NBDKIT_TRUE@	opt-list-meta-queries \
@HAVE_NBDKIT_TRUE@	opt-set-meta \
@HAVE_NBDKIT_TRUE@	opt-set-meta-queries \
@HAVE_NBDKIT_TRUE@	opt-structured-twice \
@HAVE_NBDKIT_TRUE@	connect-systemd-socket-activation \
@HAVE_NBDKIT_TRUE@	connect-unix \
@HAVE_NBDKIT_TRUE@	connect-tcp \
@HAVE_NBDKIT_TRUE@	connect-tcp6 \
@HAVE_NBDKIT_TRUE@	aio-connect \
@HAVE_NBDKIT_TRUE@	aio-connect-port \
@HAVE_NBDKIT_TRUE@	aio-parallel \
@HAVE_NBDKIT_TRUE@	aio-parallel-load \
@HAVE_NBDKIT_TRUE@	synch-parallel \
@HAVE_NBDKIT_TRUE@	meta-base-allocation \
@HAVE_NBDKIT_TRUE@	closure-lifetimes \
@HAVE_NBDKIT_TRUE@	pread-initialize \
@HAVE_NBDKIT_TRUE@	socket-activation-name \
@HAVE_NBDKIT_TRUE@	pwrite-extended \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@am__append_6 = \
@HAVE_NBDKIT_TRUE@	errors-enum \
@HAVE_NBDKIT_TRUE@	errors-bitmask \
@HAVE_NBDKIT_TRUE@	errors-not-connected \
@HAVE_NBDKIT_TRUE@	errors-name-too-long \
@HAVE_NBDKIT_TRUE@	errors-poll-no-fd \
@HAVE_NBDKIT_TRUE@	errors-connect-null \
@HAVE_NBDKIT_TRUE@	errors-connect-twice \
@HAVE_NBDKIT_TRUE@	errors-not-negotiating \
@HAVE_NBDKIT_TRUE@	errors-not-negotiating-aio \
@HAVE_NBDKIT_TRUE@	errors-notify-not-blocked \
@HAVE_NBDKIT_TRUE@	errors-bad-cookie \
@HAVE_NBDKIT_TRUE@	errors-pread-structured \
@HAVE_NBDKIT_TRUE@	errors-multiple-disconnects \
@HAVE_NBDKIT_TRUE@	errors-server-invalid-offset \
@HAVE_NBDKIT_TRUE@	errors-client-oversize \
@HAVE_NBDKIT_TRUE@	errors-server-oversize \
@HAVE_NBDKIT_TRUE@	errors-client-unadvertised-cmd \
@HAVE_NBDKIT_TRUE@	errors-server-unadvertised-cmd \
@HAVE_NBDKIT_TRUE@	errors-client-unaligned \
@HAVE_NBDKIT_TRUE@	errors-server-unaligned \
@HAVE_NBDKIT_TRUE@	errors-client-unknown-flags \
@HAVE_NBDKIT_TRUE@	errors-server-unknown-flags \
@HAVE_NBDKIT_TRUE@	errors-client-zerosize \
@HAVE_NBDKIT_TRUE@	errors-server-zerosize \
@HAVE_NBDKIT_TRUE@	server-death \
@HAVE_NBDKIT_TRUE@	shutdown-flags \
@HAVE_NBDKIT_TRUE@	shutdown-opt-mode \
@HAVE_NBDKIT_TRUE@	get-size \
@HAVE_NBDKIT_TRUE@	read-only-flag \
@HAVE_NBDKIT_TRUE@	read-write-flag \
@HAVE_NBDKIT_TRUE@	can-flush-flag \
@HAVE_NBDKIT_TRUE@	can-not-flush-flag \
@HAVE_NBDKIT_TRUE@	can-fua-flag \
@HAVE_NBDKIT_TRUE@	can-not-fua-flag \
@HAVE_NBDKIT_TRUE@	is-rotational-flag \
@HAVE_NBDKIT_TRUE@	is-not-rotational-flag \
@HAVE_NBDKIT_TRUE@	can-trim-flag \
@HAVE_NBDKIT_TRUE@	can-not-trim-flag \
@HAVE_NBDKIT_TRUE@	can-zero-flag \
@HAVE_NBDKIT_TRUE@	can-not-zero-flag \
@HAVE_NBDKIT_TRUE@	can-fast-zero-flag \
@HAVE_NBDKIT_TRUE@	can-not-fast-zero-flag \
@HAVE_NBDKIT_TRUE@	can-df-flag \
@HAVE_NBDKIT_TRUE@	can-not-df-flag \
@HAVE_NBDKIT_TRUE@	can-multi-conn-flag \
@HAVE_NBDKIT_TRUE@	can-not-multi-conn-flag \
@HAVE_NBDKIT_TRUE@	can-cache-flag \
@HAVE_NBDKIT_TRUE@	can-not-cache-flag \
@HAVE_NBDKIT_TRUE@	oldstyle \
@HAVE_NBDKIT_TRUE@	newstyle-limited \
@HAVE_NBDKIT_TRUE@	opt-abort \
@HAVE_NBDKIT_TRUE@	opt-list \
@HAVE_NBDKIT_TRUE@	opt-info \
@HAVE_NBDKIT_TRUE@	opt-list-meta \
@HAVE_NBDKIT_TRUE@	opt-list-meta-queries \
@HAVE_NBDKIT_TRUE@	opt-set-meta \
@HAVE_NBDKIT_TRUE@	opt-set-meta-queries \
@HAVE_NBDKIT_TRUE@	opt-structured-twice \
@HAVE_NBDKIT_TRUE@	connect-systemd-socket-activation \
@HAVE_NBDKIT_TRUE@	connect-unix \
@HAVE_NBDKIT_TRUE@	connect-tcp \
@HAVE_NBDKIT_TRUE@	connect-tcp6 \
@HAVE_NBDKIT_TRUE@	aio-connect \
@HAVE_NBDKIT_TRUE@	aio-parallel.sh \
@HAVE_NBDKIT_TRUE@	aio-parallel-load.sh \
@HAVE_NBDKIT_TRUE@	synch-parallel.sh \
@HAVE_NBDKIT_TRUE@	meta-base-allocation \
@HAVE_NBDKIT_TRUE@	closure-lifetimes \
@HAVE_NBDKIT_TRUE@	pread-initialize \
@HAVE_NBDKIT_TRUE@	socket-activation-name \
@HAVE_NBDKIT_TRUE@	$(NULL)


#----------------------------------------------------------------------
# Testing TLS support.
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@am__append_7 = connect-tls-certs
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@am__append_8 = pki/stamp-pki
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@am__append_9 = connect-tls-certs
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@am__append_10 = \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	connect-tls-psk \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	opt-starttls \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	aio-parallel-tls \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	aio-parallel-load-tls \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	synch-parallel-tls \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(NULL)

@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@am__append_11 = \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	connect-tls-psk \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	opt-starttls \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	aio-parallel-tls.sh \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	aio-parallel-load-tls.sh \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	synch-parallel-tls.sh \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(NULL)

@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@am__append_12 = keys.psk

#----------------------------------------------------------------------
# Testing URIs.
@HAVE_NBDKIT_TRUE@am__append_13 = \
@HAVE_NBDKIT_TRUE@	connect-uri-nbd \
@HAVE_NBDKIT_TRUE@	connect-uri-nbd-unix \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@am__append_14 = \
@HAVE_NBDKIT_TRUE@	connect-uri-nbd \
@HAVE_NBDKIT_TRUE@	connect-uri-nbd-unix \
@HAVE_NBDKIT_TRUE@	connect-uri-nbd-vsock.sh \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@am__append_15 = \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	connect-uri-nbds-certs \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	connect-uri-nbds-unix-certs \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@am__append_16 = \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	connect-uri-nbds-certs \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	connect-uri-nbds-unix-certs \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@am__append_17 = \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	connect-uri-nbds-psk \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	connect-uri-nbds-unix-psk \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(NULL)

@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@am__append_18 = \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	connect-uri-nbds-psk \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	connect-uri-nbds-unix-psk \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(NULL)

subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_c_compile_flags.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/ocaml.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = functions.sh
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 =
@HAVE_CXX_TRUE@am__EXEEXT_2 = compile-cxx$(EXEEXT)
@HAVE_LIBDL_TRUE@am__EXEEXT_3 = dlopen$(EXEEXT)
@HAVE_NBDKIT_TRUE@am__EXEEXT_4 = errors-enum$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-bitmask$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-not-connected$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-name-too-long$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-poll-no-fd$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-connect-null$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-connect-twice$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-not-negotiating$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-not-negotiating-aio$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-notify-not-blocked$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-bad-cookie$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-pread-structured$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-multiple-disconnects$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-server-invalid-offset$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-client-oversize$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-server-oversize$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-client-unadvertised-cmd$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-server-unadvertised-cmd$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-client-unaligned$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-server-unaligned$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-client-unknown-flags$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-server-unknown-flags$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-client-zerosize$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-server-zerosize$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	server-death$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	shutdown-flags$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	shutdown-opt-mode$(EXEEXT) get-size$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	read-only-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	read-write-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-flush-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-flush-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-fua-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-fua-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	is-rotational-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	is-not-rotational-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-trim-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-trim-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-zero-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-zero-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-fast-zero-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-fast-zero-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-df-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-df-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-multi-conn-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-multi-conn-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-cache-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-cache-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	oldstyle$(EXEEXT) newstyle-limited$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	opt-abort$(EXEEXT) opt-list$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	opt-info$(EXEEXT) opt-list-meta$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	opt-list-meta-queries$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	opt-set-meta$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	opt-set-meta-queries$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	opt-structured-twice$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	connect-systemd-socket-activation$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	connect-unix$(EXEEXT) connect-tcp$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	connect-tcp6$(EXEEXT) aio-connect$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	aio-connect-port$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	aio-parallel$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	aio-parallel-load$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	synch-parallel$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	meta-base-allocation$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	closure-lifetimes$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	pread-initialize$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	socket-activation-name$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	pwrite-extended$(EXEEXT) $(am__EXEEXT_1)
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@am__EXEEXT_5 = connect-tls-certs$(EXEEXT)
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@am__EXEEXT_6 = connect-tls-psk$(EXEEXT) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	opt-starttls$(EXEEXT) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	aio-parallel-tls$(EXEEXT) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	aio-parallel-load-tls$(EXEEXT) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	synch-parallel-tls$(EXEEXT) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(am__EXEEXT_1)
@HAVE_NBDKIT_TRUE@am__EXEEXT_7 = connect-uri-nbd$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	connect-uri-nbd-unix$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	$(am__EXEEXT_1)
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@am__EXEEXT_8 = connect-uri-nbds-certs$(EXEEXT) \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	connect-uri-nbds-unix-certs$(EXEEXT) \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	$(am__EXEEXT_1)
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@am__EXEEXT_9 = connect-uri-nbds-psk$(EXEEXT) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	connect-uri-nbds-unix-psk$(EXEEXT) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(am__EXEEXT_1)
am__aio_connect_SOURCES_DIST = aio-connect.c pick-a-port.c \
	pick-a-port.h requires.c requires.h
am__objects_1 =
@HAVE_NBDKIT_TRUE@am_aio_connect_OBJECTS = aio-connect.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	pick-a-port.$(OBJEXT) requires.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	$(am__objects_1)
aio_connect_OBJECTS = $(am_aio_connect_OBJECTS)
@HAVE_NBDKIT_TRUE@aio_connect_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am__aio_connect_port_SOURCES_DIST = aio-connect-port.c
@HAVE_NBDKIT_TRUE@am_aio_connect_port_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	aio-connect-port.$(OBJEXT)
aio_connect_port_OBJECTS = $(am_aio_connect_port_OBJECTS)
@HAVE_NBDKIT_TRUE@aio_connect_port_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__aio_parallel_SOURCES_DIST = aio-parallel.c
@HAVE_NBDKIT_TRUE@am_aio_parallel_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	aio_parallel-aio-parallel.$(OBJEXT)
aio_parallel_OBJECTS = $(am_aio_parallel_OBJECTS)
am__DEPENDENCIES_1 =
@HAVE_NBDKIT_TRUE@aio_parallel_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la \
@HAVE_NBDKIT_TRUE@	$(am__DEPENDENCIES_1)
am__aio_parallel_load_SOURCES_DIST = aio-parallel-load.c
@HAVE_NBDKIT_TRUE@am_aio_parallel_load_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	aio-parallel-load.$(OBJEXT)
aio_parallel_load_OBJECTS = $(am_aio_parallel_load_OBJECTS)
@HAVE_NBDKIT_TRUE@aio_parallel_load_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la \
@HAVE_NBDKIT_TRUE@	$(am__DEPENDENCIES_1)
am__aio_parallel_load_tls_SOURCES_DIST = aio-parallel-load.c
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@am_aio_parallel_load_tls_OBJECTS = aio_parallel_load_tls-aio-parallel-load.$(OBJEXT)
aio_parallel_load_tls_OBJECTS = $(am_aio_parallel_load_tls_OBJECTS)
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@aio_parallel_load_tls_DEPENDENCIES = $(top_builddir)/lib/libnbd.la \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(am__DEPENDENCIES_1)
aio_parallel_load_tls_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(aio_parallel_load_tls_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__aio_parallel_tls_SOURCES_DIST = aio-parallel.c
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@am_aio_parallel_tls_OBJECTS = aio_parallel_tls-aio-parallel.$(OBJEXT)
aio_parallel_tls_OBJECTS = $(am_aio_parallel_tls_OBJECTS)
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@aio_parallel_tls_DEPENDENCIES = $(top_builddir)/lib/libnbd.la \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(am__DEPENDENCIES_1)
aio_parallel_tls_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(aio_parallel_tls_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__can_cache_flag_SOURCES_DIST = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_can_cache_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_cache_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_cache_flag-requires.$(OBJEXT)
can_cache_flag_OBJECTS = $(am_can_cache_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_cache_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__can_df_flag_SOURCES_DIST = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_can_df_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_df_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_df_flag-requires.$(OBJEXT)
can_df_flag_OBJECTS = $(am_can_df_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_df_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__can_fast_zero_flag_SOURCES_DIST = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_can_fast_zero_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_fast_zero_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_fast_zero_flag-requires.$(OBJEXT)
can_fast_zero_flag_OBJECTS = $(am_can_fast_zero_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_fast_zero_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__can_flush_flag_SOURCES_DIST = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_can_flush_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_flush_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_flush_flag-requires.$(OBJEXT)
can_flush_flag_OBJECTS = $(am_can_flush_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_flush_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__can_fua_flag_SOURCES_DIST = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_can_fua_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_fua_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_fua_flag-requires.$(OBJEXT)
can_fua_flag_OBJECTS = $(am_can_fua_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_fua_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__can_multi_conn_flag_SOURCES_DIST = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_can_multi_conn_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_multi_conn_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_multi_conn_flag-requires.$(OBJEXT)
can_multi_conn_flag_OBJECTS = $(am_can_multi_conn_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_multi_conn_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__can_not_cache_flag_SOURCES_DIST = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_can_not_cache_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_not_cache_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_not_cache_flag-requires.$(OBJEXT)
can_not_cache_flag_OBJECTS = $(am_can_not_cache_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_not_cache_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__can_not_df_flag_SOURCES_DIST = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_can_not_df_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_not_df_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_not_df_flag-requires.$(OBJEXT)
can_not_df_flag_OBJECTS = $(am_can_not_df_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_not_df_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__can_not_fast_zero_flag_SOURCES_DIST = eflags.c requires.c \
	requires.h
@HAVE_NBDKIT_TRUE@am_can_not_fast_zero_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_not_fast_zero_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_not_fast_zero_flag-requires.$(OBJEXT)
can_not_fast_zero_flag_OBJECTS = $(am_can_not_fast_zero_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_not_fast_zero_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__can_not_flush_flag_SOURCES_DIST = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_can_not_flush_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_not_flush_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_not_flush_flag-requires.$(OBJEXT)
can_not_flush_flag_OBJECTS = $(am_can_not_flush_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_not_flush_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__can_not_fua_flag_SOURCES_DIST = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_can_not_fua_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_not_fua_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_not_fua_flag-requires.$(OBJEXT)
can_not_fua_flag_OBJECTS = $(am_can_not_fua_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_not_fua_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__can_not_multi_conn_flag_SOURCES_DIST = eflags.c requires.c \
	requires.h
@HAVE_NBDKIT_TRUE@am_can_not_multi_conn_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_not_multi_conn_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_not_multi_conn_flag-requires.$(OBJEXT)
can_not_multi_conn_flag_OBJECTS =  \
	$(am_can_not_multi_conn_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_not_multi_conn_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__can_not_trim_flag_SOURCES_DIST = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_can_not_trim_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_not_trim_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_not_trim_flag-requires.$(OBJEXT)
can_not_trim_flag_OBJECTS = $(am_can_not_trim_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_not_trim_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__can_not_zero_flag_SOURCES_DIST = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_can_not_zero_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_not_zero_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_not_zero_flag-requires.$(OBJEXT)
can_not_zero_flag_OBJECTS = $(am_can_not_zero_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_not_zero_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__can_trim_flag_SOURCES_DIST = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_can_trim_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_trim_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_trim_flag-requires.$(OBJEXT)
can_trim_flag_OBJECTS = $(am_can_trim_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_trim_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__can_zero_flag_SOURCES_DIST = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_can_zero_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	can_zero_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	can_zero_flag-requires.$(OBJEXT)
can_zero_flag_OBJECTS = $(am_can_zero_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@can_zero_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am_close_null_OBJECTS = close-null.$(OBJEXT)
close_null_OBJECTS = $(am_close_null_OBJECTS)
close_null_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am__closure_lifetimes_SOURCES_DIST = closure-lifetimes.c
@HAVE_NBDKIT_TRUE@am_closure_lifetimes_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	closure-lifetimes.$(OBJEXT)
closure_lifetimes_OBJECTS = $(am_closure_lifetimes_OBJECTS)
@HAVE_NBDKIT_TRUE@closure_lifetimes_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am_compile_c_OBJECTS = compile-c.$(OBJEXT)
compile_c_OBJECTS = $(am_compile_c_OBJECTS)
compile_c_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am__compile_cxx_SOURCES_DIST = compile-cxx.cpp
@HAVE_CXX_TRUE@am_compile_cxx_OBJECTS = compile-cxx.$(OBJEXT)
compile_cxx_OBJECTS = $(am_compile_cxx_OBJECTS)
@HAVE_CXX_TRUE@compile_cxx_DEPENDENCIES =  \
@HAVE_CXX_TRUE@	$(top_builddir)/lib/libnbd.la
am_compile_header_only_OBJECTS = compile-header-only.$(OBJEXT)
compile_header_only_OBJECTS = $(am_compile_header_only_OBJECTS)
compile_header_only_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am_compile_iso_c99_OBJECTS =  \
	compile_iso_c99-compile-iso-c99.$(OBJEXT)
compile_iso_c99_OBJECTS = $(am_compile_iso_c99_OBJECTS)
compile_iso_c99_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am__connect_systemd_socket_activation_SOURCES_DIST =  \
	connect-systemd-socket-activation.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_connect_systemd_socket_activation_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	connect-systemd-socket-activation.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	requires.$(OBJEXT) $(am__objects_1)
connect_systemd_socket_activation_OBJECTS =  \
	$(am_connect_systemd_socket_activation_OBJECTS)
@HAVE_NBDKIT_TRUE@connect_systemd_socket_activation_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__connect_tcp_SOURCES_DIST = connect-tcp.c pick-a-port.c \
	pick-a-port.h requires.c requires.h
@HAVE_NBDKIT_TRUE@am_connect_tcp_OBJECTS = connect-tcp.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	pick-a-port.$(OBJEXT) requires.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	$(am__objects_1)
connect_tcp_OBJECTS = $(am_connect_tcp_OBJECTS)
@HAVE_NBDKIT_TRUE@connect_tcp_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__connect_tcp6_SOURCES_DIST = connect-tcp6.c pick-a-port.c \
	pick-a-port.h requires.c requires.h
@HAVE_NBDKIT_TRUE@am_connect_tcp6_OBJECTS = connect-tcp6.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	pick-a-port.$(OBJEXT) requires.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	$(am__objects_1)
connect_tcp6_OBJECTS = $(am_connect_tcp6_OBJECTS)
@HAVE_NBDKIT_TRUE@connect_tcp6_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__connect_tls_certs_SOURCES_DIST = connect-tls.c requires.c \
	requires.h
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@am_connect_tls_certs_OBJECTS = connect_tls_certs-connect-tls.$(OBJEXT) \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	connect_tls_certs-requires.$(OBJEXT)
connect_tls_certs_OBJECTS = $(am_connect_tls_certs_OBJECTS)
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@connect_tls_certs_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am__connect_tls_psk_SOURCES_DIST = connect-tls.c requires.c requires.h
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@am_connect_tls_psk_OBJECTS = connect_tls_psk-connect-tls.$(OBJEXT) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	connect_tls_psk-requires.$(OBJEXT)
connect_tls_psk_OBJECTS = $(am_connect_tls_psk_OBJECTS)
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@connect_tls_psk_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am__connect_unix_SOURCES_DIST = connect-unix.c
@HAVE_NBDKIT_TRUE@am_connect_unix_OBJECTS = connect-unix.$(OBJEXT)
connect_unix_OBJECTS = $(am_connect_unix_OBJECTS)
@HAVE_NBDKIT_TRUE@connect_unix_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__connect_uri_nbd_SOURCES_DIST = connect-uri.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_connect_uri_nbd_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	connect_uri_nbd-connect-uri.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	connect_uri_nbd-requires.$(OBJEXT)
connect_uri_nbd_OBJECTS = $(am_connect_uri_nbd_OBJECTS)
@HAVE_NBDKIT_TRUE@connect_uri_nbd_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
connect_uri_nbd_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(connect_uri_nbd_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__connect_uri_nbd_unix_SOURCES_DIST = connect-uri.c requires.c \
	requires.h
@HAVE_NBDKIT_TRUE@am_connect_uri_nbd_unix_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	connect_uri_nbd_unix-connect-uri.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	connect_uri_nbd_unix-requires.$(OBJEXT)
connect_uri_nbd_unix_OBJECTS = $(am_connect_uri_nbd_unix_OBJECTS)
@HAVE_NBDKIT_TRUE@connect_uri_nbd_unix_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__connect_uri_nbds_certs_SOURCES_DIST = connect-uri.c requires.c \
	requires.h
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@am_connect_uri_nbds_certs_OBJECTS = connect_uri_nbds_certs-connect-uri.$(OBJEXT) \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	connect_uri_nbds_certs-requires.$(OBJEXT)
connect_uri_nbds_certs_OBJECTS = $(am_connect_uri_nbds_certs_OBJECTS)
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@connect_uri_nbds_certs_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am__connect_uri_nbds_psk_SOURCES_DIST = connect-uri.c requires.c \
	requires.h
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@am_connect_uri_nbds_psk_OBJECTS = connect_uri_nbds_psk-connect-uri.$(OBJEXT) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	connect_uri_nbds_psk-requires.$(OBJEXT)
connect_uri_nbds_psk_OBJECTS = $(am_connect_uri_nbds_psk_OBJECTS)
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@connect_uri_nbds_psk_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am__connect_uri_nbds_unix_certs_SOURCES_DIST = connect-uri.c \
	requires.c requires.h
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@am_connect_uri_nbds_unix_certs_OBJECTS = connect_uri_nbds_unix_certs-connect-uri.$(OBJEXT) \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	connect_uri_nbds_unix_certs-requires.$(OBJEXT)
connect_uri_nbds_unix_certs_OBJECTS =  \
	$(am_connect_uri_nbds_unix_certs_OBJECTS)
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@connect_uri_nbds_unix_certs_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am__connect_uri_nbds_unix_psk_SOURCES_DIST = connect-uri.c requires.c \
	requires.h
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@am_connect_uri_nbds_unix_psk_OBJECTS = connect_uri_nbds_unix_psk-connect-uri.$(OBJEXT) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	connect_uri_nbds_unix_psk-requires.$(OBJEXT)
connect_uri_nbds_unix_psk_OBJECTS =  \
	$(am_connect_uri_nbds_unix_psk_OBJECTS)
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@connect_uri_nbds_unix_psk_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am_debug_OBJECTS = debug.$(OBJEXT)
debug_OBJECTS = $(am_debug_OBJECTS)
debug_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am_debug_environment_OBJECTS = debug-environment.$(OBJEXT)
debug_environment_OBJECTS = $(am_debug_environment_OBJECTS)
debug_environment_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am__dlopen_SOURCES_DIST = dlopen.c
@HAVE_LIBDL_TRUE@am_dlopen_OBJECTS = dlopen-dlopen.$(OBJEXT)
dlopen_OBJECTS = $(am_dlopen_OBJECTS)
@HAVE_LIBDL_TRUE@dlopen_DEPENDENCIES = $(am__DEPENDENCIES_1)
dlopen_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(dlopen_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am__errors_bad_cookie_SOURCES_DIST = errors-bad-cookie.c
@HAVE_NBDKIT_TRUE@am_errors_bad_cookie_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-bad-cookie.$(OBJEXT)
errors_bad_cookie_OBJECTS = $(am_errors_bad_cookie_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_bad_cookie_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_bitmask_SOURCES_DIST = errors-bitmask.c
@HAVE_NBDKIT_TRUE@am_errors_bitmask_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-bitmask.$(OBJEXT)
errors_bitmask_OBJECTS = $(am_errors_bitmask_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_bitmask_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_client_oversize_SOURCES_DIST = errors-client-oversize.c \
	requires.c requires.h
@HAVE_NBDKIT_TRUE@am_errors_client_oversize_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-client-oversize.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	requires.$(OBJEXT) $(am__objects_1)
errors_client_oversize_OBJECTS = $(am_errors_client_oversize_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_client_oversize_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_client_unadvertised_cmd_SOURCES_DIST =  \
	errors-client-unadvertised-cmd.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_errors_client_unadvertised_cmd_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-client-unadvertised-cmd.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	requires.$(OBJEXT)
errors_client_unadvertised_cmd_OBJECTS =  \
	$(am_errors_client_unadvertised_cmd_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_client_unadvertised_cmd_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_client_unaligned_SOURCES_DIST = errors-client-unaligned.c \
	requires.c requires.h
@HAVE_NBDKIT_TRUE@am_errors_client_unaligned_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-client-unaligned.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	requires.$(OBJEXT)
errors_client_unaligned_OBJECTS =  \
	$(am_errors_client_unaligned_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_client_unaligned_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_client_unknown_flags_SOURCES_DIST =  \
	errors-client-unknown-flags.c
@HAVE_NBDKIT_TRUE@am_errors_client_unknown_flags_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-client-unknown-flags.$(OBJEXT)
errors_client_unknown_flags_OBJECTS =  \
	$(am_errors_client_unknown_flags_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_client_unknown_flags_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_client_zerosize_SOURCES_DIST = errors-client-zerosize.c
@HAVE_NBDKIT_TRUE@am_errors_client_zerosize_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-client-zerosize.$(OBJEXT)
errors_client_zerosize_OBJECTS = $(am_errors_client_zerosize_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_client_zerosize_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_connect_null_SOURCES_DIST = errors-connect-null.c
@HAVE_NBDKIT_TRUE@am_errors_connect_null_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-connect-null.$(OBJEXT)
errors_connect_null_OBJECTS = $(am_errors_connect_null_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_connect_null_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_connect_twice_SOURCES_DIST = errors-connect-twice.c
@HAVE_NBDKIT_TRUE@am_errors_connect_twice_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-connect-twice.$(OBJEXT)
errors_connect_twice_OBJECTS = $(am_errors_connect_twice_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_connect_twice_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_enum_SOURCES_DIST = errors-enum.c
@HAVE_NBDKIT_TRUE@am_errors_enum_OBJECTS = errors-enum.$(OBJEXT)
errors_enum_OBJECTS = $(am_errors_enum_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_enum_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_multiple_disconnects_SOURCES_DIST =  \
	errors-multiple-disconnects.c
@HAVE_NBDKIT_TRUE@am_errors_multiple_disconnects_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-multiple-disconnects.$(OBJEXT)
errors_multiple_disconnects_OBJECTS =  \
	$(am_errors_multiple_disconnects_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_multiple_disconnects_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_name_too_long_SOURCES_DIST = errors-name-too-long.c
@HAVE_NBDKIT_TRUE@am_errors_name_too_long_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-name-too-long.$(OBJEXT)
errors_name_too_long_OBJECTS = $(am_errors_name_too_long_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_name_too_long_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_not_connected_SOURCES_DIST = errors-not-connected.c
@HAVE_NBDKIT_TRUE@am_errors_not_connected_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-not-connected.$(OBJEXT)
errors_not_connected_OBJECTS = $(am_errors_not_connected_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_not_connected_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_not_negotiating_SOURCES_DIST = errors-not-negotiating.c
@HAVE_NBDKIT_TRUE@am_errors_not_negotiating_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-not-negotiating.$(OBJEXT)
errors_not_negotiating_OBJECTS = $(am_errors_not_negotiating_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_not_negotiating_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_not_negotiating_aio_SOURCES_DIST =  \
	errors-not-negotiating-aio.c
@HAVE_NBDKIT_TRUE@am_errors_not_negotiating_aio_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-not-negotiating-aio.$(OBJEXT)
errors_not_negotiating_aio_OBJECTS =  \
	$(am_errors_not_negotiating_aio_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_not_negotiating_aio_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_notify_not_blocked_SOURCES_DIST =  \
	errors-notify-not-blocked.c
@HAVE_NBDKIT_TRUE@am_errors_notify_not_blocked_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-notify-not-blocked.$(OBJEXT)
errors_notify_not_blocked_OBJECTS =  \
	$(am_errors_notify_not_blocked_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_notify_not_blocked_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_poll_no_fd_SOURCES_DIST = errors-poll-no-fd.c
@HAVE_NBDKIT_TRUE@am_errors_poll_no_fd_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-poll-no-fd.$(OBJEXT)
errors_poll_no_fd_OBJECTS = $(am_errors_poll_no_fd_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_poll_no_fd_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_pread_structured_SOURCES_DIST = errors-pread-structured.c
@HAVE_NBDKIT_TRUE@am_errors_pread_structured_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-pread-structured.$(OBJEXT)
errors_pread_structured_OBJECTS =  \
	$(am_errors_pread_structured_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_pread_structured_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_server_invalid_offset_SOURCES_DIST =  \
	errors-server-invalid-offset.c
@HAVE_NBDKIT_TRUE@am_errors_server_invalid_offset_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-server-invalid-offset.$(OBJEXT)
errors_server_invalid_offset_OBJECTS =  \
	$(am_errors_server_invalid_offset_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_server_invalid_offset_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_server_oversize_SOURCES_DIST = errors-server-oversize.c \
	requires.c requires.h
@HAVE_NBDKIT_TRUE@am_errors_server_oversize_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-server-oversize.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	requires.$(OBJEXT) $(am__objects_1)
errors_server_oversize_OBJECTS = $(am_errors_server_oversize_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_server_oversize_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_server_unadvertised_cmd_SOURCES_DIST =  \
	errors-server-unadvertised-cmd.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_errors_server_unadvertised_cmd_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-server-unadvertised-cmd.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	requires.$(OBJEXT)
errors_server_unadvertised_cmd_OBJECTS =  \
	$(am_errors_server_unadvertised_cmd_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_server_unadvertised_cmd_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_server_unaligned_SOURCES_DIST = errors-server-unaligned.c \
	requires.c requires.h
@HAVE_NBDKIT_TRUE@am_errors_server_unaligned_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-server-unaligned.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	requires.$(OBJEXT)
errors_server_unaligned_OBJECTS =  \
	$(am_errors_server_unaligned_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_server_unaligned_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_server_unknown_flags_SOURCES_DIST =  \
	errors-server-unknown-flags.c
@HAVE_NBDKIT_TRUE@am_errors_server_unknown_flags_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-server-unknown-flags.$(OBJEXT)
errors_server_unknown_flags_OBJECTS =  \
	$(am_errors_server_unknown_flags_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_server_unknown_flags_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__errors_server_zerosize_SOURCES_DIST = errors-server-zerosize.c
@HAVE_NBDKIT_TRUE@am_errors_server_zerosize_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	errors-server-zerosize.$(OBJEXT)
errors_server_zerosize_OBJECTS = $(am_errors_server_zerosize_OBJECTS)
@HAVE_NBDKIT_TRUE@errors_server_zerosize_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am_export_name_OBJECTS = export-name.$(OBJEXT)
export_name_OBJECTS = $(am_export_name_OBJECTS)
export_name_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am__get_size_SOURCES_DIST = get-size.c
@HAVE_NBDKIT_TRUE@am_get_size_OBJECTS = get-size.$(OBJEXT)
get_size_OBJECTS = $(am_get_size_OBJECTS)
@HAVE_NBDKIT_TRUE@get_size_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am_get_version_OBJECTS = get-version.$(OBJEXT)
get_version_OBJECTS = $(am_get_version_OBJECTS)
get_version_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am__is_not_rotational_flag_SOURCES_DIST = eflags.c requires.c \
	requires.h
@HAVE_NBDKIT_TRUE@am_is_not_rotational_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	is_not_rotational_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	is_not_rotational_flag-requires.$(OBJEXT)
is_not_rotational_flag_OBJECTS = $(am_is_not_rotational_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@is_not_rotational_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__is_rotational_flag_SOURCES_DIST = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_is_rotational_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	is_rotational_flag-eflags.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	is_rotational_flag-requires.$(OBJEXT)
is_rotational_flag_OBJECTS = $(am_is_rotational_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@is_rotational_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__meta_base_allocation_SOURCES_DIST = meta-base-allocation.c
@HAVE_NBDKIT_TRUE@am_meta_base_allocation_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	meta-base-allocation.$(OBJEXT)
meta_base_allocation_OBJECTS = $(am_meta_base_allocation_OBJECTS)
@HAVE_NBDKIT_TRUE@meta_base_allocation_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__newstyle_limited_SOURCES_DIST = newstyle-limited.c requires.c \
	requires.h
@HAVE_NBDKIT_TRUE@am_newstyle_limited_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	newstyle-limited.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	requires.$(OBJEXT)
newstyle_limited_OBJECTS = $(am_newstyle_limited_OBJECTS)
@HAVE_NBDKIT_TRUE@newstyle_limited_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__oldstyle_SOURCES_DIST = oldstyle.c
@HAVE_NBDKIT_TRUE@am_oldstyle_OBJECTS = oldstyle.$(OBJEXT)
oldstyle_OBJECTS = $(am_oldstyle_OBJECTS)
@HAVE_NBDKIT_TRUE@oldstyle_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__opt_abort_SOURCES_DIST = opt-abort.c
@HAVE_NBDKIT_TRUE@am_opt_abort_OBJECTS = opt-abort.$(OBJEXT)
opt_abort_OBJECTS = $(am_opt_abort_OBJECTS)
@HAVE_NBDKIT_TRUE@opt_abort_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__opt_info_SOURCES_DIST = opt-info.c
@HAVE_NBDKIT_TRUE@am_opt_info_OBJECTS = opt_info-opt-info.$(OBJEXT)
opt_info_OBJECTS = $(am_opt_info_OBJECTS)
@HAVE_NBDKIT_TRUE@opt_info_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__opt_list_SOURCES_DIST = opt-list.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_opt_list_OBJECTS = opt_list-opt-list.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	opt_list-requires.$(OBJEXT)
opt_list_OBJECTS = $(am_opt_list_OBJECTS)
@HAVE_NBDKIT_TRUE@opt_list_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__opt_list_meta_SOURCES_DIST = opt-list-meta.c
@HAVE_NBDKIT_TRUE@am_opt_list_meta_OBJECTS = opt-list-meta.$(OBJEXT)
opt_list_meta_OBJECTS = $(am_opt_list_meta_OBJECTS)
@HAVE_NBDKIT_TRUE@opt_list_meta_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__opt_list_meta_queries_SOURCES_DIST = opt-list-meta-queries.c
@HAVE_NBDKIT_TRUE@am_opt_list_meta_queries_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	opt-list-meta-queries.$(OBJEXT)
opt_list_meta_queries_OBJECTS = $(am_opt_list_meta_queries_OBJECTS)
@HAVE_NBDKIT_TRUE@opt_list_meta_queries_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__opt_set_meta_SOURCES_DIST = opt-set-meta.c requires.c requires.h
@HAVE_NBDKIT_TRUE@am_opt_set_meta_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	opt_set_meta-opt-set-meta.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	opt_set_meta-requires.$(OBJEXT)
opt_set_meta_OBJECTS = $(am_opt_set_meta_OBJECTS)
@HAVE_NBDKIT_TRUE@opt_set_meta_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__opt_set_meta_queries_SOURCES_DIST = opt-set-meta-queries.c
@HAVE_NBDKIT_TRUE@am_opt_set_meta_queries_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	opt-set-meta-queries.$(OBJEXT)
opt_set_meta_queries_OBJECTS = $(am_opt_set_meta_queries_OBJECTS)
@HAVE_NBDKIT_TRUE@opt_set_meta_queries_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__opt_starttls_SOURCES_DIST = opt-starttls.c requires.c requires.h
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@am_opt_starttls_OBJECTS = opt-starttls.$(OBJEXT) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	requires.$(OBJEXT)
opt_starttls_OBJECTS = $(am_opt_starttls_OBJECTS)
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@opt_starttls_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am__opt_structured_twice_SOURCES_DIST = opt-structured-twice.c
@HAVE_NBDKIT_TRUE@am_opt_structured_twice_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	opt-structured-twice.$(OBJEXT)
opt_structured_twice_OBJECTS = $(am_opt_structured_twice_OBJECTS)
@HAVE_NBDKIT_TRUE@opt_structured_twice_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__pread_initialize_SOURCES_DIST = pread-initialize.c
@HAVE_NBDKIT_TRUE@am_pread_initialize_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	pread-initialize.$(OBJEXT)
pread_initialize_OBJECTS = $(am_pread_initialize_OBJECTS)
@HAVE_NBDKIT_TRUE@pread_initialize_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am_private_data_OBJECTS = private-data.$(OBJEXT)
private_data_OBJECTS = $(am_private_data_OBJECTS)
private_data_DEPENDENCIES = $(top_builddir)/lib/libnbd.la
am__pwrite_extended_SOURCES_DIST = pwrite-extended.c
@HAVE_NBDKIT_TRUE@am_pwrite_extended_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	pwrite-extended.$(OBJEXT)
pwrite_extended_OBJECTS = $(am_pwrite_extended_OBJECTS)
@HAVE_NBDKIT_TRUE@pwrite_extended_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__read_only_flag_SOURCES_DIST = read-only-flag.c
@HAVE_NBDKIT_TRUE@am_read_only_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	read-only-flag.$(OBJEXT)
read_only_flag_OBJECTS = $(am_read_only_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@read_only_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__read_write_flag_SOURCES_DIST = read-write-flag.c
@HAVE_NBDKIT_TRUE@am_read_write_flag_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	read-write-flag.$(OBJEXT)
read_write_flag_OBJECTS = $(am_read_write_flag_OBJECTS)
@HAVE_NBDKIT_TRUE@read_write_flag_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__server_death_SOURCES_DIST = server-death.c
@HAVE_NBDKIT_TRUE@am_server_death_OBJECTS = server-death.$(OBJEXT)
server_death_OBJECTS = $(am_server_death_OBJECTS)
@HAVE_NBDKIT_TRUE@server_death_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__shutdown_flags_SOURCES_DIST = shutdown-flags.c
@HAVE_NBDKIT_TRUE@am_shutdown_flags_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	shutdown-flags.$(OBJEXT)
shutdown_flags_OBJECTS = $(am_shutdown_flags_OBJECTS)
@HAVE_NBDKIT_TRUE@shutdown_flags_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__shutdown_opt_mode_SOURCES_DIST = shutdown-opt-mode.c
@HAVE_NBDKIT_TRUE@am_shutdown_opt_mode_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	shutdown-opt-mode.$(OBJEXT)
shutdown_opt_mode_OBJECTS = $(am_shutdown_opt_mode_OBJECTS)
@HAVE_NBDKIT_TRUE@shutdown_opt_mode_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__socket_activation_name_SOURCES_DIST = socket-activation-name.c \
	requires.c requires.h
@HAVE_NBDKIT_TRUE@am_socket_activation_name_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	socket-activation-name.$(OBJEXT) \
@HAVE_NBDKIT_TRUE@	requires.$(OBJEXT)
socket_activation_name_OBJECTS = $(am_socket_activation_name_OBJECTS)
@HAVE_NBDKIT_TRUE@socket_activation_name_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la
am__synch_parallel_SOURCES_DIST = synch-parallel.c
@HAVE_NBDKIT_TRUE@am_synch_parallel_OBJECTS =  \
@HAVE_NBDKIT_TRUE@	synch_parallel-synch-parallel.$(OBJEXT)
synch_parallel_OBJECTS = $(am_synch_parallel_OBJECTS)
@HAVE_NBDKIT_TRUE@synch_parallel_DEPENDENCIES =  \
@HAVE_NBDKIT_TRUE@	$(top_builddir)/lib/libnbd.la \
@HAVE_NBDKIT_TRUE@	$(am__DEPENDENCIES_1)
synch_parallel_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(synch_parallel_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
am__synch_parallel_tls_SOURCES_DIST = synch-parallel.c
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@am_synch_parallel_tls_OBJECTS = synch_parallel_tls-synch-parallel.$(OBJEXT)
synch_parallel_tls_OBJECTS = $(am_synch_parallel_tls_OBJECTS)
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@synch_parallel_tls_DEPENDENCIES = $(top_builddir)/lib/libnbd.la \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(am__DEPENDENCIES_1)
synch_parallel_tls_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(synch_parallel_tls_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/aio-connect-port.Po \
	./$(DEPDIR)/aio-connect.Po ./$(DEPDIR)/aio-parallel-load.Po \
	./$(DEPDIR)/aio_parallel-aio-parallel.Po \
	./$(DEPDIR)/aio_parallel_load_tls-aio-parallel-load.Po \
	./$(DEPDIR)/aio_parallel_tls-aio-parallel.Po \
	./$(DEPDIR)/can_cache_flag-eflags.Po \
	./$(DEPDIR)/can_cache_flag-requires.Po \
	./$(DEPDIR)/can_df_flag-eflags.Po \
	./$(DEPDIR)/can_df_flag-requires.Po \
	./$(DEPDIR)/can_fast_zero_flag-eflags.Po \
	./$(DEPDIR)/can_fast_zero_flag-requires.Po \
	./$(DEPDIR)/can_flush_flag-eflags.Po \
	./$(DEPDIR)/can_flush_flag-requires.Po \
	./$(DEPDIR)/can_fua_flag-eflags.Po \
	./$(DEPDIR)/can_fua_flag-requires.Po \
	./$(DEPDIR)/can_multi_conn_flag-eflags.Po \
	./$(DEPDIR)/can_multi_conn_flag-requires.Po \
	./$(DEPDIR)/can_not_cache_flag-eflags.Po \
	./$(DEPDIR)/can_not_cache_flag-requires.Po \
	./$(DEPDIR)/can_not_df_flag-eflags.Po \
	./$(DEPDIR)/can_not_df_flag-requires.Po \
	./$(DEPDIR)/can_not_fast_zero_flag-eflags.Po \
	./$(DEPDIR)/can_not_fast_zero_flag-requires.Po \
	./$(DEPDIR)/can_not_flush_flag-eflags.Po \
	./$(DEPDIR)/can_not_flush_flag-requires.Po \
	./$(DEPDIR)/can_not_fua_flag-eflags.Po \
	./$(DEPDIR)/can_not_fua_flag-requires.Po \
	./$(DEPDIR)/can_not_multi_conn_flag-eflags.Po \
	./$(DEPDIR)/can_not_multi_conn_flag-requires.Po \
	./$(DEPDIR)/can_not_trim_flag-eflags.Po \
	./$(DEPDIR)/can_not_trim_flag-requires.Po \
	./$(DEPDIR)/can_not_zero_flag-eflags.Po \
	./$(DEPDIR)/can_not_zero_flag-requires.Po \
	./$(DEPDIR)/can_trim_flag-eflags.Po \
	./$(DEPDIR)/can_trim_flag-requires.Po \
	./$(DEPDIR)/can_zero_flag-eflags.Po \
	./$(DEPDIR)/can_zero_flag-requires.Po \
	./$(DEPDIR)/close-null.Po ./$(DEPDIR)/closure-lifetimes.Po \
	./$(DEPDIR)/compile-c.Po ./$(DEPDIR)/compile-cxx.Po \
	./$(DEPDIR)/compile-header-only.Po \
	./$(DEPDIR)/compile_iso_c99-compile-iso-c99.Po \
	./$(DEPDIR)/connect-systemd-socket-activation.Po \
	./$(DEPDIR)/connect-tcp.Po ./$(DEPDIR)/connect-tcp6.Po \
	./$(DEPDIR)/connect-unix.Po \
	./$(DEPDIR)/connect_tls_certs-connect-tls.Po \
	./$(DEPDIR)/connect_tls_certs-requires.Po \
	./$(DEPDIR)/connect_tls_psk-connect-tls.Po \
	./$(DEPDIR)/connect_tls_psk-requires.Po \
	./$(DEPDIR)/connect_uri_nbd-connect-uri.Po \
	./$(DEPDIR)/connect_uri_nbd-requires.Po \
	./$(DEPDIR)/connect_uri_nbd_unix-connect-uri.Po \
	./$(DEPDIR)/connect_uri_nbd_unix-requires.Po \
	./$(DEPDIR)/connect_uri_nbds_certs-connect-uri.Po \
	./$(DEPDIR)/connect_uri_nbds_certs-requires.Po \
	./$(DEPDIR)/connect_uri_nbds_psk-connect-uri.Po \
	./$(DEPDIR)/connect_uri_nbds_psk-requires.Po \
	./$(DEPDIR)/connect_uri_nbds_unix_certs-connect-uri.Po \
	./$(DEPDIR)/connect_uri_nbds_unix_certs-requires.Po \
	./$(DEPDIR)/connect_uri_nbds_unix_psk-connect-uri.Po \
	./$(DEPDIR)/connect_uri_nbds_unix_psk-requires.Po \
	./$(DEPDIR)/debug-environment.Po ./$(DEPDIR)/debug.Po \
	./$(DEPDIR)/dlopen-dlopen.Po ./$(DEPDIR)/errors-bad-cookie.Po \
	./$(DEPDIR)/errors-bitmask.Po \
	./$(DEPDIR)/errors-client-oversize.Po \
	./$(DEPDIR)/errors-client-unadvertised-cmd.Po \
	./$(DEPDIR)/errors-client-unaligned.Po \
	./$(DEPDIR)/errors-client-unknown-flags.Po \
	./$(DEPDIR)/errors-client-zerosize.Po \
	./$(DEPDIR)/errors-connect-null.Po \
	./$(DEPDIR)/errors-connect-twice.Po ./$(DEPDIR)/errors-enum.Po \
	./$(DEPDIR)/errors-multiple-disconnects.Po \
	./$(DEPDIR)/errors-name-too-long.Po \
	./$(DEPDIR)/errors-not-connected.Po \
	./$(DEPDIR)/errors-not-negotiating-aio.Po \
	./$(DEPDIR)/errors-not-negotiating.Po \
	./$(DEPDIR)/errors-notify-not-blocked.Po \
	./$(DEPDIR)/errors-poll-no-fd.Po \
	./$(DEPDIR)/errors-pread-structured.Po \
	./$(DEPDIR)/errors-server-invalid-offset.Po \
	./$(DEPDIR)/errors-server-oversize.Po \
	./$(DEPDIR)/errors-server-unadvertised-cmd.Po \
	./$(DEPDIR)/errors-server-unaligned.Po \
	./$(DEPDIR)/errors-server-unknown-flags.Po \
	./$(DEPDIR)/errors-server-zerosize.Po \
	./$(DEPDIR)/export-name.Po ./$(DEPDIR)/get-size.Po \
	./$(DEPDIR)/get-version.Po \
	./$(DEPDIR)/is_not_rotational_flag-eflags.Po \
	./$(DEPDIR)/is_not_rotational_flag-requires.Po \
	./$(DEPDIR)/is_rotational_flag-eflags.Po \
	./$(DEPDIR)/is_rotational_flag-requires.Po \
	./$(DEPDIR)/meta-base-allocation.Po \
	./$(DEPDIR)/newstyle-limited.Po ./$(DEPDIR)/oldstyle.Po \
	./$(DEPDIR)/opt-abort.Po ./$(DEPDIR)/opt-list-meta-queries.Po \
	./$(DEPDIR)/opt-list-meta.Po \
	./$(DEPDIR)/opt-set-meta-queries.Po \
	./$(DEPDIR)/opt-starttls.Po \
	./$(DEPDIR)/opt-structured-twice.Po \
	./$(DEPDIR)/opt_info-opt-info.Po \
	./$(DEPDIR)/opt_list-opt-list.Po \
	./$(DEPDIR)/opt_list-requires.Po \
	./$(DEPDIR)/opt_set_meta-opt-set-meta.Po \
	./$(DEPDIR)/opt_set_meta-requires.Po \
	./$(DEPDIR)/pick-a-port.Po ./$(DEPDIR)/pread-initialize.Po \
	./$(DEPDIR)/private-data.Po ./$(DEPDIR)/pwrite-extended.Po \
	./$(DEPDIR)/read-only-flag.Po ./$(DEPDIR)/read-write-flag.Po \
	./$(DEPDIR)/requires.Po ./$(DEPDIR)/server-death.Po \
	./$(DEPDIR)/shutdown-flags.Po ./$(DEPDIR)/shutdown-opt-mode.Po \
	./$(DEPDIR)/socket-activation-name.Po \
	./$(DEPDIR)/synch_parallel-synch-parallel.Po \
	./$(DEPDIR)/synch_parallel_tls-synch-parallel.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(aio_connect_SOURCES) $(aio_connect_port_SOURCES) \
	$(aio_parallel_SOURCES) $(aio_parallel_load_SOURCES) \
	$(aio_parallel_load_tls_SOURCES) $(aio_parallel_tls_SOURCES) \
	$(can_cache_flag_SOURCES) $(can_df_flag_SOURCES) \
	$(can_fast_zero_flag_SOURCES) $(can_flush_flag_SOURCES) \
	$(can_fua_flag_SOURCES) $(can_multi_conn_flag_SOURCES) \
	$(can_not_cache_flag_SOURCES) $(can_not_df_flag_SOURCES) \
	$(can_not_fast_zero_flag_SOURCES) \
	$(can_not_flush_flag_SOURCES) $(can_not_fua_flag_SOURCES) \
	$(can_not_multi_conn_flag_SOURCES) \
	$(can_not_trim_flag_SOURCES) $(can_not_zero_flag_SOURCES) \
	$(can_trim_flag_SOURCES) $(can_zero_flag_SOURCES) \
	$(close_null_SOURCES) $(closure_lifetimes_SOURCES) \
	$(compile_c_SOURCES) $(compile_cxx_SOURCES) \
	$(compile_header_only_SOURCES) $(compile_iso_c99_SOURCES) \
	$(connect_systemd_socket_activation_SOURCES) \
	$(connect_tcp_SOURCES) $(connect_tcp6_SOURCES) \
	$(connect_tls_certs_SOURCES) $(connect_tls_psk_SOURCES) \
	$(connect_unix_SOURCES) $(connect_uri_nbd_SOURCES) \
	$(connect_uri_nbd_unix_SOURCES) \
	$(connect_uri_nbds_certs_SOURCES) \
	$(connect_uri_nbds_psk_SOURCES) \
	$(connect_uri_nbds_unix_certs_SOURCES) \
	$(connect_uri_nbds_unix_psk_SOURCES) $(debug_SOURCES) \
	$(debug_environment_SOURCES) $(dlopen_SOURCES) \
	$(errors_bad_cookie_SOURCES) $(errors_bitmask_SOURCES) \
	$(errors_client_oversize_SOURCES) \
	$(errors_client_unadvertised_cmd_SOURCES) \
	$(errors_client_unaligned_SOURCES) \
	$(errors_client_unknown_flags_SOURCES) \
	$(errors_client_zerosize_SOURCES) \
	$(errors_connect_null_SOURCES) $(errors_connect_twice_SOURCES) \
	$(errors_enum_SOURCES) $(errors_multiple_disconnects_SOURCES) \
	$(errors_name_too_long_SOURCES) \
	$(errors_not_connected_SOURCES) \
	$(errors_not_negotiating_SOURCES) \
	$(errors_not_negotiating_aio_SOURCES) \
	$(errors_notify_not_blocked_SOURCES) \
	$(errors_poll_no_fd_SOURCES) \
	$(errors_pread_structured_SOURCES) \
	$(errors_server_invalid_offset_SOURCES) \
	$(errors_server_oversize_SOURCES) \
	$(errors_server_unadvertised_cmd_SOURCES) \
	$(errors_server_unaligned_SOURCES) \
	$(errors_server_unknown_flags_SOURCES) \
	$(errors_server_zerosize_SOURCES) $(export_name_SOURCES) \
	$(get_size_SOURCES) $(get_version_SOURCES) \
	$(is_not_rotational_flag_SOURCES) \
	$(is_rotational_flag_SOURCES) $(meta_base_allocation_SOURCES) \
	$(newstyle_limited_SOURCES) $(oldstyle_SOURCES) \
	$(opt_abort_SOURCES) $(opt_info_SOURCES) $(opt_list_SOURCES) \
	$(opt_list_meta_SOURCES) $(opt_list_meta_queries_SOURCES) \
	$(opt_set_meta_SOURCES) $(opt_set_meta_queries_SOURCES) \
	$(opt_starttls_SOURCES) $(opt_structured_twice_SOURCES) \
	$(pread_initialize_SOURCES) $(private_data_SOURCES) \
	$(pwrite_extended_SOURCES) $(read_only_flag_SOURCES) \
	$(read_write_flag_SOURCES) $(server_death_SOURCES) \
	$(shutdown_flags_SOURCES) $(shutdown_opt_mode_SOURCES) \
	$(socket_activation_name_SOURCES) $(synch_parallel_SOURCES) \
	$(synch_parallel_tls_SOURCES)
DIST_SOURCES = $(am__aio_connect_SOURCES_DIST) \
	$(am__aio_connect_port_SOURCES_DIST) \
	$(am__aio_parallel_SOURCES_DIST) \
	$(am__aio_parallel_load_SOURCES_DIST) \
	$(am__aio_parallel_load_tls_SOURCES_DIST) \
	$(am__aio_parallel_tls_SOURCES_DIST) \
	$(am__can_cache_flag_SOURCES_DIST) \
	$(am__can_df_flag_SOURCES_DIST) \
	$(am__can_fast_zero_flag_SOURCES_DIST) \
	$(am__can_flush_flag_SOURCES_DIST) \
	$(am__can_fua_flag_SOURCES_DIST) \
	$(am__can_multi_conn_flag_SOURCES_DIST) \
	$(am__can_not_cache_flag_SOURCES_DIST) \
	$(am__can_not_df_flag_SOURCES_DIST) \
	$(am__can_not_fast_zero_flag_SOURCES_DIST) \
	$(am__can_not_flush_flag_SOURCES_DIST) \
	$(am__can_not_fua_flag_SOURCES_DIST) \
	$(am__can_not_multi_conn_flag_SOURCES_DIST) \
	$(am__can_not_trim_flag_SOURCES_DIST) \
	$(am__can_not_zero_flag_SOURCES_DIST) \
	$(am__can_trim_flag_SOURCES_DIST) \
	$(am__can_zero_flag_SOURCES_DIST) $(close_null_SOURCES) \
	$(am__closure_lifetimes_SOURCES_DIST) $(compile_c_SOURCES) \
	$(am__compile_cxx_SOURCES_DIST) $(compile_header_only_SOURCES) \
	$(compile_iso_c99_SOURCES) \
	$(am__connect_systemd_socket_activation_SOURCES_DIST) \
	$(am__connect_tcp_SOURCES_DIST) \
	$(am__connect_tcp6_SOURCES_DIST) \
	$(am__connect_tls_certs_SOURCES_DIST) \
	$(am__connect_tls_psk_SOURCES_DIST) \
	$(am__connect_unix_SOURCES_DIST) \
	$(am__connect_uri_nbd_SOURCES_DIST) \
	$(am__connect_uri_nbd_unix_SOURCES_DIST) \
	$(am__connect_uri_nbds_certs_SOURCES_DIST) \
	$(am__connect_uri_nbds_psk_SOURCES_DIST) \
	$(am__connect_uri_nbds_unix_certs_SOURCES_DIST) \
	$(am__connect_uri_nbds_unix_psk_SOURCES_DIST) $(debug_SOURCES) \
	$(debug_environment_SOURCES) $(am__dlopen_SOURCES_DIST) \
	$(am__errors_bad_cookie_SOURCES_DIST) \
	$(am__errors_bitmask_SOURCES_DIST) \
	$(am__errors_client_oversize_SOURCES_DIST) \
	$(am__errors_client_unadvertised_cmd_SOURCES_DIST) \
	$(am__errors_client_unaligned_SOURCES_DIST) \
	$(am__errors_client_unknown_flags_SOURCES_DIST) \
	$(am__errors_client_zerosize_SOURCES_DIST) \
	$(am__errors_connect_null_SOURCES_DIST) \
	$(am__errors_connect_twice_SOURCES_DIST) \
	$(am__errors_enum_SOURCES_DIST) \
	$(am__errors_multiple_disconnects_SOURCES_DIST) \
	$(am__errors_name_too_long_SOURCES_DIST) \
	$(am__errors_not_connected_SOURCES_DIST) \
	$(am__errors_not_negotiating_SOURCES_DIST) \
	$(am__errors_not_negotiating_aio_SOURCES_DIST) \
	$(am__errors_notify_not_blocked_SOURCES_DIST) \
	$(am__errors_poll_no_fd_SOURCES_DIST) \
	$(am__errors_pread_structured_SOURCES_DIST) \
	$(am__errors_server_invalid_offset_SOURCES_DIST) \
	$(am__errors_server_oversize_SOURCES_DIST) \
	$(am__errors_server_unadvertised_cmd_SOURCES_DIST) \
	$(am__errors_server_unaligned_SOURCES_DIST) \
	$(am__errors_server_unknown_flags_SOURCES_DIST) \
	$(am__errors_server_zerosize_SOURCES_DIST) \
	$(export_name_SOURCES) $(am__get_size_SOURCES_DIST) \
	$(get_version_SOURCES) \
	$(am__is_not_rotational_flag_SOURCES_DIST) \
	$(am__is_rotational_flag_SOURCES_DIST) \
	$(am__meta_base_allocation_SOURCES_DIST) \
	$(am__newstyle_limited_SOURCES_DIST) \
	$(am__oldstyle_SOURCES_DIST) $(am__opt_abort_SOURCES_DIST) \
	$(am__opt_info_SOURCES_DIST) $(am__opt_list_SOURCES_DIST) \
	$(am__opt_list_meta_SOURCES_DIST) \
	$(am__opt_list_meta_queries_SOURCES_DIST) \
	$(am__opt_set_meta_SOURCES_DIST) \
	$(am__opt_set_meta_queries_SOURCES_DIST) \
	$(am__opt_starttls_SOURCES_DIST) \
	$(am__opt_structured_twice_SOURCES_DIST) \
	$(am__pread_initialize_SOURCES_DIST) $(private_data_SOURCES) \
	$(am__pwrite_extended_SOURCES_DIST) \
	$(am__read_only_flag_SOURCES_DIST) \
	$(am__read_write_flag_SOURCES_DIST) \
	$(am__server_death_SOURCES_DIST) \
	$(am__shutdown_flags_SOURCES_DIST) \
	$(am__shutdown_opt_mode_SOURCES_DIST) \
	$(am__socket_activation_name_SOURCES_DIST) \
	$(am__synch_parallel_SOURCES_DIST) \
	$(am__synch_parallel_tls_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
@HAVE_NBDKIT_TRUE@am__EXEEXT_10 = errors-enum$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-bitmask$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-not-connected$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-name-too-long$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-poll-no-fd$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-connect-null$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-connect-twice$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-not-negotiating$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-not-negotiating-aio$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-notify-not-blocked$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-bad-cookie$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-pread-structured$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-multiple-disconnects$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-server-invalid-offset$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-client-oversize$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-server-oversize$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-client-unadvertised-cmd$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-server-unadvertised-cmd$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-client-unaligned$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-server-unaligned$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-client-unknown-flags$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-server-unknown-flags$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-client-zerosize$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	errors-server-zerosize$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	server-death$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	shutdown-flags$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	shutdown-opt-mode$(EXEEXT) get-size$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	read-only-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	read-write-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-flush-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-flush-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-fua-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-fua-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	is-rotational-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	is-not-rotational-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-trim-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-trim-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-zero-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-zero-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-fast-zero-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-fast-zero-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-df-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-df-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-multi-conn-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-multi-conn-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-cache-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	can-not-cache-flag$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	oldstyle$(EXEEXT) newstyle-limited$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	opt-abort$(EXEEXT) opt-list$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	opt-info$(EXEEXT) opt-list-meta$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	opt-list-meta-queries$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	opt-set-meta$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	opt-set-meta-queries$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	opt-structured-twice$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	connect-systemd-socket-activation$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	connect-unix$(EXEEXT) connect-tcp$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	connect-tcp6$(EXEEXT) aio-connect$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	aio-parallel.sh aio-parallel-load.sh \
@HAVE_NBDKIT_TRUE@	synch-parallel.sh \
@HAVE_NBDKIT_TRUE@	meta-base-allocation$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	closure-lifetimes$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	pread-initialize$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	socket-activation-name$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	$(am__EXEEXT_1)
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@am__EXEEXT_11 = connect-tls-psk$(EXEEXT) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	opt-starttls$(EXEEXT) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	aio-parallel-tls.sh \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	aio-parallel-load-tls.sh \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	synch-parallel-tls.sh \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(am__EXEEXT_1)
@HAVE_NBDKIT_TRUE@am__EXEEXT_12 = connect-uri-nbd$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	connect-uri-nbd-unix$(EXEEXT) \
@HAVE_NBDKIT_TRUE@	connect-uri-nbd-vsock.sh $(am__EXEEXT_1)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/functions.sh.in \
	$(top_srcdir)/common-rules.mk $(top_srcdir)/depcomp \
	$(top_srcdir)/subdir-rules.mk $(top_srcdir)/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BASH_COMPLETION_CFLAGS = @BASH_COMPLETION_CFLAGS@
BASH_COMPLETION_LIBS = @BASH_COMPLETION_LIBS@
CARGO = @CARGO@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CERTTOOL = @CERTTOOL@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETAGS = @ETAGS@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FILECMD = @FILECMD@
FUSE_CFLAGS = @FUSE_CFLAGS@
FUSE_LIBS = @FUSE_LIBS@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GNUTLS_CFLAGS = @GNUTLS_CFLAGS@
GNUTLS_LIBS = @GNUTLS_LIBS@
GOFMT = @GOFMT@
GOLANG = @GOLANG@
GOLANG_MAJOR_VERSION = @GOLANG_MAJOR_VERSION@
GOLANG_MINOR_VERSION = @GOLANG_MINOR_VERSION@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBEV_CFLAGS = @LIBEV_CFLAGS@
LIBEV_LIBS = @LIBEV_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBXML2_CFLAGS = @LIBXML2_CFLAGS@
LIBXML2_LIBS = @LIBXML2_LIBS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NBDKIT = @NBDKIT@
NBD_SERVER = @NBD_SERVER@
NM = @NM@
NMEDIT = @NMEDIT@
NODELETE = @NODELETE@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OCAML = @OCAML@
OCAMLBEST = @OCAMLBEST@
OCAMLBUILD = @OCAMLBUILD@
OCAMLC = @OCAMLC@
OCAMLCDOTOPT = @OCAMLCDOTOPT@
OCAMLDEP = @OCAMLDEP@
OCAMLDOC = @OCAMLDOC@
OCAMLFIND = @OCAMLFIND@
OCAMLLIB = @OCAMLLIB@
OCAMLMKLIB = @OCAMLMKLIB@
OCAMLMKTOP = @OCAMLMKTOP@
OCAMLOPT = @OCAMLOPT@
OCAMLOPTDOTOPT = @OCAMLOPTDOTOPT@
OCAMLVERSION = @OCAMLVERSION@
OCAML_FLAGS = @OCAML_FLAGS@
OCAML_WARN_ERROR = @OCAML_WARN_ERROR@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PODWRAPPER = @PODWRAPPER@
PSKTOOL = @PSKTOOL@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_CXX = @PTHREAD_CXX@
PTHREAD_LIBS = @PTHREAD_LIBS@
PYTHON = @PYTHON@
PYTHON_CFLAGS = @PYTHON_CFLAGS@
PYTHON_EXT_SUFFIX = @PYTHON_EXT_SUFFIX@
PYTHON_INSTALLDIR = @PYTHON_INSTALLDIR@
PYTHON_LIBS = @PYTHON_LIBS@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
QEMU_NBD = @QEMU_NBD@
QEMU_STORAGE_DAEMON = @QEMU_STORAGE_DAEMON@
RANLIB = @RANLIB@
REALPATH = @REALPATH@
RUSTFMT = @RUSTFMT@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
UBLKSRV_CFLAGS = @UBLKSRV_CFLAGS@
UBLKSRV_LIBS = @UBLKSRV_LIBS@
VERSION = @VERSION@
VERSION_SCRIPT = @VERSION_SCRIPT@
WARNINGS_CFLAGS = @WARNINGS_CFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bashcompdir = @bashcompdir@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# Convenient list terminator
NULL = 
CLEANFILES = *~ connect-tcp.pid connect-tcp6.pid connect-unix.pid \
	connect-uri-nbd.pid connect-uri-nbd-unix.pid \
	connect-uri-nbds.pid connect-uri-nbds-unix.pid \
	connect-uri-nbds-psk.pid $(NULL)

# In tests, include $(MALLOC_CHECKS) in TESTS_ENVIRONMENT to find some
# use-after-free and uninitialized read problems when using glibc.
# This doesn't affect other libc.
random = $(shell bash -c 'echo $$(( 1 + (RANDOM & 255) ))')
@HAVE_GLIBC_234_FALSE@MALLOC_CHECKS = \
@HAVE_GLIBC_234_FALSE@	MALLOC_CHECK_=1 \
@HAVE_GLIBC_234_FALSE@	MALLOC_PERTURB_=$(random) \
@HAVE_GLIBC_234_FALSE@	$(NULL)

@HAVE_GLIBC_234_TRUE@MALLOC_CHECKS = \
@HAVE_GLIBC_234_TRUE@	LD_PRELOAD="$${LD_PRELOAD:+"$$LD_PRELOAD:"}libc_malloc_debug.so.0" \
@HAVE_GLIBC_234_TRUE@	GLIBC_TUNABLES=glibc.malloc.check=1:glibc.malloc.perturb=$(random) \
@HAVE_GLIBC_234_TRUE@	$(NULL)

EXTRA_DIST = \
	aio-parallel.sh \
	aio-parallel-tls.sh \
	aio-parallel-load.sh \
	aio-parallel-load-tls.sh \
	connect-uri-nbd-vsock.sh \
	eflags-plugin.sh \
	functions.sh.in \
	make-pki.sh \
	meta-base-allocation.sh \
	opt-info.sh \
	opt-list.sh \
	synch-parallel.sh \
	synch-parallel-tls.sh \
	$(NULL)

check_DATA = $(am__append_8) $(am__append_12)

# Make sure that $srcdir is available to tests.
# Enable debug in all tests.
TESTS_ENVIRONMENT = \
	LIBNBD_DEBUG=1 \
	$(MALLOC_CHECKS) \
	srcdir=$(srcdir) \
	$(NULL)

# Use the ./run script so we're always using the local library and tools.
LOG_COMPILER = $(top_builddir)/run

# Common flags.
# Note there is no such thing as "AM_LDADD".
AM_CPPFLAGS = \
	-I$(top_srcdir)/include \
	$(NULL)

AM_CFLAGS = \
	$(WARNINGS_CFLAGS) \
	$(NULL)

AM_CXXFLAGS = \
	$(WARNINGS_CFLAGS) \
	$(NULL)

compile_header_only_SOURCES = compile-header-only.c
compile_header_only_LDADD = $(top_builddir)/lib/libnbd.la
compile_c_SOURCES = compile-c.c
compile_c_LDADD = $(top_builddir)/lib/libnbd.la
compile_iso_c99_SOURCES = compile-iso-c99.c
compile_iso_c99_CPPFLAGS = \
	$(AM_CPPFLAGS) \
	-std=c99 -pedantic \
	$(NULL)

compile_iso_c99_LDADD = $(top_builddir)/lib/libnbd.la
close_null_SOURCES = close-null.c
close_null_LDADD = $(top_builddir)/lib/libnbd.la
debug_SOURCES = debug.c
debug_LDADD = $(top_builddir)/lib/libnbd.la
debug_environment_SOURCES = debug-environment.c
debug_environment_LDADD = $(top_builddir)/lib/libnbd.la
get_version_SOURCES = get-version.c
get_version_LDADD = $(top_builddir)/lib/libnbd.la
export_name_SOURCES = export-name.c
export_name_LDADD = $(top_builddir)/lib/libnbd.la
private_data_SOURCES = private-data.c
private_data_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_CXX_TRUE@compile_cxx_SOURCES = compile-cxx.cpp
@HAVE_CXX_TRUE@compile_cxx_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_LIBDL_TRUE@dlopen_SOURCES = dlopen.c
@HAVE_LIBDL_TRUE@dlopen_CPPFLAGS = \
@HAVE_LIBDL_TRUE@	$(AM_CPPFLAGS) \
@HAVE_LIBDL_TRUE@	-DLIBRARY=\"$(top_builddir)/lib/.libs/libnbd.so.0\" \
@HAVE_LIBDL_TRUE@	$(NULL)

@HAVE_LIBDL_TRUE@dlopen_CFLAGS = $(AM_CFLAGS) $(PTHREAD_CFLAGS)
@HAVE_LIBDL_TRUE@dlopen_LDADD = -ldl $(PTHREAD_LIBS)

# This test is compiled but not run because it requires a fixed port:
#	aio-connect-port
@HAVE_NBDKIT_TRUE@errors_enum_SOURCES = errors-enum.c
@HAVE_NBDKIT_TRUE@errors_enum_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_bitmask_SOURCES = errors-bitmask.c
@HAVE_NBDKIT_TRUE@errors_bitmask_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_not_connected_SOURCES = errors-not-connected.c
@HAVE_NBDKIT_TRUE@errors_not_connected_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_name_too_long_SOURCES = errors-name-too-long.c
@HAVE_NBDKIT_TRUE@errors_name_too_long_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_poll_no_fd_SOURCES = errors-poll-no-fd.c
@HAVE_NBDKIT_TRUE@errors_poll_no_fd_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_connect_null_SOURCES = errors-connect-null.c
@HAVE_NBDKIT_TRUE@errors_connect_null_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_connect_twice_SOURCES = errors-connect-twice.c
@HAVE_NBDKIT_TRUE@errors_connect_twice_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_not_negotiating_SOURCES = errors-not-negotiating.c
@HAVE_NBDKIT_TRUE@errors_not_negotiating_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_not_negotiating_aio_SOURCES = errors-not-negotiating-aio.c
@HAVE_NBDKIT_TRUE@errors_not_negotiating_aio_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_notify_not_blocked_SOURCES = errors-notify-not-blocked.c
@HAVE_NBDKIT_TRUE@errors_notify_not_blocked_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_bad_cookie_SOURCES = errors-bad-cookie.c
@HAVE_NBDKIT_TRUE@errors_bad_cookie_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_pread_structured_SOURCES = errors-pread-structured.c
@HAVE_NBDKIT_TRUE@errors_pread_structured_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_multiple_disconnects_SOURCES = errors-multiple-disconnects.c
@HAVE_NBDKIT_TRUE@errors_multiple_disconnects_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_server_invalid_offset_SOURCES = errors-server-invalid-offset.c
@HAVE_NBDKIT_TRUE@errors_server_invalid_offset_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_client_oversize_SOURCES = \
@HAVE_NBDKIT_TRUE@	errors-client-oversize.c \
@HAVE_NBDKIT_TRUE@	requires.c \
@HAVE_NBDKIT_TRUE@	requires.h \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@errors_client_oversize_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_server_oversize_SOURCES = \
@HAVE_NBDKIT_TRUE@	errors-server-oversize.c \
@HAVE_NBDKIT_TRUE@	requires.c \
@HAVE_NBDKIT_TRUE@	requires.h \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@errors_server_oversize_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_client_unadvertised_cmd_SOURCES = errors-client-unadvertised-cmd.c \
@HAVE_NBDKIT_TRUE@				  requires.c requires.h

@HAVE_NBDKIT_TRUE@errors_client_unadvertised_cmd_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_server_unadvertised_cmd_SOURCES = errors-server-unadvertised-cmd.c \
@HAVE_NBDKIT_TRUE@				  requires.c requires.h

@HAVE_NBDKIT_TRUE@errors_server_unadvertised_cmd_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_client_unaligned_SOURCES = errors-client-unaligned.c \
@HAVE_NBDKIT_TRUE@				  requires.c requires.h

@HAVE_NBDKIT_TRUE@errors_client_unaligned_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_server_unaligned_SOURCES = errors-server-unaligned.c \
@HAVE_NBDKIT_TRUE@				  requires.c requires.h

@HAVE_NBDKIT_TRUE@errors_server_unaligned_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_client_unknown_flags_SOURCES = errors-client-unknown-flags.c
@HAVE_NBDKIT_TRUE@errors_client_unknown_flags_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_server_unknown_flags_SOURCES = errors-server-unknown-flags.c
@HAVE_NBDKIT_TRUE@errors_server_unknown_flags_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_client_zerosize_SOURCES = errors-client-zerosize.c
@HAVE_NBDKIT_TRUE@errors_client_zerosize_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@errors_server_zerosize_SOURCES = errors-server-zerosize.c
@HAVE_NBDKIT_TRUE@errors_server_zerosize_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@server_death_SOURCES = server-death.c
@HAVE_NBDKIT_TRUE@server_death_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@shutdown_flags_SOURCES = shutdown-flags.c
@HAVE_NBDKIT_TRUE@shutdown_flags_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@shutdown_opt_mode_SOURCES = shutdown-opt-mode.c
@HAVE_NBDKIT_TRUE@shutdown_opt_mode_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@get_size_SOURCES = get-size.c
@HAVE_NBDKIT_TRUE@get_size_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@read_only_flag_SOURCES = read-only-flag.c
@HAVE_NBDKIT_TRUE@read_only_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@read_write_flag_SOURCES = read-write-flag.c
@HAVE_NBDKIT_TRUE@read_write_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_flush_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_flush_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_flush \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_flush_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_not_flush_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_not_flush_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_flush -Dvalue=false \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_not_flush_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_fua_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_fua_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_fua -Dvalue=native \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_fua_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_not_fua_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_not_fua_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_fua -Dvalue=none \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_not_fua_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@is_rotational_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@is_rotational_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=is_rotational \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@is_rotational_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@is_not_rotational_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@is_not_rotational_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=is_rotational -Dvalue=false \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@is_not_rotational_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_trim_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_trim_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_trim \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_trim_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_not_trim_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_not_trim_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_trim -Dvalue=false \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_not_trim_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_zero_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_zero_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_zero \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_zero_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_not_zero_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_not_zero_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_zero -Dvalue=false \
@HAVE_NBDKIT_TRUE@	-Dfilter='"--filter=nozero"' \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_not_zero_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_fast_zero_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_fast_zero_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_fast_zero \
@HAVE_NBDKIT_TRUE@	-Drequirement='"has_can_fast_zero=1"' \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_fast_zero_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_not_fast_zero_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_not_fast_zero_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_fast_zero -Dvalue=false \
@HAVE_NBDKIT_TRUE@	-Drequirement='"has_can_fast_zero=1"' \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_not_fast_zero_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_df_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_df_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_df \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_df_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_not_df_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_not_df_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_df -Dvalue=false -Dno_sr \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_not_df_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_multi_conn_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_multi_conn_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_multi_conn \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_multi_conn_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_not_multi_conn_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_not_multi_conn_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_multi_conn -Dvalue=false \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_not_multi_conn_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_cache_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_cache_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_cache -Dvalue=native \
@HAVE_NBDKIT_TRUE@	-Drequirement='"has_can_cache=1"' \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_cache_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@can_not_cache_flag_SOURCES = eflags.c requires.c requires.h
@HAVE_NBDKIT_TRUE@can_not_cache_flag_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-Dflag=can_cache -Dvalue=none \
@HAVE_NBDKIT_TRUE@	-Drequirement='"has_can_cache=1"' \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@can_not_cache_flag_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@oldstyle_SOURCES = oldstyle.c
@HAVE_NBDKIT_TRUE@oldstyle_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@newstyle_limited_SOURCES = newstyle-limited.c requires.c requires.h
@HAVE_NBDKIT_TRUE@newstyle_limited_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@opt_abort_SOURCES = opt-abort.c
@HAVE_NBDKIT_TRUE@opt_abort_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@opt_list_SOURCES = opt-list.c requires.c requires.h
@HAVE_NBDKIT_TRUE@opt_list_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-DSCRIPT='"$(abs_srcdir)/opt-list.sh"' \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@opt_list_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@opt_info_SOURCES = opt-info.c
@HAVE_NBDKIT_TRUE@opt_info_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-DSCRIPT='"$(abs_srcdir)/opt-info.sh"' \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@opt_info_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@opt_list_meta_SOURCES = opt-list-meta.c
@HAVE_NBDKIT_TRUE@opt_list_meta_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@opt_list_meta_queries_SOURCES = opt-list-meta-queries.c
@HAVE_NBDKIT_TRUE@opt_list_meta_queries_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@opt_set_meta_SOURCES = opt-set-meta.c requires.c requires.h
@HAVE_NBDKIT_TRUE@opt_set_meta_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-I$(top_srcdir)/common/include \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@opt_set_meta_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@opt_set_meta_queries_SOURCES = opt-set-meta-queries.c
@HAVE_NBDKIT_TRUE@opt_set_meta_queries_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@opt_structured_twice_SOURCES = opt-structured-twice.c
@HAVE_NBDKIT_TRUE@opt_structured_twice_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@connect_systemd_socket_activation_SOURCES = \
@HAVE_NBDKIT_TRUE@	connect-systemd-socket-activation.c \
@HAVE_NBDKIT_TRUE@	requires.c \
@HAVE_NBDKIT_TRUE@	requires.h \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@connect_systemd_socket_activation_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@connect_unix_SOURCES = connect-unix.c
@HAVE_NBDKIT_TRUE@connect_unix_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@connect_tcp_SOURCES = \
@HAVE_NBDKIT_TRUE@	connect-tcp.c \
@HAVE_NBDKIT_TRUE@	pick-a-port.c \
@HAVE_NBDKIT_TRUE@	pick-a-port.h \
@HAVE_NBDKIT_TRUE@	requires.c \
@HAVE_NBDKIT_TRUE@	requires.h \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@connect_tcp_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@connect_tcp6_SOURCES = \
@HAVE_NBDKIT_TRUE@	connect-tcp6.c \
@HAVE_NBDKIT_TRUE@	pick-a-port.c \
@HAVE_NBDKIT_TRUE@	pick-a-port.h \
@HAVE_NBDKIT_TRUE@	requires.c \
@HAVE_NBDKIT_TRUE@	requires.h \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@connect_tcp6_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@aio_connect_SOURCES = \
@HAVE_NBDKIT_TRUE@	aio-connect.c \
@HAVE_NBDKIT_TRUE@	pick-a-port.c \
@HAVE_NBDKIT_TRUE@	pick-a-port.h \
@HAVE_NBDKIT_TRUE@	requires.c \
@HAVE_NBDKIT_TRUE@	requires.h \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@aio_connect_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@aio_connect_port_SOURCES = aio-connect-port.c
@HAVE_NBDKIT_TRUE@aio_connect_port_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@aio_parallel_SOURCES = aio-parallel.c
@HAVE_NBDKIT_TRUE@aio_parallel_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-I$(top_srcdir)/common/include \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@aio_parallel_LDADD = $(top_builddir)/lib/libnbd.la $(PTHREAD_LIBS)
@HAVE_NBDKIT_TRUE@aio_parallel_load_SOURCES = aio-parallel-load.c
@HAVE_NBDKIT_TRUE@aio_parallel_load_LDADD = $(top_builddir)/lib/libnbd.la $(PTHREAD_LIBS)
@HAVE_NBDKIT_TRUE@synch_parallel_SOURCES = synch-parallel.c
@HAVE_NBDKIT_TRUE@synch_parallel_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-I$(top_srcdir)/common/include \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@synch_parallel_CFLAGS = $(AM_CFLAGS) $(PTHREAD_CFLAGS)
@HAVE_NBDKIT_TRUE@synch_parallel_LDADD = $(top_builddir)/lib/libnbd.la $(PTHREAD_LIBS)
@HAVE_NBDKIT_TRUE@meta_base_allocation_SOURCES = meta-base-allocation.c
@HAVE_NBDKIT_TRUE@meta_base_allocation_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@closure_lifetimes_SOURCES = closure-lifetimes.c
@HAVE_NBDKIT_TRUE@closure_lifetimes_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@pread_initialize_SOURCES = pread-initialize.c
@HAVE_NBDKIT_TRUE@pread_initialize_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@socket_activation_name_SOURCES = \
@HAVE_NBDKIT_TRUE@	socket-activation-name.c \
@HAVE_NBDKIT_TRUE@	requires.c \
@HAVE_NBDKIT_TRUE@	requires.h

@HAVE_NBDKIT_TRUE@socket_activation_name_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@pwrite_extended_SOURCES = pwrite-extended.c
@HAVE_NBDKIT_TRUE@pwrite_extended_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@connect_tls_certs_SOURCES = connect-tls.c requires.c requires.h
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@connect_tls_certs_CPPFLAGS = \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	-DCERTS=1 \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@connect_tls_certs_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@connect_tls_psk_SOURCES = connect-tls.c requires.c requires.h
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@connect_tls_psk_CPPFLAGS = \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(AM_CPPFLAGS) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	-DPSK=1 \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(NULL)

@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@connect_tls_psk_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@opt_starttls_SOURCES = opt-starttls.c requires.c requires.h
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@opt_starttls_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@aio_parallel_tls_SOURCES = aio-parallel.c
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@aio_parallel_tls_CPPFLAGS = \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(AM_CPPFLAGS) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	-I$(top_srcdir)/common/include \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	-DTLS=1 \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(NULL)

@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@aio_parallel_tls_CFLAGS = $(AM_CFLAGS) $(PTHREAD_CFLAGS)
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@aio_parallel_tls_LDADD = $(top_builddir)/lib/libnbd.la $(PTHREAD_LIBS)
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@aio_parallel_load_tls_SOURCES = aio-parallel-load.c
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@aio_parallel_load_tls_CPPFLAGS = \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(AM_CPPFLAGS) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	-DTLS=1 \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(NULL)

@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@aio_parallel_load_tls_CFLAGS = $(AM_CFLAGS) $(PTHREAD_CFLAGS)
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@aio_parallel_load_tls_LDADD = $(top_builddir)/lib/libnbd.la $(PTHREAD_LIBS)
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@synch_parallel_tls_SOURCES = synch-parallel.c
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@synch_parallel_tls_CPPFLAGS = \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(AM_CPPFLAGS) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	-I$(top_srcdir)/common/include \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	-DTLS=1 \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(NULL)

@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@synch_parallel_tls_CFLAGS = $(AM_CFLAGS) $(PTHREAD_CFLAGS)
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@synch_parallel_tls_LDADD = $(top_builddir)/lib/libnbd.la $(PTHREAD_LIBS)
@HAVE_NBDKIT_TRUE@RANDOM1 := $(shell bash -c 'echo $$(( 32768 + (RANDOM & 16383) ))')
@HAVE_NBDKIT_TRUE@connect_uri_nbd_SOURCES = connect-uri.c requires.c requires.h
@HAVE_NBDKIT_TRUE@connect_uri_nbd_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-DSERVER_PARAMS='"-p", "$(RANDOM1)"' \
@HAVE_NBDKIT_TRUE@	-DPIDFILE='"connect-uri-nbd.pid"' \
@HAVE_NBDKIT_TRUE@	-DURI='"nbd://localhost:$(RANDOM1)/"' \
@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_NBDKIT_TRUE@connect_uri_nbd_CFLAGS = $(AM_CFLAGS)
@HAVE_NBDKIT_TRUE@connect_uri_nbd_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_NBDKIT_TRUE@connect_uri_nbd_unix_SOURCES = connect-uri.c requires.c requires.h
@HAVE_NBDKIT_TRUE@connect_uri_nbd_unix_CPPFLAGS = \
@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_NBDKIT_TRUE@	-DNEEDS_UNIX_SOCKET=1 \
@HAVE_NBDKIT_TRUE@	-DSERVER_PARAMS='"-U", UNIX_SOCKET' \
@HAVE_NBDKIT_TRUE@	-DPIDFILE='"connect-uri-nbd-unix.pid"' \
@HAVE_NBDKIT_TRUE@	-DURI='"nbd+unix:///?socket="' # UNIX_SOCKET appended

@HAVE_NBDKIT_TRUE@connect_uri_nbd_unix_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@RANDOM2 := $(shell bash -c 'echo $$(( 32768 + (RANDOM & 16383) ))')
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@connect_uri_nbds_certs_SOURCES = connect-uri.c requires.c requires.h
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@connect_uri_nbds_certs_CPPFLAGS = \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	-DSERVER_PARAMS='"-p", "$(RANDOM2)", "--tls=require", "--tls-verify-peer", "--tls-certificates=pki"' \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	-DREQUIRES_NBDKIT_TLS_VERIFY_PEER=1 \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	-DPIDFILE='"connect-uri-nbds-certs.pid"' \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	-DURI='"nbds://localhost:$(RANDOM2)/?tls-certificates=pki"' \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	$(NULL)

@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@connect_uri_nbds_certs_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@connect_uri_nbds_unix_certs_SOURCES = connect-uri.c requires.c requires.h
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@connect_uri_nbds_unix_certs_CPPFLAGS = \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	$(AM_CPPFLAGS) \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	-DNEEDS_UNIX_SOCKET=1 \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	-DSERVER_PARAMS='"-U", UNIX_SOCKET, "--tls=require", "--tls-verify-peer", "--tls-certificates=pki"' \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	-DREQUIRES_NBDKIT_TLS_VERIFY_PEER=1 \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	-DPIDFILE='"connect-uri-nbds-unix-certs.pid"' \
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	-DURI='"nbds+unix://alice@/?tls-certificates=pki&socket="' # UNIX_SOCKET appended

@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@connect_uri_nbds_unix_certs_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@RANDOM3 := $(shell bash -c 'echo $$(( 32768 + (RANDOM & 16383) ))')
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@connect_uri_nbds_psk_SOURCES = connect-uri.c requires.c requires.h
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@connect_uri_nbds_psk_CPPFLAGS = \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(AM_CPPFLAGS) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	-DSERVER_PARAMS='"-p", "$(RANDOM3)", "--tls=require", "--tls-verify-peer", "--tls-psk=keys.psk"' \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	-DREQUIRES_NBDKIT_TLS_VERIFY_PEER=1 \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	-DPIDFILE='"connect-uri-nbds-psk.pid"' \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	-DURI='"nbds://alice@localhost:$(RANDOM3)/?tls-psk-file=keys.psk"' \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(NULL)

@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@connect_uri_nbds_psk_LDADD = $(top_builddir)/lib/libnbd.la
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@connect_uri_nbds_unix_psk_SOURCES = connect-uri.c requires.c requires.h
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@connect_uri_nbds_unix_psk_CPPFLAGS = \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(AM_CPPFLAGS) \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	-DNEEDS_UNIX_SOCKET=1 \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	-DSERVER_PARAMS='"-U", UNIX_SOCKET, "--tls=require", "--tls-verify-peer", "--tls-psk=keys.psk"' \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	-DREQUIRES_NBDKIT_TLS_VERIFY_PEER=1 \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	-DPIDFILE='"connect-uri-nbds-unix-psk.pid"' \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	-DURI='"nbds+unix://alice@/?tls-psk-file=keys.psk&socket="' # UNIX_SOCKET appended \
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(NULL)

@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@connect_uri_nbds_unix_psk_LDADD = $(top_builddir)/lib/libnbd.la

# Keys are expensive to recreate, so only delete them when we do
# ‘make distclean’.
@HAVE_NBDKIT_TRUE@DISTCLEANFILES = keys.psk
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/subdir-rules.mk $(top_srcdir)/common-rules.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/subdir-rules.mk $(top_srcdir)/common-rules.mk $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
functions.sh: $(top_builddir)/config.status $(srcdir)/functions.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

aio-connect$(EXEEXT): $(aio_connect_OBJECTS) $(aio_connect_DEPENDENCIES) $(EXTRA_aio_connect_DEPENDENCIES) 
	@rm -f aio-connect$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aio_connect_OBJECTS) $(aio_connect_LDADD) $(LIBS)

aio-connect-port$(EXEEXT): $(aio_connect_port_OBJECTS) $(aio_connect_port_DEPENDENCIES) $(EXTRA_aio_connect_port_DEPENDENCIES) 
	@rm -f aio-connect-port$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aio_connect_port_OBJECTS) $(aio_connect_port_LDADD) $(LIBS)

aio-parallel$(EXEEXT): $(aio_parallel_OBJECTS) $(aio_parallel_DEPENDENCIES) $(EXTRA_aio_parallel_DEPENDENCIES) 
	@rm -f aio-parallel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aio_parallel_OBJECTS) $(aio_parallel_LDADD) $(LIBS)

aio-parallel-load$(EXEEXT): $(aio_parallel_load_OBJECTS) $(aio_parallel_load_DEPENDENCIES) $(EXTRA_aio_parallel_load_DEPENDENCIES) 
	@rm -f aio-parallel-load$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aio_parallel_load_OBJECTS) $(aio_parallel_load_LDADD) $(LIBS)

aio-parallel-load-tls$(EXEEXT): $(aio_parallel_load_tls_OBJECTS) $(aio_parallel_load_tls_DEPENDENCIES) $(EXTRA_aio_parallel_load_tls_DEPENDENCIES) 
	@rm -f aio-parallel-load-tls$(EXEEXT)
	$(AM_V_CCLD)$(aio_parallel_load_tls_LINK) $(aio_parallel_load_tls_OBJECTS) $(aio_parallel_load_tls_LDADD) $(LIBS)

aio-parallel-tls$(EXEEXT): $(aio_parallel_tls_OBJECTS) $(aio_parallel_tls_DEPENDENCIES) $(EXTRA_aio_parallel_tls_DEPENDENCIES) 
	@rm -f aio-parallel-tls$(EXEEXT)
	$(AM_V_CCLD)$(aio_parallel_tls_LINK) $(aio_parallel_tls_OBJECTS) $(aio_parallel_tls_LDADD) $(LIBS)

can-cache-flag$(EXEEXT): $(can_cache_flag_OBJECTS) $(can_cache_flag_DEPENDENCIES) $(EXTRA_can_cache_flag_DEPENDENCIES) 
	@rm -f can-cache-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_cache_flag_OBJECTS) $(can_cache_flag_LDADD) $(LIBS)

can-df-flag$(EXEEXT): $(can_df_flag_OBJECTS) $(can_df_flag_DEPENDENCIES) $(EXTRA_can_df_flag_DEPENDENCIES) 
	@rm -f can-df-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_df_flag_OBJECTS) $(can_df_flag_LDADD) $(LIBS)

can-fast-zero-flag$(EXEEXT): $(can_fast_zero_flag_OBJECTS) $(can_fast_zero_flag_DEPENDENCIES) $(EXTRA_can_fast_zero_flag_DEPENDENCIES) 
	@rm -f can-fast-zero-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_fast_zero_flag_OBJECTS) $(can_fast_zero_flag_LDADD) $(LIBS)

can-flush-flag$(EXEEXT): $(can_flush_flag_OBJECTS) $(can_flush_flag_DEPENDENCIES) $(EXTRA_can_flush_flag_DEPENDENCIES) 
	@rm -f can-flush-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_flush_flag_OBJECTS) $(can_flush_flag_LDADD) $(LIBS)

can-fua-flag$(EXEEXT): $(can_fua_flag_OBJECTS) $(can_fua_flag_DEPENDENCIES) $(EXTRA_can_fua_flag_DEPENDENCIES) 
	@rm -f can-fua-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_fua_flag_OBJECTS) $(can_fua_flag_LDADD) $(LIBS)

can-multi-conn-flag$(EXEEXT): $(can_multi_conn_flag_OBJECTS) $(can_multi_conn_flag_DEPENDENCIES) $(EXTRA_can_multi_conn_flag_DEPENDENCIES) 
	@rm -f can-multi-conn-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_multi_conn_flag_OBJECTS) $(can_multi_conn_flag_LDADD) $(LIBS)

can-not-cache-flag$(EXEEXT): $(can_not_cache_flag_OBJECTS) $(can_not_cache_flag_DEPENDENCIES) $(EXTRA_can_not_cache_flag_DEPENDENCIES) 
	@rm -f can-not-cache-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_not_cache_flag_OBJECTS) $(can_not_cache_flag_LDADD) $(LIBS)

can-not-df-flag$(EXEEXT): $(can_not_df_flag_OBJECTS) $(can_not_df_flag_DEPENDENCIES) $(EXTRA_can_not_df_flag_DEPENDENCIES) 
	@rm -f can-not-df-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_not_df_flag_OBJECTS) $(can_not_df_flag_LDADD) $(LIBS)

can-not-fast-zero-flag$(EXEEXT): $(can_not_fast_zero_flag_OBJECTS) $(can_not_fast_zero_flag_DEPENDENCIES) $(EXTRA_can_not_fast_zero_flag_DEPENDENCIES) 
	@rm -f can-not-fast-zero-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_not_fast_zero_flag_OBJECTS) $(can_not_fast_zero_flag_LDADD) $(LIBS)

can-not-flush-flag$(EXEEXT): $(can_not_flush_flag_OBJECTS) $(can_not_flush_flag_DEPENDENCIES) $(EXTRA_can_not_flush_flag_DEPENDENCIES) 
	@rm -f can-not-flush-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_not_flush_flag_OBJECTS) $(can_not_flush_flag_LDADD) $(LIBS)

can-not-fua-flag$(EXEEXT): $(can_not_fua_flag_OBJECTS) $(can_not_fua_flag_DEPENDENCIES) $(EXTRA_can_not_fua_flag_DEPENDENCIES) 
	@rm -f can-not-fua-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_not_fua_flag_OBJECTS) $(can_not_fua_flag_LDADD) $(LIBS)

can-not-multi-conn-flag$(EXEEXT): $(can_not_multi_conn_flag_OBJECTS) $(can_not_multi_conn_flag_DEPENDENCIES) $(EXTRA_can_not_multi_conn_flag_DEPENDENCIES) 
	@rm -f can-not-multi-conn-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_not_multi_conn_flag_OBJECTS) $(can_not_multi_conn_flag_LDADD) $(LIBS)

can-not-trim-flag$(EXEEXT): $(can_not_trim_flag_OBJECTS) $(can_not_trim_flag_DEPENDENCIES) $(EXTRA_can_not_trim_flag_DEPENDENCIES) 
	@rm -f can-not-trim-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_not_trim_flag_OBJECTS) $(can_not_trim_flag_LDADD) $(LIBS)

can-not-zero-flag$(EXEEXT): $(can_not_zero_flag_OBJECTS) $(can_not_zero_flag_DEPENDENCIES) $(EXTRA_can_not_zero_flag_DEPENDENCIES) 
	@rm -f can-not-zero-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_not_zero_flag_OBJECTS) $(can_not_zero_flag_LDADD) $(LIBS)

can-trim-flag$(EXEEXT): $(can_trim_flag_OBJECTS) $(can_trim_flag_DEPENDENCIES) $(EXTRA_can_trim_flag_DEPENDENCIES) 
	@rm -f can-trim-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_trim_flag_OBJECTS) $(can_trim_flag_LDADD) $(LIBS)

can-zero-flag$(EXEEXT): $(can_zero_flag_OBJECTS) $(can_zero_flag_DEPENDENCIES) $(EXTRA_can_zero_flag_DEPENDENCIES) 
	@rm -f can-zero-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(can_zero_flag_OBJECTS) $(can_zero_flag_LDADD) $(LIBS)

close-null$(EXEEXT): $(close_null_OBJECTS) $(close_null_DEPENDENCIES) $(EXTRA_close_null_DEPENDENCIES) 
	@rm -f close-null$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(close_null_OBJECTS) $(close_null_LDADD) $(LIBS)

closure-lifetimes$(EXEEXT): $(closure_lifetimes_OBJECTS) $(closure_lifetimes_DEPENDENCIES) $(EXTRA_closure_lifetimes_DEPENDENCIES) 
	@rm -f closure-lifetimes$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(closure_lifetimes_OBJECTS) $(closure_lifetimes_LDADD) $(LIBS)

compile-c$(EXEEXT): $(compile_c_OBJECTS) $(compile_c_DEPENDENCIES) $(EXTRA_compile_c_DEPENDENCIES) 
	@rm -f compile-c$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(compile_c_OBJECTS) $(compile_c_LDADD) $(LIBS)

compile-cxx$(EXEEXT): $(compile_cxx_OBJECTS) $(compile_cxx_DEPENDENCIES) $(EXTRA_compile_cxx_DEPENDENCIES) 
	@rm -f compile-cxx$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(compile_cxx_OBJECTS) $(compile_cxx_LDADD) $(LIBS)

compile-header-only$(EXEEXT): $(compile_header_only_OBJECTS) $(compile_header_only_DEPENDENCIES) $(EXTRA_compile_header_only_DEPENDENCIES) 
	@rm -f compile-header-only$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(compile_header_only_OBJECTS) $(compile_header_only_LDADD) $(LIBS)

compile-iso-c99$(EXEEXT): $(compile_iso_c99_OBJECTS) $(compile_iso_c99_DEPENDENCIES) $(EXTRA_compile_iso_c99_DEPENDENCIES) 
	@rm -f compile-iso-c99$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(compile_iso_c99_OBJECTS) $(compile_iso_c99_LDADD) $(LIBS)

connect-systemd-socket-activation$(EXEEXT): $(connect_systemd_socket_activation_OBJECTS) $(connect_systemd_socket_activation_DEPENDENCIES) $(EXTRA_connect_systemd_socket_activation_DEPENDENCIES) 
	@rm -f connect-systemd-socket-activation$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(connect_systemd_socket_activation_OBJECTS) $(connect_systemd_socket_activation_LDADD) $(LIBS)

connect-tcp$(EXEEXT): $(connect_tcp_OBJECTS) $(connect_tcp_DEPENDENCIES) $(EXTRA_connect_tcp_DEPENDENCIES) 
	@rm -f connect-tcp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(connect_tcp_OBJECTS) $(connect_tcp_LDADD) $(LIBS)

connect-tcp6$(EXEEXT): $(connect_tcp6_OBJECTS) $(connect_tcp6_DEPENDENCIES) $(EXTRA_connect_tcp6_DEPENDENCIES) 
	@rm -f connect-tcp6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(connect_tcp6_OBJECTS) $(connect_tcp6_LDADD) $(LIBS)

connect-tls-certs$(EXEEXT): $(connect_tls_certs_OBJECTS) $(connect_tls_certs_DEPENDENCIES) $(EXTRA_connect_tls_certs_DEPENDENCIES) 
	@rm -f connect-tls-certs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(connect_tls_certs_OBJECTS) $(connect_tls_certs_LDADD) $(LIBS)

connect-tls-psk$(EXEEXT): $(connect_tls_psk_OBJECTS) $(connect_tls_psk_DEPENDENCIES) $(EXTRA_connect_tls_psk_DEPENDENCIES) 
	@rm -f connect-tls-psk$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(connect_tls_psk_OBJECTS) $(connect_tls_psk_LDADD) $(LIBS)

connect-unix$(EXEEXT): $(connect_unix_OBJECTS) $(connect_unix_DEPENDENCIES) $(EXTRA_connect_unix_DEPENDENCIES) 
	@rm -f connect-unix$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(connect_unix_OBJECTS) $(connect_unix_LDADD) $(LIBS)

connect-uri-nbd$(EXEEXT): $(connect_uri_nbd_OBJECTS) $(connect_uri_nbd_DEPENDENCIES) $(EXTRA_connect_uri_nbd_DEPENDENCIES) 
	@rm -f connect-uri-nbd$(EXEEXT)
	$(AM_V_CCLD)$(connect_uri_nbd_LINK) $(connect_uri_nbd_OBJECTS) $(connect_uri_nbd_LDADD) $(LIBS)

connect-uri-nbd-unix$(EXEEXT): $(connect_uri_nbd_unix_OBJECTS) $(connect_uri_nbd_unix_DEPENDENCIES) $(EXTRA_connect_uri_nbd_unix_DEPENDENCIES) 
	@rm -f connect-uri-nbd-unix$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(connect_uri_nbd_unix_OBJECTS) $(connect_uri_nbd_unix_LDADD) $(LIBS)

connect-uri-nbds-certs$(EXEEXT): $(connect_uri_nbds_certs_OBJECTS) $(connect_uri_nbds_certs_DEPENDENCIES) $(EXTRA_connect_uri_nbds_certs_DEPENDENCIES) 
	@rm -f connect-uri-nbds-certs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(connect_uri_nbds_certs_OBJECTS) $(connect_uri_nbds_certs_LDADD) $(LIBS)

connect-uri-nbds-psk$(EXEEXT): $(connect_uri_nbds_psk_OBJECTS) $(connect_uri_nbds_psk_DEPENDENCIES) $(EXTRA_connect_uri_nbds_psk_DEPENDENCIES) 
	@rm -f connect-uri-nbds-psk$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(connect_uri_nbds_psk_OBJECTS) $(connect_uri_nbds_psk_LDADD) $(LIBS)

connect-uri-nbds-unix-certs$(EXEEXT): $(connect_uri_nbds_unix_certs_OBJECTS) $(connect_uri_nbds_unix_certs_DEPENDENCIES) $(EXTRA_connect_uri_nbds_unix_certs_DEPENDENCIES) 
	@rm -f connect-uri-nbds-unix-certs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(connect_uri_nbds_unix_certs_OBJECTS) $(connect_uri_nbds_unix_certs_LDADD) $(LIBS)

connect-uri-nbds-unix-psk$(EXEEXT): $(connect_uri_nbds_unix_psk_OBJECTS) $(connect_uri_nbds_unix_psk_DEPENDENCIES) $(EXTRA_connect_uri_nbds_unix_psk_DEPENDENCIES) 
	@rm -f connect-uri-nbds-unix-psk$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(connect_uri_nbds_unix_psk_OBJECTS) $(connect_uri_nbds_unix_psk_LDADD) $(LIBS)

debug$(EXEEXT): $(debug_OBJECTS) $(debug_DEPENDENCIES) $(EXTRA_debug_DEPENDENCIES) 
	@rm -f debug$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(debug_OBJECTS) $(debug_LDADD) $(LIBS)

debug-environment$(EXEEXT): $(debug_environment_OBJECTS) $(debug_environment_DEPENDENCIES) $(EXTRA_debug_environment_DEPENDENCIES) 
	@rm -f debug-environment$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(debug_environment_OBJECTS) $(debug_environment_LDADD) $(LIBS)

dlopen$(EXEEXT): $(dlopen_OBJECTS) $(dlopen_DEPENDENCIES) $(EXTRA_dlopen_DEPENDENCIES) 
	@rm -f dlopen$(EXEEXT)
	$(AM_V_CCLD)$(dlopen_LINK) $(dlopen_OBJECTS) $(dlopen_LDADD) $(LIBS)

errors-bad-cookie$(EXEEXT): $(errors_bad_cookie_OBJECTS) $(errors_bad_cookie_DEPENDENCIES) $(EXTRA_errors_bad_cookie_DEPENDENCIES) 
	@rm -f errors-bad-cookie$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_bad_cookie_OBJECTS) $(errors_bad_cookie_LDADD) $(LIBS)

errors-bitmask$(EXEEXT): $(errors_bitmask_OBJECTS) $(errors_bitmask_DEPENDENCIES) $(EXTRA_errors_bitmask_DEPENDENCIES) 
	@rm -f errors-bitmask$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_bitmask_OBJECTS) $(errors_bitmask_LDADD) $(LIBS)

errors-client-oversize$(EXEEXT): $(errors_client_oversize_OBJECTS) $(errors_client_oversize_DEPENDENCIES) $(EXTRA_errors_client_oversize_DEPENDENCIES) 
	@rm -f errors-client-oversize$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_client_oversize_OBJECTS) $(errors_client_oversize_LDADD) $(LIBS)

errors-client-unadvertised-cmd$(EXEEXT): $(errors_client_unadvertised_cmd_OBJECTS) $(errors_client_unadvertised_cmd_DEPENDENCIES) $(EXTRA_errors_client_unadvertised_cmd_DEPENDENCIES) 
	@rm -f errors-client-unadvertised-cmd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_client_unadvertised_cmd_OBJECTS) $(errors_client_unadvertised_cmd_LDADD) $(LIBS)

errors-client-unaligned$(EXEEXT): $(errors_client_unaligned_OBJECTS) $(errors_client_unaligned_DEPENDENCIES) $(EXTRA_errors_client_unaligned_DEPENDENCIES) 
	@rm -f errors-client-unaligned$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_client_unaligned_OBJECTS) $(errors_client_unaligned_LDADD) $(LIBS)

errors-client-unknown-flags$(EXEEXT): $(errors_client_unknown_flags_OBJECTS) $(errors_client_unknown_flags_DEPENDENCIES) $(EXTRA_errors_client_unknown_flags_DEPENDENCIES) 
	@rm -f errors-client-unknown-flags$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_client_unknown_flags_OBJECTS) $(errors_client_unknown_flags_LDADD) $(LIBS)

errors-client-zerosize$(EXEEXT): $(errors_client_zerosize_OBJECTS) $(errors_client_zerosize_DEPENDENCIES) $(EXTRA_errors_client_zerosize_DEPENDENCIES) 
	@rm -f errors-client-zerosize$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_client_zerosize_OBJECTS) $(errors_client_zerosize_LDADD) $(LIBS)

errors-connect-null$(EXEEXT): $(errors_connect_null_OBJECTS) $(errors_connect_null_DEPENDENCIES) $(EXTRA_errors_connect_null_DEPENDENCIES) 
	@rm -f errors-connect-null$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_connect_null_OBJECTS) $(errors_connect_null_LDADD) $(LIBS)

errors-connect-twice$(EXEEXT): $(errors_connect_twice_OBJECTS) $(errors_connect_twice_DEPENDENCIES) $(EXTRA_errors_connect_twice_DEPENDENCIES) 
	@rm -f errors-connect-twice$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_connect_twice_OBJECTS) $(errors_connect_twice_LDADD) $(LIBS)

errors-enum$(EXEEXT): $(errors_enum_OBJECTS) $(errors_enum_DEPENDENCIES) $(EXTRA_errors_enum_DEPENDENCIES) 
	@rm -f errors-enum$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_enum_OBJECTS) $(errors_enum_LDADD) $(LIBS)

errors-multiple-disconnects$(EXEEXT): $(errors_multiple_disconnects_OBJECTS) $(errors_multiple_disconnects_DEPENDENCIES) $(EXTRA_errors_multiple_disconnects_DEPENDENCIES) 
	@rm -f errors-multiple-disconnects$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_multiple_disconnects_OBJECTS) $(errors_multiple_disconnects_LDADD) $(LIBS)

errors-name-too-long$(EXEEXT): $(errors_name_too_long_OBJECTS) $(errors_name_too_long_DEPENDENCIES) $(EXTRA_errors_name_too_long_DEPENDENCIES) 
	@rm -f errors-name-too-long$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_name_too_long_OBJECTS) $(errors_name_too_long_LDADD) $(LIBS)

errors-not-connected$(EXEEXT): $(errors_not_connected_OBJECTS) $(errors_not_connected_DEPENDENCIES) $(EXTRA_errors_not_connected_DEPENDENCIES) 
	@rm -f errors-not-connected$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_not_connected_OBJECTS) $(errors_not_connected_LDADD) $(LIBS)

errors-not-negotiating$(EXEEXT): $(errors_not_negotiating_OBJECTS) $(errors_not_negotiating_DEPENDENCIES) $(EXTRA_errors_not_negotiating_DEPENDENCIES) 
	@rm -f errors-not-negotiating$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_not_negotiating_OBJECTS) $(errors_not_negotiating_LDADD) $(LIBS)

errors-not-negotiating-aio$(EXEEXT): $(errors_not_negotiating_aio_OBJECTS) $(errors_not_negotiating_aio_DEPENDENCIES) $(EXTRA_errors_not_negotiating_aio_DEPENDENCIES) 
	@rm -f errors-not-negotiating-aio$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_not_negotiating_aio_OBJECTS) $(errors_not_negotiating_aio_LDADD) $(LIBS)

errors-notify-not-blocked$(EXEEXT): $(errors_notify_not_blocked_OBJECTS) $(errors_notify_not_blocked_DEPENDENCIES) $(EXTRA_errors_notify_not_blocked_DEPENDENCIES) 
	@rm -f errors-notify-not-blocked$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_notify_not_blocked_OBJECTS) $(errors_notify_not_blocked_LDADD) $(LIBS)

errors-poll-no-fd$(EXEEXT): $(errors_poll_no_fd_OBJECTS) $(errors_poll_no_fd_DEPENDENCIES) $(EXTRA_errors_poll_no_fd_DEPENDENCIES) 
	@rm -f errors-poll-no-fd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_poll_no_fd_OBJECTS) $(errors_poll_no_fd_LDADD) $(LIBS)

errors-pread-structured$(EXEEXT): $(errors_pread_structured_OBJECTS) $(errors_pread_structured_DEPENDENCIES) $(EXTRA_errors_pread_structured_DEPENDENCIES) 
	@rm -f errors-pread-structured$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_pread_structured_OBJECTS) $(errors_pread_structured_LDADD) $(LIBS)

errors-server-invalid-offset$(EXEEXT): $(errors_server_invalid_offset_OBJECTS) $(errors_server_invalid_offset_DEPENDENCIES) $(EXTRA_errors_server_invalid_offset_DEPENDENCIES) 
	@rm -f errors-server-invalid-offset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_server_invalid_offset_OBJECTS) $(errors_server_invalid_offset_LDADD) $(LIBS)

errors-server-oversize$(EXEEXT): $(errors_server_oversize_OBJECTS) $(errors_server_oversize_DEPENDENCIES) $(EXTRA_errors_server_oversize_DEPENDENCIES) 
	@rm -f errors-server-oversize$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_server_oversize_OBJECTS) $(errors_server_oversize_LDADD) $(LIBS)

errors-server-unadvertised-cmd$(EXEEXT): $(errors_server_unadvertised_cmd_OBJECTS) $(errors_server_unadvertised_cmd_DEPENDENCIES) $(EXTRA_errors_server_unadvertised_cmd_DEPENDENCIES) 
	@rm -f errors-server-unadvertised-cmd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_server_unadvertised_cmd_OBJECTS) $(errors_server_unadvertised_cmd_LDADD) $(LIBS)

errors-server-unaligned$(EXEEXT): $(errors_server_unaligned_OBJECTS) $(errors_server_unaligned_DEPENDENCIES) $(EXTRA_errors_server_unaligned_DEPENDENCIES) 
	@rm -f errors-server-unaligned$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_server_unaligned_OBJECTS) $(errors_server_unaligned_LDADD) $(LIBS)

errors-server-unknown-flags$(EXEEXT): $(errors_server_unknown_flags_OBJECTS) $(errors_server_unknown_flags_DEPENDENCIES) $(EXTRA_errors_server_unknown_flags_DEPENDENCIES) 
	@rm -f errors-server-unknown-flags$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_server_unknown_flags_OBJECTS) $(errors_server_unknown_flags_LDADD) $(LIBS)

errors-server-zerosize$(EXEEXT): $(errors_server_zerosize_OBJECTS) $(errors_server_zerosize_DEPENDENCIES) $(EXTRA_errors_server_zerosize_DEPENDENCIES) 
	@rm -f errors-server-zerosize$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errors_server_zerosize_OBJECTS) $(errors_server_zerosize_LDADD) $(LIBS)

export-name$(EXEEXT): $(export_name_OBJECTS) $(export_name_DEPENDENCIES) $(EXTRA_export_name_DEPENDENCIES) 
	@rm -f export-name$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(export_name_OBJECTS) $(export_name_LDADD) $(LIBS)

get-size$(EXEEXT): $(get_size_OBJECTS) $(get_size_DEPENDENCIES) $(EXTRA_get_size_DEPENDENCIES) 
	@rm -f get-size$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_size_OBJECTS) $(get_size_LDADD) $(LIBS)

get-version$(EXEEXT): $(get_version_OBJECTS) $(get_version_DEPENDENCIES) $(EXTRA_get_version_DEPENDENCIES) 
	@rm -f get-version$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_version_OBJECTS) $(get_version_LDADD) $(LIBS)

is-not-rotational-flag$(EXEEXT): $(is_not_rotational_flag_OBJECTS) $(is_not_rotational_flag_DEPENDENCIES) $(EXTRA_is_not_rotational_flag_DEPENDENCIES) 
	@rm -f is-not-rotational-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(is_not_rotational_flag_OBJECTS) $(is_not_rotational_flag_LDADD) $(LIBS)

is-rotational-flag$(EXEEXT): $(is_rotational_flag_OBJECTS) $(is_rotational_flag_DEPENDENCIES) $(EXTRA_is_rotational_flag_DEPENDENCIES) 
	@rm -f is-rotational-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(is_rotational_flag_OBJECTS) $(is_rotational_flag_LDADD) $(LIBS)

meta-base-allocation$(EXEEXT): $(meta_base_allocation_OBJECTS) $(meta_base_allocation_DEPENDENCIES) $(EXTRA_meta_base_allocation_DEPENDENCIES) 
	@rm -f meta-base-allocation$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(meta_base_allocation_OBJECTS) $(meta_base_allocation_LDADD) $(LIBS)

newstyle-limited$(EXEEXT): $(newstyle_limited_OBJECTS) $(newstyle_limited_DEPENDENCIES) $(EXTRA_newstyle_limited_DEPENDENCIES) 
	@rm -f newstyle-limited$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(newstyle_limited_OBJECTS) $(newstyle_limited_LDADD) $(LIBS)

oldstyle$(EXEEXT): $(oldstyle_OBJECTS) $(oldstyle_DEPENDENCIES) $(EXTRA_oldstyle_DEPENDENCIES) 
	@rm -f oldstyle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(oldstyle_OBJECTS) $(oldstyle_LDADD) $(LIBS)

opt-abort$(EXEEXT): $(opt_abort_OBJECTS) $(opt_abort_DEPENDENCIES) $(EXTRA_opt_abort_DEPENDENCIES) 
	@rm -f opt-abort$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(opt_abort_OBJECTS) $(opt_abort_LDADD) $(LIBS)

opt-info$(EXEEXT): $(opt_info_OBJECTS) $(opt_info_DEPENDENCIES) $(EXTRA_opt_info_DEPENDENCIES) 
	@rm -f opt-info$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(opt_info_OBJECTS) $(opt_info_LDADD) $(LIBS)

opt-list$(EXEEXT): $(opt_list_OBJECTS) $(opt_list_DEPENDENCIES) $(EXTRA_opt_list_DEPENDENCIES) 
	@rm -f opt-list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(opt_list_OBJECTS) $(opt_list_LDADD) $(LIBS)

opt-list-meta$(EXEEXT): $(opt_list_meta_OBJECTS) $(opt_list_meta_DEPENDENCIES) $(EXTRA_opt_list_meta_DEPENDENCIES) 
	@rm -f opt-list-meta$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(opt_list_meta_OBJECTS) $(opt_list_meta_LDADD) $(LIBS)

opt-list-meta-queries$(EXEEXT): $(opt_list_meta_queries_OBJECTS) $(opt_list_meta_queries_DEPENDENCIES) $(EXTRA_opt_list_meta_queries_DEPENDENCIES) 
	@rm -f opt-list-meta-queries$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(opt_list_meta_queries_OBJECTS) $(opt_list_meta_queries_LDADD) $(LIBS)

opt-set-meta$(EXEEXT): $(opt_set_meta_OBJECTS) $(opt_set_meta_DEPENDENCIES) $(EXTRA_opt_set_meta_DEPENDENCIES) 
	@rm -f opt-set-meta$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(opt_set_meta_OBJECTS) $(opt_set_meta_LDADD) $(LIBS)

opt-set-meta-queries$(EXEEXT): $(opt_set_meta_queries_OBJECTS) $(opt_set_meta_queries_DEPENDENCIES) $(EXTRA_opt_set_meta_queries_DEPENDENCIES) 
	@rm -f opt-set-meta-queries$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(opt_set_meta_queries_OBJECTS) $(opt_set_meta_queries_LDADD) $(LIBS)

opt-starttls$(EXEEXT): $(opt_starttls_OBJECTS) $(opt_starttls_DEPENDENCIES) $(EXTRA_opt_starttls_DEPENDENCIES) 
	@rm -f opt-starttls$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(opt_starttls_OBJECTS) $(opt_starttls_LDADD) $(LIBS)

opt-structured-twice$(EXEEXT): $(opt_structured_twice_OBJECTS) $(opt_structured_twice_DEPENDENCIES) $(EXTRA_opt_structured_twice_DEPENDENCIES) 
	@rm -f opt-structured-twice$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(opt_structured_twice_OBJECTS) $(opt_structured_twice_LDADD) $(LIBS)

pread-initialize$(EXEEXT): $(pread_initialize_OBJECTS) $(pread_initialize_DEPENDENCIES) $(EXTRA_pread_initialize_DEPENDENCIES) 
	@rm -f pread-initialize$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pread_initialize_OBJECTS) $(pread_initialize_LDADD) $(LIBS)

private-data$(EXEEXT): $(private_data_OBJECTS) $(private_data_DEPENDENCIES) $(EXTRA_private_data_DEPENDENCIES) 
	@rm -f private-data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(private_data_OBJECTS) $(private_data_LDADD) $(LIBS)

pwrite-extended$(EXEEXT): $(pwrite_extended_OBJECTS) $(pwrite_extended_DEPENDENCIES) $(EXTRA_pwrite_extended_DEPENDENCIES) 
	@rm -f pwrite-extended$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pwrite_extended_OBJECTS) $(pwrite_extended_LDADD) $(LIBS)

read-only-flag$(EXEEXT): $(read_only_flag_OBJECTS) $(read_only_flag_DEPENDENCIES) $(EXTRA_read_only_flag_DEPENDENCIES) 
	@rm -f read-only-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(read_only_flag_OBJECTS) $(read_only_flag_LDADD) $(LIBS)

read-write-flag$(EXEEXT): $(read_write_flag_OBJECTS) $(read_write_flag_DEPENDENCIES) $(EXTRA_read_write_flag_DEPENDENCIES) 
	@rm -f read-write-flag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(read_write_flag_OBJECTS) $(read_write_flag_LDADD) $(LIBS)

server-death$(EXEEXT): $(server_death_OBJECTS) $(server_death_DEPENDENCIES) $(EXTRA_server_death_DEPENDENCIES) 
	@rm -f server-death$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(server_death_OBJECTS) $(server_death_LDADD) $(LIBS)

shutdown-flags$(EXEEXT): $(shutdown_flags_OBJECTS) $(shutdown_flags_DEPENDENCIES) $(EXTRA_shutdown_flags_DEPENDENCIES) 
	@rm -f shutdown-flags$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shutdown_flags_OBJECTS) $(shutdown_flags_LDADD) $(LIBS)

shutdown-opt-mode$(EXEEXT): $(shutdown_opt_mode_OBJECTS) $(shutdown_opt_mode_DEPENDENCIES) $(EXTRA_shutdown_opt_mode_DEPENDENCIES) 
	@rm -f shutdown-opt-mode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shutdown_opt_mode_OBJECTS) $(shutdown_opt_mode_LDADD) $(LIBS)

socket-activation-name$(EXEEXT): $(socket_activation_name_OBJECTS) $(socket_activation_name_DEPENDENCIES) $(EXTRA_socket_activation_name_DEPENDENCIES) 
	@rm -f socket-activation-name$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(socket_activation_name_OBJECTS) $(socket_activation_name_LDADD) $(LIBS)

synch-parallel$(EXEEXT): $(synch_parallel_OBJECTS) $(synch_parallel_DEPENDENCIES) $(EXTRA_synch_parallel_DEPENDENCIES) 
	@rm -f synch-parallel$(EXEEXT)
	$(AM_V_CCLD)$(synch_parallel_LINK) $(synch_parallel_OBJECTS) $(synch_parallel_LDADD) $(LIBS)

synch-parallel-tls$(EXEEXT): $(synch_parallel_tls_OBJECTS) $(synch_parallel_tls_DEPENDENCIES) $(EXTRA_synch_parallel_tls_DEPENDENCIES) 
	@rm -f synch-parallel-tls$(EXEEXT)
	$(AM_V_CCLD)$(synch_parallel_tls_LINK) $(synch_parallel_tls_OBJECTS) $(synch_parallel_tls_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aio-connect-port.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aio-connect.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aio-parallel-load.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aio_parallel-aio-parallel.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aio_parallel_load_tls-aio-parallel-load.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aio_parallel_tls-aio-parallel.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_cache_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_cache_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_df_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_df_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_fast_zero_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_fast_zero_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_flush_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_flush_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_fua_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_fua_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_multi_conn_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_multi_conn_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_cache_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_cache_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_df_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_df_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_fast_zero_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_fast_zero_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_flush_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_flush_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_fua_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_fua_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_multi_conn_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_multi_conn_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_trim_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_trim_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_zero_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_not_zero_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_trim_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_trim_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_zero_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/can_zero_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/close-null.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/closure-lifetimes.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compile-c.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compile-cxx.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compile-header-only.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compile_iso_c99-compile-iso-c99.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect-systemd-socket-activation.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect-tcp.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect-tcp6.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect-unix.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_tls_certs-connect-tls.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_tls_certs-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_tls_psk-connect-tls.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_tls_psk-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_uri_nbd-connect-uri.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_uri_nbd-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_uri_nbd_unix-connect-uri.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_uri_nbd_unix-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_uri_nbds_certs-connect-uri.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_uri_nbds_certs-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_uri_nbds_psk-connect-uri.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_uri_nbds_psk-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_uri_nbds_unix_certs-connect-uri.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_uri_nbds_unix_certs-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_uri_nbds_unix_psk-connect-uri.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect_uri_nbds_unix_psk-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debug-environment.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debug.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlopen-dlopen.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-bad-cookie.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-bitmask.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-client-oversize.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-client-unadvertised-cmd.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-client-unaligned.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-client-unknown-flags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-client-zerosize.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-connect-null.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-connect-twice.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-enum.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-multiple-disconnects.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-name-too-long.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-not-connected.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-not-negotiating-aio.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-not-negotiating.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-notify-not-blocked.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-poll-no-fd.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-pread-structured.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-server-invalid-offset.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-server-oversize.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-server-unadvertised-cmd.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-server-unaligned.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-server-unknown-flags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors-server-zerosize.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/export-name.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/get-size.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/get-version.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/is_not_rotational_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/is_not_rotational_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/is_rotational_flag-eflags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/is_rotational_flag-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/meta-base-allocation.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/newstyle-limited.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/oldstyle.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opt-abort.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opt-list-meta-queries.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opt-list-meta.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opt-set-meta-queries.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opt-starttls.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opt-structured-twice.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opt_info-opt-info.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opt_list-opt-list.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opt_list-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opt_set_meta-opt-set-meta.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opt_set_meta-requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pick-a-port.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pread-initialize.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/private-data.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pwrite-extended.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/read-only-flag.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/read-write-flag.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/requires.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/server-death.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shutdown-flags.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shutdown-opt-mode.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socket-activation-name.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/synch_parallel-synch-parallel.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/synch_parallel_tls-synch-parallel.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

aio_parallel-aio-parallel.o: aio-parallel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aio_parallel_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT aio_parallel-aio-parallel.o -MD -MP -MF $(DEPDIR)/aio_parallel-aio-parallel.Tpo -c -o aio_parallel-aio-parallel.o `test -f 'aio-parallel.c' || echo '$(srcdir)/'`aio-parallel.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/aio_parallel-aio-parallel.Tpo $(DEPDIR)/aio_parallel-aio-parallel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='aio-parallel.c' object='aio_parallel-aio-parallel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aio_parallel_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o aio_parallel-aio-parallel.o `test -f 'aio-parallel.c' || echo '$(srcdir)/'`aio-parallel.c

aio_parallel-aio-parallel.obj: aio-parallel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aio_parallel_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT aio_parallel-aio-parallel.obj -MD -MP -MF $(DEPDIR)/aio_parallel-aio-parallel.Tpo -c -o aio_parallel-aio-parallel.obj `if test -f 'aio-parallel.c'; then $(CYGPATH_W) 'aio-parallel.c'; else $(CYGPATH_W) '$(srcdir)/aio-parallel.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/aio_parallel-aio-parallel.Tpo $(DEPDIR)/aio_parallel-aio-parallel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='aio-parallel.c' object='aio_parallel-aio-parallel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aio_parallel_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o aio_parallel-aio-parallel.obj `if test -f 'aio-parallel.c'; then $(CYGPATH_W) 'aio-parallel.c'; else $(CYGPATH_W) '$(srcdir)/aio-parallel.c'; fi`

aio_parallel_load_tls-aio-parallel-load.o: aio-parallel-load.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aio_parallel_load_tls_CPPFLAGS) $(CPPFLAGS) $(aio_parallel_load_tls_CFLAGS) $(CFLAGS) -MT aio_parallel_load_tls-aio-parallel-load.o -MD -MP -MF $(DEPDIR)/aio_parallel_load_tls-aio-parallel-load.Tpo -c -o aio_parallel_load_tls-aio-parallel-load.o `test -f 'aio-parallel-load.c' || echo '$(srcdir)/'`aio-parallel-load.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/aio_parallel_load_tls-aio-parallel-load.Tpo $(DEPDIR)/aio_parallel_load_tls-aio-parallel-load.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='aio-parallel-load.c' object='aio_parallel_load_tls-aio-parallel-load.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aio_parallel_load_tls_CPPFLAGS) $(CPPFLAGS) $(aio_parallel_load_tls_CFLAGS) $(CFLAGS) -c -o aio_parallel_load_tls-aio-parallel-load.o `test -f 'aio-parallel-load.c' || echo '$(srcdir)/'`aio-parallel-load.c

aio_parallel_load_tls-aio-parallel-load.obj: aio-parallel-load.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aio_parallel_load_tls_CPPFLAGS) $(CPPFLAGS) $(aio_parallel_load_tls_CFLAGS) $(CFLAGS) -MT aio_parallel_load_tls-aio-parallel-load.obj -MD -MP -MF $(DEPDIR)/aio_parallel_load_tls-aio-parallel-load.Tpo -c -o aio_parallel_load_tls-aio-parallel-load.obj `if test -f 'aio-parallel-load.c'; then $(CYGPATH_W) 'aio-parallel-load.c'; else $(CYGPATH_W) '$(srcdir)/aio-parallel-load.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/aio_parallel_load_tls-aio-parallel-load.Tpo $(DEPDIR)/aio_parallel_load_tls-aio-parallel-load.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='aio-parallel-load.c' object='aio_parallel_load_tls-aio-parallel-load.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aio_parallel_load_tls_CPPFLAGS) $(CPPFLAGS) $(aio_parallel_load_tls_CFLAGS) $(CFLAGS) -c -o aio_parallel_load_tls-aio-parallel-load.obj `if test -f 'aio-parallel-load.c'; then $(CYGPATH_W) 'aio-parallel-load.c'; else $(CYGPATH_W) '$(srcdir)/aio-parallel-load.c'; fi`

aio_parallel_tls-aio-parallel.o: aio-parallel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aio_parallel_tls_CPPFLAGS) $(CPPFLAGS) $(aio_parallel_tls_CFLAGS) $(CFLAGS) -MT aio_parallel_tls-aio-parallel.o -MD -MP -MF $(DEPDIR)/aio_parallel_tls-aio-parallel.Tpo -c -o aio_parallel_tls-aio-parallel.o `test -f 'aio-parallel.c' || echo '$(srcdir)/'`aio-parallel.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/aio_parallel_tls-aio-parallel.Tpo $(DEPDIR)/aio_parallel_tls-aio-parallel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='aio-parallel.c' object='aio_parallel_tls-aio-parallel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aio_parallel_tls_CPPFLAGS) $(CPPFLAGS) $(aio_parallel_tls_CFLAGS) $(CFLAGS) -c -o aio_parallel_tls-aio-parallel.o `test -f 'aio-parallel.c' || echo '$(srcdir)/'`aio-parallel.c

aio_parallel_tls-aio-parallel.obj: aio-parallel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aio_parallel_tls_CPPFLAGS) $(CPPFLAGS) $(aio_parallel_tls_CFLAGS) $(CFLAGS) -MT aio_parallel_tls-aio-parallel.obj -MD -MP -MF $(DEPDIR)/aio_parallel_tls-aio-parallel.Tpo -c -o aio_parallel_tls-aio-parallel.obj `if test -f 'aio-parallel.c'; then $(CYGPATH_W) 'aio-parallel.c'; else $(CYGPATH_W) '$(srcdir)/aio-parallel.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/aio_parallel_tls-aio-parallel.Tpo $(DEPDIR)/aio_parallel_tls-aio-parallel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='aio-parallel.c' object='aio_parallel_tls-aio-parallel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aio_parallel_tls_CPPFLAGS) $(CPPFLAGS) $(aio_parallel_tls_CFLAGS) $(CFLAGS) -c -o aio_parallel_tls-aio-parallel.obj `if test -f 'aio-parallel.c'; then $(CYGPATH_W) 'aio-parallel.c'; else $(CYGPATH_W) '$(srcdir)/aio-parallel.c'; fi`

can_cache_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_cache_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_cache_flag-eflags.Tpo -c -o can_cache_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_cache_flag-eflags.Tpo $(DEPDIR)/can_cache_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_cache_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_cache_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_cache_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_cache_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_cache_flag-eflags.Tpo -c -o can_cache_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_cache_flag-eflags.Tpo $(DEPDIR)/can_cache_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_cache_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_cache_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_cache_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_cache_flag-requires.o -MD -MP -MF $(DEPDIR)/can_cache_flag-requires.Tpo -c -o can_cache_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_cache_flag-requires.Tpo $(DEPDIR)/can_cache_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_cache_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_cache_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_cache_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_cache_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_cache_flag-requires.Tpo -c -o can_cache_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_cache_flag-requires.Tpo $(DEPDIR)/can_cache_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_cache_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_cache_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

can_df_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_df_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_df_flag-eflags.Tpo -c -o can_df_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_df_flag-eflags.Tpo $(DEPDIR)/can_df_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_df_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_df_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_df_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_df_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_df_flag-eflags.Tpo -c -o can_df_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_df_flag-eflags.Tpo $(DEPDIR)/can_df_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_df_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_df_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_df_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_df_flag-requires.o -MD -MP -MF $(DEPDIR)/can_df_flag-requires.Tpo -c -o can_df_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_df_flag-requires.Tpo $(DEPDIR)/can_df_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_df_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_df_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_df_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_df_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_df_flag-requires.Tpo -c -o can_df_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_df_flag-requires.Tpo $(DEPDIR)/can_df_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_df_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_df_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

can_fast_zero_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_fast_zero_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_fast_zero_flag-eflags.Tpo -c -o can_fast_zero_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_fast_zero_flag-eflags.Tpo $(DEPDIR)/can_fast_zero_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_fast_zero_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_fast_zero_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_fast_zero_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_fast_zero_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_fast_zero_flag-eflags.Tpo -c -o can_fast_zero_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_fast_zero_flag-eflags.Tpo $(DEPDIR)/can_fast_zero_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_fast_zero_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_fast_zero_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_fast_zero_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_fast_zero_flag-requires.o -MD -MP -MF $(DEPDIR)/can_fast_zero_flag-requires.Tpo -c -o can_fast_zero_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_fast_zero_flag-requires.Tpo $(DEPDIR)/can_fast_zero_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_fast_zero_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_fast_zero_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_fast_zero_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_fast_zero_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_fast_zero_flag-requires.Tpo -c -o can_fast_zero_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_fast_zero_flag-requires.Tpo $(DEPDIR)/can_fast_zero_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_fast_zero_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_fast_zero_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

can_flush_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_flush_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_flush_flag-eflags.Tpo -c -o can_flush_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_flush_flag-eflags.Tpo $(DEPDIR)/can_flush_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_flush_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_flush_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_flush_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_flush_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_flush_flag-eflags.Tpo -c -o can_flush_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_flush_flag-eflags.Tpo $(DEPDIR)/can_flush_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_flush_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_flush_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_flush_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_flush_flag-requires.o -MD -MP -MF $(DEPDIR)/can_flush_flag-requires.Tpo -c -o can_flush_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_flush_flag-requires.Tpo $(DEPDIR)/can_flush_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_flush_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_flush_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_flush_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_flush_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_flush_flag-requires.Tpo -c -o can_flush_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_flush_flag-requires.Tpo $(DEPDIR)/can_flush_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_flush_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_flush_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

can_fua_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_fua_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_fua_flag-eflags.Tpo -c -o can_fua_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_fua_flag-eflags.Tpo $(DEPDIR)/can_fua_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_fua_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_fua_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_fua_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_fua_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_fua_flag-eflags.Tpo -c -o can_fua_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_fua_flag-eflags.Tpo $(DEPDIR)/can_fua_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_fua_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_fua_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_fua_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_fua_flag-requires.o -MD -MP -MF $(DEPDIR)/can_fua_flag-requires.Tpo -c -o can_fua_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_fua_flag-requires.Tpo $(DEPDIR)/can_fua_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_fua_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_fua_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_fua_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_fua_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_fua_flag-requires.Tpo -c -o can_fua_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_fua_flag-requires.Tpo $(DEPDIR)/can_fua_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_fua_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_fua_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

can_multi_conn_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_multi_conn_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_multi_conn_flag-eflags.Tpo -c -o can_multi_conn_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_multi_conn_flag-eflags.Tpo $(DEPDIR)/can_multi_conn_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_multi_conn_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_multi_conn_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_multi_conn_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_multi_conn_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_multi_conn_flag-eflags.Tpo -c -o can_multi_conn_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_multi_conn_flag-eflags.Tpo $(DEPDIR)/can_multi_conn_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_multi_conn_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_multi_conn_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_multi_conn_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_multi_conn_flag-requires.o -MD -MP -MF $(DEPDIR)/can_multi_conn_flag-requires.Tpo -c -o can_multi_conn_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_multi_conn_flag-requires.Tpo $(DEPDIR)/can_multi_conn_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_multi_conn_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_multi_conn_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_multi_conn_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_multi_conn_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_multi_conn_flag-requires.Tpo -c -o can_multi_conn_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_multi_conn_flag-requires.Tpo $(DEPDIR)/can_multi_conn_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_multi_conn_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_multi_conn_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

can_not_cache_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_cache_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_not_cache_flag-eflags.Tpo -c -o can_not_cache_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_cache_flag-eflags.Tpo $(DEPDIR)/can_not_cache_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_cache_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_cache_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_not_cache_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_cache_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_not_cache_flag-eflags.Tpo -c -o can_not_cache_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_cache_flag-eflags.Tpo $(DEPDIR)/can_not_cache_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_cache_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_cache_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_not_cache_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_cache_flag-requires.o -MD -MP -MF $(DEPDIR)/can_not_cache_flag-requires.Tpo -c -o can_not_cache_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_cache_flag-requires.Tpo $(DEPDIR)/can_not_cache_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_cache_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_cache_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_not_cache_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_cache_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_not_cache_flag-requires.Tpo -c -o can_not_cache_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_cache_flag-requires.Tpo $(DEPDIR)/can_not_cache_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_cache_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_cache_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_cache_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

can_not_df_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_df_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_not_df_flag-eflags.Tpo -c -o can_not_df_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_df_flag-eflags.Tpo $(DEPDIR)/can_not_df_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_df_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_df_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_not_df_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_df_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_not_df_flag-eflags.Tpo -c -o can_not_df_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_df_flag-eflags.Tpo $(DEPDIR)/can_not_df_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_df_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_df_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_not_df_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_df_flag-requires.o -MD -MP -MF $(DEPDIR)/can_not_df_flag-requires.Tpo -c -o can_not_df_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_df_flag-requires.Tpo $(DEPDIR)/can_not_df_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_df_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_df_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_not_df_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_df_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_not_df_flag-requires.Tpo -c -o can_not_df_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_df_flag-requires.Tpo $(DEPDIR)/can_not_df_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_df_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_df_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_df_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

can_not_fast_zero_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_fast_zero_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_not_fast_zero_flag-eflags.Tpo -c -o can_not_fast_zero_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_fast_zero_flag-eflags.Tpo $(DEPDIR)/can_not_fast_zero_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_fast_zero_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_fast_zero_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_not_fast_zero_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_fast_zero_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_not_fast_zero_flag-eflags.Tpo -c -o can_not_fast_zero_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_fast_zero_flag-eflags.Tpo $(DEPDIR)/can_not_fast_zero_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_fast_zero_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_fast_zero_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_not_fast_zero_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_fast_zero_flag-requires.o -MD -MP -MF $(DEPDIR)/can_not_fast_zero_flag-requires.Tpo -c -o can_not_fast_zero_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_fast_zero_flag-requires.Tpo $(DEPDIR)/can_not_fast_zero_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_fast_zero_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_fast_zero_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_not_fast_zero_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_fast_zero_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_not_fast_zero_flag-requires.Tpo -c -o can_not_fast_zero_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_fast_zero_flag-requires.Tpo $(DEPDIR)/can_not_fast_zero_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_fast_zero_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fast_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_fast_zero_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

can_not_flush_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_flush_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_not_flush_flag-eflags.Tpo -c -o can_not_flush_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_flush_flag-eflags.Tpo $(DEPDIR)/can_not_flush_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_flush_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_flush_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_not_flush_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_flush_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_not_flush_flag-eflags.Tpo -c -o can_not_flush_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_flush_flag-eflags.Tpo $(DEPDIR)/can_not_flush_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_flush_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_flush_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_not_flush_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_flush_flag-requires.o -MD -MP -MF $(DEPDIR)/can_not_flush_flag-requires.Tpo -c -o can_not_flush_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_flush_flag-requires.Tpo $(DEPDIR)/can_not_flush_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_flush_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_flush_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_not_flush_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_flush_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_not_flush_flag-requires.Tpo -c -o can_not_flush_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_flush_flag-requires.Tpo $(DEPDIR)/can_not_flush_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_flush_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_flush_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_flush_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

can_not_fua_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_fua_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_not_fua_flag-eflags.Tpo -c -o can_not_fua_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_fua_flag-eflags.Tpo $(DEPDIR)/can_not_fua_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_fua_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_fua_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_not_fua_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_fua_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_not_fua_flag-eflags.Tpo -c -o can_not_fua_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_fua_flag-eflags.Tpo $(DEPDIR)/can_not_fua_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_fua_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_fua_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_not_fua_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_fua_flag-requires.o -MD -MP -MF $(DEPDIR)/can_not_fua_flag-requires.Tpo -c -o can_not_fua_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_fua_flag-requires.Tpo $(DEPDIR)/can_not_fua_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_fua_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_fua_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_not_fua_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_fua_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_not_fua_flag-requires.Tpo -c -o can_not_fua_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_fua_flag-requires.Tpo $(DEPDIR)/can_not_fua_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_fua_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_fua_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_fua_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

can_not_multi_conn_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_multi_conn_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_not_multi_conn_flag-eflags.Tpo -c -o can_not_multi_conn_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_multi_conn_flag-eflags.Tpo $(DEPDIR)/can_not_multi_conn_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_multi_conn_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_multi_conn_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_not_multi_conn_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_multi_conn_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_not_multi_conn_flag-eflags.Tpo -c -o can_not_multi_conn_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_multi_conn_flag-eflags.Tpo $(DEPDIR)/can_not_multi_conn_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_multi_conn_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_multi_conn_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_not_multi_conn_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_multi_conn_flag-requires.o -MD -MP -MF $(DEPDIR)/can_not_multi_conn_flag-requires.Tpo -c -o can_not_multi_conn_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_multi_conn_flag-requires.Tpo $(DEPDIR)/can_not_multi_conn_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_multi_conn_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_multi_conn_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_not_multi_conn_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_multi_conn_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_not_multi_conn_flag-requires.Tpo -c -o can_not_multi_conn_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_multi_conn_flag-requires.Tpo $(DEPDIR)/can_not_multi_conn_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_multi_conn_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_multi_conn_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_multi_conn_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

can_not_trim_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_trim_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_not_trim_flag-eflags.Tpo -c -o can_not_trim_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_trim_flag-eflags.Tpo $(DEPDIR)/can_not_trim_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_trim_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_trim_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_not_trim_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_trim_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_not_trim_flag-eflags.Tpo -c -o can_not_trim_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_trim_flag-eflags.Tpo $(DEPDIR)/can_not_trim_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_trim_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_trim_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_not_trim_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_trim_flag-requires.o -MD -MP -MF $(DEPDIR)/can_not_trim_flag-requires.Tpo -c -o can_not_trim_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_trim_flag-requires.Tpo $(DEPDIR)/can_not_trim_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_trim_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_trim_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_not_trim_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_trim_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_not_trim_flag-requires.Tpo -c -o can_not_trim_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_trim_flag-requires.Tpo $(DEPDIR)/can_not_trim_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_trim_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_trim_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

can_not_zero_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_zero_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_not_zero_flag-eflags.Tpo -c -o can_not_zero_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_zero_flag-eflags.Tpo $(DEPDIR)/can_not_zero_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_zero_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_zero_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_not_zero_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_zero_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_not_zero_flag-eflags.Tpo -c -o can_not_zero_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_zero_flag-eflags.Tpo $(DEPDIR)/can_not_zero_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_not_zero_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_zero_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_not_zero_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_zero_flag-requires.o -MD -MP -MF $(DEPDIR)/can_not_zero_flag-requires.Tpo -c -o can_not_zero_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_zero_flag-requires.Tpo $(DEPDIR)/can_not_zero_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_zero_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_zero_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_not_zero_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_not_zero_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_not_zero_flag-requires.Tpo -c -o can_not_zero_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_not_zero_flag-requires.Tpo $(DEPDIR)/can_not_zero_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_not_zero_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_not_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_not_zero_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

can_trim_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_trim_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_trim_flag-eflags.Tpo -c -o can_trim_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_trim_flag-eflags.Tpo $(DEPDIR)/can_trim_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_trim_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_trim_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_trim_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_trim_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_trim_flag-eflags.Tpo -c -o can_trim_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_trim_flag-eflags.Tpo $(DEPDIR)/can_trim_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_trim_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_trim_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_trim_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_trim_flag-requires.o -MD -MP -MF $(DEPDIR)/can_trim_flag-requires.Tpo -c -o can_trim_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_trim_flag-requires.Tpo $(DEPDIR)/can_trim_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_trim_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_trim_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_trim_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_trim_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_trim_flag-requires.Tpo -c -o can_trim_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_trim_flag-requires.Tpo $(DEPDIR)/can_trim_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_trim_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_trim_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_trim_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

can_zero_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_zero_flag-eflags.o -MD -MP -MF $(DEPDIR)/can_zero_flag-eflags.Tpo -c -o can_zero_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_zero_flag-eflags.Tpo $(DEPDIR)/can_zero_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_zero_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_zero_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

can_zero_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_zero_flag-eflags.obj -MD -MP -MF $(DEPDIR)/can_zero_flag-eflags.Tpo -c -o can_zero_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_zero_flag-eflags.Tpo $(DEPDIR)/can_zero_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='can_zero_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_zero_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

can_zero_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_zero_flag-requires.o -MD -MP -MF $(DEPDIR)/can_zero_flag-requires.Tpo -c -o can_zero_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_zero_flag-requires.Tpo $(DEPDIR)/can_zero_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_zero_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_zero_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

can_zero_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT can_zero_flag-requires.obj -MD -MP -MF $(DEPDIR)/can_zero_flag-requires.Tpo -c -o can_zero_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/can_zero_flag-requires.Tpo $(DEPDIR)/can_zero_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='can_zero_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(can_zero_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o can_zero_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

compile_iso_c99-compile-iso-c99.o: compile-iso-c99.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(compile_iso_c99_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT compile_iso_c99-compile-iso-c99.o -MD -MP -MF $(DEPDIR)/compile_iso_c99-compile-iso-c99.Tpo -c -o compile_iso_c99-compile-iso-c99.o `test -f 'compile-iso-c99.c' || echo '$(srcdir)/'`compile-iso-c99.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/compile_iso_c99-compile-iso-c99.Tpo $(DEPDIR)/compile_iso_c99-compile-iso-c99.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='compile-iso-c99.c' object='compile_iso_c99-compile-iso-c99.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(compile_iso_c99_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o compile_iso_c99-compile-iso-c99.o `test -f 'compile-iso-c99.c' || echo '$(srcdir)/'`compile-iso-c99.c

compile_iso_c99-compile-iso-c99.obj: compile-iso-c99.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(compile_iso_c99_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT compile_iso_c99-compile-iso-c99.obj -MD -MP -MF $(DEPDIR)/compile_iso_c99-compile-iso-c99.Tpo -c -o compile_iso_c99-compile-iso-c99.obj `if test -f 'compile-iso-c99.c'; then $(CYGPATH_W) 'compile-iso-c99.c'; else $(CYGPATH_W) '$(srcdir)/compile-iso-c99.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/compile_iso_c99-compile-iso-c99.Tpo $(DEPDIR)/compile_iso_c99-compile-iso-c99.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='compile-iso-c99.c' object='compile_iso_c99-compile-iso-c99.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(compile_iso_c99_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o compile_iso_c99-compile-iso-c99.obj `if test -f 'compile-iso-c99.c'; then $(CYGPATH_W) 'compile-iso-c99.c'; else $(CYGPATH_W) '$(srcdir)/compile-iso-c99.c'; fi`

connect_tls_certs-connect-tls.o: connect-tls.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_tls_certs-connect-tls.o -MD -MP -MF $(DEPDIR)/connect_tls_certs-connect-tls.Tpo -c -o connect_tls_certs-connect-tls.o `test -f 'connect-tls.c' || echo '$(srcdir)/'`connect-tls.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_tls_certs-connect-tls.Tpo $(DEPDIR)/connect_tls_certs-connect-tls.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-tls.c' object='connect_tls_certs-connect-tls.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_tls_certs-connect-tls.o `test -f 'connect-tls.c' || echo '$(srcdir)/'`connect-tls.c

connect_tls_certs-connect-tls.obj: connect-tls.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_tls_certs-connect-tls.obj -MD -MP -MF $(DEPDIR)/connect_tls_certs-connect-tls.Tpo -c -o connect_tls_certs-connect-tls.obj `if test -f 'connect-tls.c'; then $(CYGPATH_W) 'connect-tls.c'; else $(CYGPATH_W) '$(srcdir)/connect-tls.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_tls_certs-connect-tls.Tpo $(DEPDIR)/connect_tls_certs-connect-tls.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-tls.c' object='connect_tls_certs-connect-tls.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_tls_certs-connect-tls.obj `if test -f 'connect-tls.c'; then $(CYGPATH_W) 'connect-tls.c'; else $(CYGPATH_W) '$(srcdir)/connect-tls.c'; fi`

connect_tls_certs-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_tls_certs-requires.o -MD -MP -MF $(DEPDIR)/connect_tls_certs-requires.Tpo -c -o connect_tls_certs-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_tls_certs-requires.Tpo $(DEPDIR)/connect_tls_certs-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_tls_certs-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_tls_certs-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

connect_tls_certs-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_tls_certs-requires.obj -MD -MP -MF $(DEPDIR)/connect_tls_certs-requires.Tpo -c -o connect_tls_certs-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_tls_certs-requires.Tpo $(DEPDIR)/connect_tls_certs-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_tls_certs-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_tls_certs-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

connect_tls_psk-connect-tls.o: connect-tls.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_tls_psk-connect-tls.o -MD -MP -MF $(DEPDIR)/connect_tls_psk-connect-tls.Tpo -c -o connect_tls_psk-connect-tls.o `test -f 'connect-tls.c' || echo '$(srcdir)/'`connect-tls.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_tls_psk-connect-tls.Tpo $(DEPDIR)/connect_tls_psk-connect-tls.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-tls.c' object='connect_tls_psk-connect-tls.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_tls_psk-connect-tls.o `test -f 'connect-tls.c' || echo '$(srcdir)/'`connect-tls.c

connect_tls_psk-connect-tls.obj: connect-tls.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_tls_psk-connect-tls.obj -MD -MP -MF $(DEPDIR)/connect_tls_psk-connect-tls.Tpo -c -o connect_tls_psk-connect-tls.obj `if test -f 'connect-tls.c'; then $(CYGPATH_W) 'connect-tls.c'; else $(CYGPATH_W) '$(srcdir)/connect-tls.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_tls_psk-connect-tls.Tpo $(DEPDIR)/connect_tls_psk-connect-tls.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-tls.c' object='connect_tls_psk-connect-tls.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_tls_psk-connect-tls.obj `if test -f 'connect-tls.c'; then $(CYGPATH_W) 'connect-tls.c'; else $(CYGPATH_W) '$(srcdir)/connect-tls.c'; fi`

connect_tls_psk-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_tls_psk-requires.o -MD -MP -MF $(DEPDIR)/connect_tls_psk-requires.Tpo -c -o connect_tls_psk-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_tls_psk-requires.Tpo $(DEPDIR)/connect_tls_psk-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_tls_psk-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_tls_psk-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

connect_tls_psk-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_tls_psk-requires.obj -MD -MP -MF $(DEPDIR)/connect_tls_psk-requires.Tpo -c -o connect_tls_psk-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_tls_psk-requires.Tpo $(DEPDIR)/connect_tls_psk-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_tls_psk-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_tls_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_tls_psk-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

connect_uri_nbd-connect-uri.o: connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_CPPFLAGS) $(CPPFLAGS) $(connect_uri_nbd_CFLAGS) $(CFLAGS) -MT connect_uri_nbd-connect-uri.o -MD -MP -MF $(DEPDIR)/connect_uri_nbd-connect-uri.Tpo -c -o connect_uri_nbd-connect-uri.o `test -f 'connect-uri.c' || echo '$(srcdir)/'`connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbd-connect-uri.Tpo $(DEPDIR)/connect_uri_nbd-connect-uri.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-uri.c' object='connect_uri_nbd-connect-uri.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_CPPFLAGS) $(CPPFLAGS) $(connect_uri_nbd_CFLAGS) $(CFLAGS) -c -o connect_uri_nbd-connect-uri.o `test -f 'connect-uri.c' || echo '$(srcdir)/'`connect-uri.c

connect_uri_nbd-connect-uri.obj: connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_CPPFLAGS) $(CPPFLAGS) $(connect_uri_nbd_CFLAGS) $(CFLAGS) -MT connect_uri_nbd-connect-uri.obj -MD -MP -MF $(DEPDIR)/connect_uri_nbd-connect-uri.Tpo -c -o connect_uri_nbd-connect-uri.obj `if test -f 'connect-uri.c'; then $(CYGPATH_W) 'connect-uri.c'; else $(CYGPATH_W) '$(srcdir)/connect-uri.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbd-connect-uri.Tpo $(DEPDIR)/connect_uri_nbd-connect-uri.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-uri.c' object='connect_uri_nbd-connect-uri.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_CPPFLAGS) $(CPPFLAGS) $(connect_uri_nbd_CFLAGS) $(CFLAGS) -c -o connect_uri_nbd-connect-uri.obj `if test -f 'connect-uri.c'; then $(CYGPATH_W) 'connect-uri.c'; else $(CYGPATH_W) '$(srcdir)/connect-uri.c'; fi`

connect_uri_nbd-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_CPPFLAGS) $(CPPFLAGS) $(connect_uri_nbd_CFLAGS) $(CFLAGS) -MT connect_uri_nbd-requires.o -MD -MP -MF $(DEPDIR)/connect_uri_nbd-requires.Tpo -c -o connect_uri_nbd-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbd-requires.Tpo $(DEPDIR)/connect_uri_nbd-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_uri_nbd-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_CPPFLAGS) $(CPPFLAGS) $(connect_uri_nbd_CFLAGS) $(CFLAGS) -c -o connect_uri_nbd-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

connect_uri_nbd-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_CPPFLAGS) $(CPPFLAGS) $(connect_uri_nbd_CFLAGS) $(CFLAGS) -MT connect_uri_nbd-requires.obj -MD -MP -MF $(DEPDIR)/connect_uri_nbd-requires.Tpo -c -o connect_uri_nbd-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbd-requires.Tpo $(DEPDIR)/connect_uri_nbd-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_uri_nbd-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_CPPFLAGS) $(CPPFLAGS) $(connect_uri_nbd_CFLAGS) $(CFLAGS) -c -o connect_uri_nbd-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

connect_uri_nbd_unix-connect-uri.o: connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_unix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbd_unix-connect-uri.o -MD -MP -MF $(DEPDIR)/connect_uri_nbd_unix-connect-uri.Tpo -c -o connect_uri_nbd_unix-connect-uri.o `test -f 'connect-uri.c' || echo '$(srcdir)/'`connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbd_unix-connect-uri.Tpo $(DEPDIR)/connect_uri_nbd_unix-connect-uri.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-uri.c' object='connect_uri_nbd_unix-connect-uri.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_unix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbd_unix-connect-uri.o `test -f 'connect-uri.c' || echo '$(srcdir)/'`connect-uri.c

connect_uri_nbd_unix-connect-uri.obj: connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_unix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbd_unix-connect-uri.obj -MD -MP -MF $(DEPDIR)/connect_uri_nbd_unix-connect-uri.Tpo -c -o connect_uri_nbd_unix-connect-uri.obj `if test -f 'connect-uri.c'; then $(CYGPATH_W) 'connect-uri.c'; else $(CYGPATH_W) '$(srcdir)/connect-uri.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbd_unix-connect-uri.Tpo $(DEPDIR)/connect_uri_nbd_unix-connect-uri.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-uri.c' object='connect_uri_nbd_unix-connect-uri.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_unix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbd_unix-connect-uri.obj `if test -f 'connect-uri.c'; then $(CYGPATH_W) 'connect-uri.c'; else $(CYGPATH_W) '$(srcdir)/connect-uri.c'; fi`

connect_uri_nbd_unix-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_unix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbd_unix-requires.o -MD -MP -MF $(DEPDIR)/connect_uri_nbd_unix-requires.Tpo -c -o connect_uri_nbd_unix-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbd_unix-requires.Tpo $(DEPDIR)/connect_uri_nbd_unix-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_uri_nbd_unix-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_unix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbd_unix-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

connect_uri_nbd_unix-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_unix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbd_unix-requires.obj -MD -MP -MF $(DEPDIR)/connect_uri_nbd_unix-requires.Tpo -c -o connect_uri_nbd_unix-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbd_unix-requires.Tpo $(DEPDIR)/connect_uri_nbd_unix-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_uri_nbd_unix-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbd_unix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbd_unix-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

connect_uri_nbds_certs-connect-uri.o: connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_certs-connect-uri.o -MD -MP -MF $(DEPDIR)/connect_uri_nbds_certs-connect-uri.Tpo -c -o connect_uri_nbds_certs-connect-uri.o `test -f 'connect-uri.c' || echo '$(srcdir)/'`connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_certs-connect-uri.Tpo $(DEPDIR)/connect_uri_nbds_certs-connect-uri.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-uri.c' object='connect_uri_nbds_certs-connect-uri.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_certs-connect-uri.o `test -f 'connect-uri.c' || echo '$(srcdir)/'`connect-uri.c

connect_uri_nbds_certs-connect-uri.obj: connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_certs-connect-uri.obj -MD -MP -MF $(DEPDIR)/connect_uri_nbds_certs-connect-uri.Tpo -c -o connect_uri_nbds_certs-connect-uri.obj `if test -f 'connect-uri.c'; then $(CYGPATH_W) 'connect-uri.c'; else $(CYGPATH_W) '$(srcdir)/connect-uri.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_certs-connect-uri.Tpo $(DEPDIR)/connect_uri_nbds_certs-connect-uri.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-uri.c' object='connect_uri_nbds_certs-connect-uri.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_certs-connect-uri.obj `if test -f 'connect-uri.c'; then $(CYGPATH_W) 'connect-uri.c'; else $(CYGPATH_W) '$(srcdir)/connect-uri.c'; fi`

connect_uri_nbds_certs-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_certs-requires.o -MD -MP -MF $(DEPDIR)/connect_uri_nbds_certs-requires.Tpo -c -o connect_uri_nbds_certs-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_certs-requires.Tpo $(DEPDIR)/connect_uri_nbds_certs-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_uri_nbds_certs-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_certs-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

connect_uri_nbds_certs-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_certs-requires.obj -MD -MP -MF $(DEPDIR)/connect_uri_nbds_certs-requires.Tpo -c -o connect_uri_nbds_certs-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_certs-requires.Tpo $(DEPDIR)/connect_uri_nbds_certs-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_uri_nbds_certs-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_certs-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

connect_uri_nbds_psk-connect-uri.o: connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_psk-connect-uri.o -MD -MP -MF $(DEPDIR)/connect_uri_nbds_psk-connect-uri.Tpo -c -o connect_uri_nbds_psk-connect-uri.o `test -f 'connect-uri.c' || echo '$(srcdir)/'`connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_psk-connect-uri.Tpo $(DEPDIR)/connect_uri_nbds_psk-connect-uri.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-uri.c' object='connect_uri_nbds_psk-connect-uri.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_psk-connect-uri.o `test -f 'connect-uri.c' || echo '$(srcdir)/'`connect-uri.c

connect_uri_nbds_psk-connect-uri.obj: connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_psk-connect-uri.obj -MD -MP -MF $(DEPDIR)/connect_uri_nbds_psk-connect-uri.Tpo -c -o connect_uri_nbds_psk-connect-uri.obj `if test -f 'connect-uri.c'; then $(CYGPATH_W) 'connect-uri.c'; else $(CYGPATH_W) '$(srcdir)/connect-uri.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_psk-connect-uri.Tpo $(DEPDIR)/connect_uri_nbds_psk-connect-uri.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-uri.c' object='connect_uri_nbds_psk-connect-uri.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_psk-connect-uri.obj `if test -f 'connect-uri.c'; then $(CYGPATH_W) 'connect-uri.c'; else $(CYGPATH_W) '$(srcdir)/connect-uri.c'; fi`

connect_uri_nbds_psk-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_psk-requires.o -MD -MP -MF $(DEPDIR)/connect_uri_nbds_psk-requires.Tpo -c -o connect_uri_nbds_psk-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_psk-requires.Tpo $(DEPDIR)/connect_uri_nbds_psk-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_uri_nbds_psk-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_psk-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

connect_uri_nbds_psk-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_psk-requires.obj -MD -MP -MF $(DEPDIR)/connect_uri_nbds_psk-requires.Tpo -c -o connect_uri_nbds_psk-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_psk-requires.Tpo $(DEPDIR)/connect_uri_nbds_psk-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_uri_nbds_psk-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_psk-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

connect_uri_nbds_unix_certs-connect-uri.o: connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_unix_certs-connect-uri.o -MD -MP -MF $(DEPDIR)/connect_uri_nbds_unix_certs-connect-uri.Tpo -c -o connect_uri_nbds_unix_certs-connect-uri.o `test -f 'connect-uri.c' || echo '$(srcdir)/'`connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_unix_certs-connect-uri.Tpo $(DEPDIR)/connect_uri_nbds_unix_certs-connect-uri.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-uri.c' object='connect_uri_nbds_unix_certs-connect-uri.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_unix_certs-connect-uri.o `test -f 'connect-uri.c' || echo '$(srcdir)/'`connect-uri.c

connect_uri_nbds_unix_certs-connect-uri.obj: connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_unix_certs-connect-uri.obj -MD -MP -MF $(DEPDIR)/connect_uri_nbds_unix_certs-connect-uri.Tpo -c -o connect_uri_nbds_unix_certs-connect-uri.obj `if test -f 'connect-uri.c'; then $(CYGPATH_W) 'connect-uri.c'; else $(CYGPATH_W) '$(srcdir)/connect-uri.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_unix_certs-connect-uri.Tpo $(DEPDIR)/connect_uri_nbds_unix_certs-connect-uri.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-uri.c' object='connect_uri_nbds_unix_certs-connect-uri.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_unix_certs-connect-uri.obj `if test -f 'connect-uri.c'; then $(CYGPATH_W) 'connect-uri.c'; else $(CYGPATH_W) '$(srcdir)/connect-uri.c'; fi`

connect_uri_nbds_unix_certs-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_unix_certs-requires.o -MD -MP -MF $(DEPDIR)/connect_uri_nbds_unix_certs-requires.Tpo -c -o connect_uri_nbds_unix_certs-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_unix_certs-requires.Tpo $(DEPDIR)/connect_uri_nbds_unix_certs-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_uri_nbds_unix_certs-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_unix_certs-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

connect_uri_nbds_unix_certs-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_unix_certs-requires.obj -MD -MP -MF $(DEPDIR)/connect_uri_nbds_unix_certs-requires.Tpo -c -o connect_uri_nbds_unix_certs-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_unix_certs-requires.Tpo $(DEPDIR)/connect_uri_nbds_unix_certs-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_uri_nbds_unix_certs-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_certs_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_unix_certs-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

connect_uri_nbds_unix_psk-connect-uri.o: connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_unix_psk-connect-uri.o -MD -MP -MF $(DEPDIR)/connect_uri_nbds_unix_psk-connect-uri.Tpo -c -o connect_uri_nbds_unix_psk-connect-uri.o `test -f 'connect-uri.c' || echo '$(srcdir)/'`connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_unix_psk-connect-uri.Tpo $(DEPDIR)/connect_uri_nbds_unix_psk-connect-uri.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-uri.c' object='connect_uri_nbds_unix_psk-connect-uri.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_unix_psk-connect-uri.o `test -f 'connect-uri.c' || echo '$(srcdir)/'`connect-uri.c

connect_uri_nbds_unix_psk-connect-uri.obj: connect-uri.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_unix_psk-connect-uri.obj -MD -MP -MF $(DEPDIR)/connect_uri_nbds_unix_psk-connect-uri.Tpo -c -o connect_uri_nbds_unix_psk-connect-uri.obj `if test -f 'connect-uri.c'; then $(CYGPATH_W) 'connect-uri.c'; else $(CYGPATH_W) '$(srcdir)/connect-uri.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_unix_psk-connect-uri.Tpo $(DEPDIR)/connect_uri_nbds_unix_psk-connect-uri.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='connect-uri.c' object='connect_uri_nbds_unix_psk-connect-uri.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_unix_psk-connect-uri.obj `if test -f 'connect-uri.c'; then $(CYGPATH_W) 'connect-uri.c'; else $(CYGPATH_W) '$(srcdir)/connect-uri.c'; fi`

connect_uri_nbds_unix_psk-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_unix_psk-requires.o -MD -MP -MF $(DEPDIR)/connect_uri_nbds_unix_psk-requires.Tpo -c -o connect_uri_nbds_unix_psk-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_unix_psk-requires.Tpo $(DEPDIR)/connect_uri_nbds_unix_psk-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_uri_nbds_unix_psk-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_unix_psk-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

connect_uri_nbds_unix_psk-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT connect_uri_nbds_unix_psk-requires.obj -MD -MP -MF $(DEPDIR)/connect_uri_nbds_unix_psk-requires.Tpo -c -o connect_uri_nbds_unix_psk-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/connect_uri_nbds_unix_psk-requires.Tpo $(DEPDIR)/connect_uri_nbds_unix_psk-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='connect_uri_nbds_unix_psk-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(connect_uri_nbds_unix_psk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o connect_uri_nbds_unix_psk-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

dlopen-dlopen.o: dlopen.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dlopen_CPPFLAGS) $(CPPFLAGS) $(dlopen_CFLAGS) $(CFLAGS) -MT dlopen-dlopen.o -MD -MP -MF $(DEPDIR)/dlopen-dlopen.Tpo -c -o dlopen-dlopen.o `test -f 'dlopen.c' || echo '$(srcdir)/'`dlopen.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dlopen-dlopen.Tpo $(DEPDIR)/dlopen-dlopen.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dlopen.c' object='dlopen-dlopen.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dlopen_CPPFLAGS) $(CPPFLAGS) $(dlopen_CFLAGS) $(CFLAGS) -c -o dlopen-dlopen.o `test -f 'dlopen.c' || echo '$(srcdir)/'`dlopen.c

dlopen-dlopen.obj: dlopen.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dlopen_CPPFLAGS) $(CPPFLAGS) $(dlopen_CFLAGS) $(CFLAGS) -MT dlopen-dlopen.obj -MD -MP -MF $(DEPDIR)/dlopen-dlopen.Tpo -c -o dlopen-dlopen.obj `if test -f 'dlopen.c'; then $(CYGPATH_W) 'dlopen.c'; else $(CYGPATH_W) '$(srcdir)/dlopen.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dlopen-dlopen.Tpo $(DEPDIR)/dlopen-dlopen.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dlopen.c' object='dlopen-dlopen.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dlopen_CPPFLAGS) $(CPPFLAGS) $(dlopen_CFLAGS) $(CFLAGS) -c -o dlopen-dlopen.obj `if test -f 'dlopen.c'; then $(CYGPATH_W) 'dlopen.c'; else $(CYGPATH_W) '$(srcdir)/dlopen.c'; fi`

is_not_rotational_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_not_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT is_not_rotational_flag-eflags.o -MD -MP -MF $(DEPDIR)/is_not_rotational_flag-eflags.Tpo -c -o is_not_rotational_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/is_not_rotational_flag-eflags.Tpo $(DEPDIR)/is_not_rotational_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='is_not_rotational_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_not_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o is_not_rotational_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

is_not_rotational_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_not_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT is_not_rotational_flag-eflags.obj -MD -MP -MF $(DEPDIR)/is_not_rotational_flag-eflags.Tpo -c -o is_not_rotational_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/is_not_rotational_flag-eflags.Tpo $(DEPDIR)/is_not_rotational_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='is_not_rotational_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_not_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o is_not_rotational_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

is_not_rotational_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_not_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT is_not_rotational_flag-requires.o -MD -MP -MF $(DEPDIR)/is_not_rotational_flag-requires.Tpo -c -o is_not_rotational_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/is_not_rotational_flag-requires.Tpo $(DEPDIR)/is_not_rotational_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='is_not_rotational_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_not_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o is_not_rotational_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

is_not_rotational_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_not_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT is_not_rotational_flag-requires.obj -MD -MP -MF $(DEPDIR)/is_not_rotational_flag-requires.Tpo -c -o is_not_rotational_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/is_not_rotational_flag-requires.Tpo $(DEPDIR)/is_not_rotational_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='is_not_rotational_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_not_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o is_not_rotational_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

is_rotational_flag-eflags.o: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT is_rotational_flag-eflags.o -MD -MP -MF $(DEPDIR)/is_rotational_flag-eflags.Tpo -c -o is_rotational_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/is_rotational_flag-eflags.Tpo $(DEPDIR)/is_rotational_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='is_rotational_flag-eflags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o is_rotational_flag-eflags.o `test -f 'eflags.c' || echo '$(srcdir)/'`eflags.c

is_rotational_flag-eflags.obj: eflags.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT is_rotational_flag-eflags.obj -MD -MP -MF $(DEPDIR)/is_rotational_flag-eflags.Tpo -c -o is_rotational_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/is_rotational_flag-eflags.Tpo $(DEPDIR)/is_rotational_flag-eflags.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='eflags.c' object='is_rotational_flag-eflags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o is_rotational_flag-eflags.obj `if test -f 'eflags.c'; then $(CYGPATH_W) 'eflags.c'; else $(CYGPATH_W) '$(srcdir)/eflags.c'; fi`

is_rotational_flag-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT is_rotational_flag-requires.o -MD -MP -MF $(DEPDIR)/is_rotational_flag-requires.Tpo -c -o is_rotational_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/is_rotational_flag-requires.Tpo $(DEPDIR)/is_rotational_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='is_rotational_flag-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o is_rotational_flag-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

is_rotational_flag-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT is_rotational_flag-requires.obj -MD -MP -MF $(DEPDIR)/is_rotational_flag-requires.Tpo -c -o is_rotational_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/is_rotational_flag-requires.Tpo $(DEPDIR)/is_rotational_flag-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='is_rotational_flag-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(is_rotational_flag_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o is_rotational_flag-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

opt_info-opt-info.o: opt-info.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_info_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opt_info-opt-info.o -MD -MP -MF $(DEPDIR)/opt_info-opt-info.Tpo -c -o opt_info-opt-info.o `test -f 'opt-info.c' || echo '$(srcdir)/'`opt-info.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_info-opt-info.Tpo $(DEPDIR)/opt_info-opt-info.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='opt-info.c' object='opt_info-opt-info.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_info_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opt_info-opt-info.o `test -f 'opt-info.c' || echo '$(srcdir)/'`opt-info.c

opt_info-opt-info.obj: opt-info.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_info_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opt_info-opt-info.obj -MD -MP -MF $(DEPDIR)/opt_info-opt-info.Tpo -c -o opt_info-opt-info.obj `if test -f 'opt-info.c'; then $(CYGPATH_W) 'opt-info.c'; else $(CYGPATH_W) '$(srcdir)/opt-info.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_info-opt-info.Tpo $(DEPDIR)/opt_info-opt-info.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='opt-info.c' object='opt_info-opt-info.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_info_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opt_info-opt-info.obj `if test -f 'opt-info.c'; then $(CYGPATH_W) 'opt-info.c'; else $(CYGPATH_W) '$(srcdir)/opt-info.c'; fi`

opt_list-opt-list.o: opt-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_list_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opt_list-opt-list.o -MD -MP -MF $(DEPDIR)/opt_list-opt-list.Tpo -c -o opt_list-opt-list.o `test -f 'opt-list.c' || echo '$(srcdir)/'`opt-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_list-opt-list.Tpo $(DEPDIR)/opt_list-opt-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='opt-list.c' object='opt_list-opt-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_list_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opt_list-opt-list.o `test -f 'opt-list.c' || echo '$(srcdir)/'`opt-list.c

opt_list-opt-list.obj: opt-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_list_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opt_list-opt-list.obj -MD -MP -MF $(DEPDIR)/opt_list-opt-list.Tpo -c -o opt_list-opt-list.obj `if test -f 'opt-list.c'; then $(CYGPATH_W) 'opt-list.c'; else $(CYGPATH_W) '$(srcdir)/opt-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_list-opt-list.Tpo $(DEPDIR)/opt_list-opt-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='opt-list.c' object='opt_list-opt-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_list_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opt_list-opt-list.obj `if test -f 'opt-list.c'; then $(CYGPATH_W) 'opt-list.c'; else $(CYGPATH_W) '$(srcdir)/opt-list.c'; fi`

opt_list-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_list_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opt_list-requires.o -MD -MP -MF $(DEPDIR)/opt_list-requires.Tpo -c -o opt_list-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_list-requires.Tpo $(DEPDIR)/opt_list-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='opt_list-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_list_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opt_list-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

opt_list-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_list_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opt_list-requires.obj -MD -MP -MF $(DEPDIR)/opt_list-requires.Tpo -c -o opt_list-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_list-requires.Tpo $(DEPDIR)/opt_list-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='opt_list-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_list_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opt_list-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

opt_set_meta-opt-set-meta.o: opt-set-meta.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_set_meta_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opt_set_meta-opt-set-meta.o -MD -MP -MF $(DEPDIR)/opt_set_meta-opt-set-meta.Tpo -c -o opt_set_meta-opt-set-meta.o `test -f 'opt-set-meta.c' || echo '$(srcdir)/'`opt-set-meta.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_set_meta-opt-set-meta.Tpo $(DEPDIR)/opt_set_meta-opt-set-meta.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='opt-set-meta.c' object='opt_set_meta-opt-set-meta.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_set_meta_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opt_set_meta-opt-set-meta.o `test -f 'opt-set-meta.c' || echo '$(srcdir)/'`opt-set-meta.c

opt_set_meta-opt-set-meta.obj: opt-set-meta.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_set_meta_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opt_set_meta-opt-set-meta.obj -MD -MP -MF $(DEPDIR)/opt_set_meta-opt-set-meta.Tpo -c -o opt_set_meta-opt-set-meta.obj `if test -f 'opt-set-meta.c'; then $(CYGPATH_W) 'opt-set-meta.c'; else $(CYGPATH_W) '$(srcdir)/opt-set-meta.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_set_meta-opt-set-meta.Tpo $(DEPDIR)/opt_set_meta-opt-set-meta.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='opt-set-meta.c' object='opt_set_meta-opt-set-meta.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_set_meta_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opt_set_meta-opt-set-meta.obj `if test -f 'opt-set-meta.c'; then $(CYGPATH_W) 'opt-set-meta.c'; else $(CYGPATH_W) '$(srcdir)/opt-set-meta.c'; fi`

opt_set_meta-requires.o: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_set_meta_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opt_set_meta-requires.o -MD -MP -MF $(DEPDIR)/opt_set_meta-requires.Tpo -c -o opt_set_meta-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_set_meta-requires.Tpo $(DEPDIR)/opt_set_meta-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='opt_set_meta-requires.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_set_meta_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opt_set_meta-requires.o `test -f 'requires.c' || echo '$(srcdir)/'`requires.c

opt_set_meta-requires.obj: requires.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_set_meta_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opt_set_meta-requires.obj -MD -MP -MF $(DEPDIR)/opt_set_meta-requires.Tpo -c -o opt_set_meta-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/opt_set_meta-requires.Tpo $(DEPDIR)/opt_set_meta-requires.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='requires.c' object='opt_set_meta-requires.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(opt_set_meta_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opt_set_meta-requires.obj `if test -f 'requires.c'; then $(CYGPATH_W) 'requires.c'; else $(CYGPATH_W) '$(srcdir)/requires.c'; fi`

synch_parallel-synch-parallel.o: synch-parallel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(synch_parallel_CPPFLAGS) $(CPPFLAGS) $(synch_parallel_CFLAGS) $(CFLAGS) -MT synch_parallel-synch-parallel.o -MD -MP -MF $(DEPDIR)/synch_parallel-synch-parallel.Tpo -c -o synch_parallel-synch-parallel.o `test -f 'synch-parallel.c' || echo '$(srcdir)/'`synch-parallel.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/synch_parallel-synch-parallel.Tpo $(DEPDIR)/synch_parallel-synch-parallel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='synch-parallel.c' object='synch_parallel-synch-parallel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(synch_parallel_CPPFLAGS) $(CPPFLAGS) $(synch_parallel_CFLAGS) $(CFLAGS) -c -o synch_parallel-synch-parallel.o `test -f 'synch-parallel.c' || echo '$(srcdir)/'`synch-parallel.c

synch_parallel-synch-parallel.obj: synch-parallel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(synch_parallel_CPPFLAGS) $(CPPFLAGS) $(synch_parallel_CFLAGS) $(CFLAGS) -MT synch_parallel-synch-parallel.obj -MD -MP -MF $(DEPDIR)/synch_parallel-synch-parallel.Tpo -c -o synch_parallel-synch-parallel.obj `if test -f 'synch-parallel.c'; then $(CYGPATH_W) 'synch-parallel.c'; else $(CYGPATH_W) '$(srcdir)/synch-parallel.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/synch_parallel-synch-parallel.Tpo $(DEPDIR)/synch_parallel-synch-parallel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='synch-parallel.c' object='synch_parallel-synch-parallel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(synch_parallel_CPPFLAGS) $(CPPFLAGS) $(synch_parallel_CFLAGS) $(CFLAGS) -c -o synch_parallel-synch-parallel.obj `if test -f 'synch-parallel.c'; then $(CYGPATH_W) 'synch-parallel.c'; else $(CYGPATH_W) '$(srcdir)/synch-parallel.c'; fi`

synch_parallel_tls-synch-parallel.o: synch-parallel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(synch_parallel_tls_CPPFLAGS) $(CPPFLAGS) $(synch_parallel_tls_CFLAGS) $(CFLAGS) -MT synch_parallel_tls-synch-parallel.o -MD -MP -MF $(DEPDIR)/synch_parallel_tls-synch-parallel.Tpo -c -o synch_parallel_tls-synch-parallel.o `test -f 'synch-parallel.c' || echo '$(srcdir)/'`synch-parallel.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/synch_parallel_tls-synch-parallel.Tpo $(DEPDIR)/synch_parallel_tls-synch-parallel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='synch-parallel.c' object='synch_parallel_tls-synch-parallel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(synch_parallel_tls_CPPFLAGS) $(CPPFLAGS) $(synch_parallel_tls_CFLAGS) $(CFLAGS) -c -o synch_parallel_tls-synch-parallel.o `test -f 'synch-parallel.c' || echo '$(srcdir)/'`synch-parallel.c

synch_parallel_tls-synch-parallel.obj: synch-parallel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(synch_parallel_tls_CPPFLAGS) $(CPPFLAGS) $(synch_parallel_tls_CFLAGS) $(CFLAGS) -MT synch_parallel_tls-synch-parallel.obj -MD -MP -MF $(DEPDIR)/synch_parallel_tls-synch-parallel.Tpo -c -o synch_parallel_tls-synch-parallel.obj `if test -f 'synch-parallel.c'; then $(CYGPATH_W) 'synch-parallel.c'; else $(CYGPATH_W) '$(srcdir)/synch-parallel.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/synch_parallel_tls-synch-parallel.Tpo $(DEPDIR)/synch_parallel_tls-synch-parallel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='synch-parallel.c' object='synch_parallel_tls-synch-parallel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(synch_parallel_tls_CPPFLAGS) $(CPPFLAGS) $(synch_parallel_tls_CFLAGS) $(CFLAGS) -c -o synch_parallel_tls-synch-parallel.obj `if test -f 'synch-parallel.c'; then $(CYGPATH_W) 'synch-parallel.c'; else $(CYGPATH_W) '$(srcdir)/synch-parallel.c'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS) $(check_DATA)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(check_DATA)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
compile-header-only.log: compile-header-only$(EXEEXT)
	@p='compile-header-only$(EXEEXT)'; \
	b='compile-header-only'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
compile-c.log: compile-c$(EXEEXT)
	@p='compile-c$(EXEEXT)'; \
	b='compile-c'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
compile-iso-c99.log: compile-iso-c99$(EXEEXT)
	@p='compile-iso-c99$(EXEEXT)'; \
	b='compile-iso-c99'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
close-null.log: close-null$(EXEEXT)
	@p='close-null$(EXEEXT)'; \
	b='close-null'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
debug.log: debug$(EXEEXT)
	@p='debug$(EXEEXT)'; \
	b='debug'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
debug-environment.log: debug-environment$(EXEEXT)
	@p='debug-environment$(EXEEXT)'; \
	b='debug-environment'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
get-version.log: get-version$(EXEEXT)
	@p='get-version$(EXEEXT)'; \
	b='get-version'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
export-name.log: export-name$(EXEEXT)
	@p='export-name$(EXEEXT)'; \
	b='export-name'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
private-data.log: private-data$(EXEEXT)
	@p='private-data$(EXEEXT)'; \
	b='private-data'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
compile-cxx.log: compile-cxx$(EXEEXT)
	@p='compile-cxx$(EXEEXT)'; \
	b='compile-cxx'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dlopen.log: dlopen$(EXEEXT)
	@p='dlopen$(EXEEXT)'; \
	b='dlopen'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-enum.log: errors-enum$(EXEEXT)
	@p='errors-enum$(EXEEXT)'; \
	b='errors-enum'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-bitmask.log: errors-bitmask$(EXEEXT)
	@p='errors-bitmask$(EXEEXT)'; \
	b='errors-bitmask'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-not-connected.log: errors-not-connected$(EXEEXT)
	@p='errors-not-connected$(EXEEXT)'; \
	b='errors-not-connected'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-name-too-long.log: errors-name-too-long$(EXEEXT)
	@p='errors-name-too-long$(EXEEXT)'; \
	b='errors-name-too-long'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-poll-no-fd.log: errors-poll-no-fd$(EXEEXT)
	@p='errors-poll-no-fd$(EXEEXT)'; \
	b='errors-poll-no-fd'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-connect-null.log: errors-connect-null$(EXEEXT)
	@p='errors-connect-null$(EXEEXT)'; \
	b='errors-connect-null'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-connect-twice.log: errors-connect-twice$(EXEEXT)
	@p='errors-connect-twice$(EXEEXT)'; \
	b='errors-connect-twice'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-not-negotiating.log: errors-not-negotiating$(EXEEXT)
	@p='errors-not-negotiating$(EXEEXT)'; \
	b='errors-not-negotiating'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-not-negotiating-aio.log: errors-not-negotiating-aio$(EXEEXT)
	@p='errors-not-negotiating-aio$(EXEEXT)'; \
	b='errors-not-negotiating-aio'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-notify-not-blocked.log: errors-notify-not-blocked$(EXEEXT)
	@p='errors-notify-not-blocked$(EXEEXT)'; \
	b='errors-notify-not-blocked'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-bad-cookie.log: errors-bad-cookie$(EXEEXT)
	@p='errors-bad-cookie$(EXEEXT)'; \
	b='errors-bad-cookie'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-pread-structured.log: errors-pread-structured$(EXEEXT)
	@p='errors-pread-structured$(EXEEXT)'; \
	b='errors-pread-structured'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-multiple-disconnects.log: errors-multiple-disconnects$(EXEEXT)
	@p='errors-multiple-disconnects$(EXEEXT)'; \
	b='errors-multiple-disconnects'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-server-invalid-offset.log: errors-server-invalid-offset$(EXEEXT)
	@p='errors-server-invalid-offset$(EXEEXT)'; \
	b='errors-server-invalid-offset'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-client-oversize.log: errors-client-oversize$(EXEEXT)
	@p='errors-client-oversize$(EXEEXT)'; \
	b='errors-client-oversize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-server-oversize.log: errors-server-oversize$(EXEEXT)
	@p='errors-server-oversize$(EXEEXT)'; \
	b='errors-server-oversize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-client-unadvertised-cmd.log: errors-client-unadvertised-cmd$(EXEEXT)
	@p='errors-client-unadvertised-cmd$(EXEEXT)'; \
	b='errors-client-unadvertised-cmd'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-server-unadvertised-cmd.log: errors-server-unadvertised-cmd$(EXEEXT)
	@p='errors-server-unadvertised-cmd$(EXEEXT)'; \
	b='errors-server-unadvertised-cmd'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-client-unaligned.log: errors-client-unaligned$(EXEEXT)
	@p='errors-client-unaligned$(EXEEXT)'; \
	b='errors-client-unaligned'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-server-unaligned.log: errors-server-unaligned$(EXEEXT)
	@p='errors-server-unaligned$(EXEEXT)'; \
	b='errors-server-unaligned'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-client-unknown-flags.log: errors-client-unknown-flags$(EXEEXT)
	@p='errors-client-unknown-flags$(EXEEXT)'; \
	b='errors-client-unknown-flags'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-server-unknown-flags.log: errors-server-unknown-flags$(EXEEXT)
	@p='errors-server-unknown-flags$(EXEEXT)'; \
	b='errors-server-unknown-flags'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-client-zerosize.log: errors-client-zerosize$(EXEEXT)
	@p='errors-client-zerosize$(EXEEXT)'; \
	b='errors-client-zerosize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errors-server-zerosize.log: errors-server-zerosize$(EXEEXT)
	@p='errors-server-zerosize$(EXEEXT)'; \
	b='errors-server-zerosize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
server-death.log: server-death$(EXEEXT)
	@p='server-death$(EXEEXT)'; \
	b='server-death'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
shutdown-flags.log: shutdown-flags$(EXEEXT)
	@p='shutdown-flags$(EXEEXT)'; \
	b='shutdown-flags'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
shutdown-opt-mode.log: shutdown-opt-mode$(EXEEXT)
	@p='shutdown-opt-mode$(EXEEXT)'; \
	b='shutdown-opt-mode'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
get-size.log: get-size$(EXEEXT)
	@p='get-size$(EXEEXT)'; \
	b='get-size'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
read-only-flag.log: read-only-flag$(EXEEXT)
	@p='read-only-flag$(EXEEXT)'; \
	b='read-only-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
read-write-flag.log: read-write-flag$(EXEEXT)
	@p='read-write-flag$(EXEEXT)'; \
	b='read-write-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-flush-flag.log: can-flush-flag$(EXEEXT)
	@p='can-flush-flag$(EXEEXT)'; \
	b='can-flush-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-not-flush-flag.log: can-not-flush-flag$(EXEEXT)
	@p='can-not-flush-flag$(EXEEXT)'; \
	b='can-not-flush-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-fua-flag.log: can-fua-flag$(EXEEXT)
	@p='can-fua-flag$(EXEEXT)'; \
	b='can-fua-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-not-fua-flag.log: can-not-fua-flag$(EXEEXT)
	@p='can-not-fua-flag$(EXEEXT)'; \
	b='can-not-fua-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
is-rotational-flag.log: is-rotational-flag$(EXEEXT)
	@p='is-rotational-flag$(EXEEXT)'; \
	b='is-rotational-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
is-not-rotational-flag.log: is-not-rotational-flag$(EXEEXT)
	@p='is-not-rotational-flag$(EXEEXT)'; \
	b='is-not-rotational-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-trim-flag.log: can-trim-flag$(EXEEXT)
	@p='can-trim-flag$(EXEEXT)'; \
	b='can-trim-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-not-trim-flag.log: can-not-trim-flag$(EXEEXT)
	@p='can-not-trim-flag$(EXEEXT)'; \
	b='can-not-trim-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-zero-flag.log: can-zero-flag$(EXEEXT)
	@p='can-zero-flag$(EXEEXT)'; \
	b='can-zero-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-not-zero-flag.log: can-not-zero-flag$(EXEEXT)
	@p='can-not-zero-flag$(EXEEXT)'; \
	b='can-not-zero-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-fast-zero-flag.log: can-fast-zero-flag$(EXEEXT)
	@p='can-fast-zero-flag$(EXEEXT)'; \
	b='can-fast-zero-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-not-fast-zero-flag.log: can-not-fast-zero-flag$(EXEEXT)
	@p='can-not-fast-zero-flag$(EXEEXT)'; \
	b='can-not-fast-zero-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-df-flag.log: can-df-flag$(EXEEXT)
	@p='can-df-flag$(EXEEXT)'; \
	b='can-df-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-not-df-flag.log: can-not-df-flag$(EXEEXT)
	@p='can-not-df-flag$(EXEEXT)'; \
	b='can-not-df-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-multi-conn-flag.log: can-multi-conn-flag$(EXEEXT)
	@p='can-multi-conn-flag$(EXEEXT)'; \
	b='can-multi-conn-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-not-multi-conn-flag.log: can-not-multi-conn-flag$(EXEEXT)
	@p='can-not-multi-conn-flag$(EXEEXT)'; \
	b='can-not-multi-conn-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-cache-flag.log: can-cache-flag$(EXEEXT)
	@p='can-cache-flag$(EXEEXT)'; \
	b='can-cache-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
can-not-cache-flag.log: can-not-cache-flag$(EXEEXT)
	@p='can-not-cache-flag$(EXEEXT)'; \
	b='can-not-cache-flag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
oldstyle.log: oldstyle$(EXEEXT)
	@p='oldstyle$(EXEEXT)'; \
	b='oldstyle'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
newstyle-limited.log: newstyle-limited$(EXEEXT)
	@p='newstyle-limited$(EXEEXT)'; \
	b='newstyle-limited'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
opt-abort.log: opt-abort$(EXEEXT)
	@p='opt-abort$(EXEEXT)'; \
	b='opt-abort'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
opt-list.log: opt-list$(EXEEXT)
	@p='opt-list$(EXEEXT)'; \
	b='opt-list'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
opt-info.log: opt-info$(EXEEXT)
	@p='opt-info$(EXEEXT)'; \
	b='opt-info'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
opt-list-meta.log: opt-list-meta$(EXEEXT)
	@p='opt-list-meta$(EXEEXT)'; \
	b='opt-list-meta'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
opt-list-meta-queries.log: opt-list-meta-queries$(EXEEXT)
	@p='opt-list-meta-queries$(EXEEXT)'; \
	b='opt-list-meta-queries'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
opt-set-meta.log: opt-set-meta$(EXEEXT)
	@p='opt-set-meta$(EXEEXT)'; \
	b='opt-set-meta'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
opt-set-meta-queries.log: opt-set-meta-queries$(EXEEXT)
	@p='opt-set-meta-queries$(EXEEXT)'; \
	b='opt-set-meta-queries'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
opt-structured-twice.log: opt-structured-twice$(EXEEXT)
	@p='opt-structured-twice$(EXEEXT)'; \
	b='opt-structured-twice'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
connect-systemd-socket-activation.log: connect-systemd-socket-activation$(EXEEXT)
	@p='connect-systemd-socket-activation$(EXEEXT)'; \
	b='connect-systemd-socket-activation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
connect-unix.log: connect-unix$(EXEEXT)
	@p='connect-unix$(EXEEXT)'; \
	b='connect-unix'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
connect-tcp.log: connect-tcp$(EXEEXT)
	@p='connect-tcp$(EXEEXT)'; \
	b='connect-tcp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
connect-tcp6.log: connect-tcp6$(EXEEXT)
	@p='connect-tcp6$(EXEEXT)'; \
	b='connect-tcp6'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aio-connect.log: aio-connect$(EXEEXT)
	@p='aio-connect$(EXEEXT)'; \
	b='aio-connect'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aio-parallel.sh.log: aio-parallel.sh
	@p='aio-parallel.sh'; \
	b='aio-parallel.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aio-parallel-load.sh.log: aio-parallel-load.sh
	@p='aio-parallel-load.sh'; \
	b='aio-parallel-load.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
synch-parallel.sh.log: synch-parallel.sh
	@p='synch-parallel.sh'; \
	b='synch-parallel.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
meta-base-allocation.log: meta-base-allocation$(EXEEXT)
	@p='meta-base-allocation$(EXEEXT)'; \
	b='meta-base-allocation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
closure-lifetimes.log: closure-lifetimes$(EXEEXT)
	@p='closure-lifetimes$(EXEEXT)'; \
	b='closure-lifetimes'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pread-initialize.log: pread-initialize$(EXEEXT)
	@p='pread-initialize$(EXEEXT)'; \
	b='pread-initialize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
socket-activation-name.log: socket-activation-name$(EXEEXT)
	@p='socket-activation-name$(EXEEXT)'; \
	b='socket-activation-name'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
connect-tls-certs.log: connect-tls-certs$(EXEEXT)
	@p='connect-tls-certs$(EXEEXT)'; \
	b='connect-tls-certs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
connect-tls-psk.log: connect-tls-psk$(EXEEXT)
	@p='connect-tls-psk$(EXEEXT)'; \
	b='connect-tls-psk'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
opt-starttls.log: opt-starttls$(EXEEXT)
	@p='opt-starttls$(EXEEXT)'; \
	b='opt-starttls'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aio-parallel-tls.sh.log: aio-parallel-tls.sh
	@p='aio-parallel-tls.sh'; \
	b='aio-parallel-tls.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aio-parallel-load-tls.sh.log: aio-parallel-load-tls.sh
	@p='aio-parallel-load-tls.sh'; \
	b='aio-parallel-load-tls.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
synch-parallel-tls.sh.log: synch-parallel-tls.sh
	@p='synch-parallel-tls.sh'; \
	b='synch-parallel-tls.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
connect-uri-nbd.log: connect-uri-nbd$(EXEEXT)
	@p='connect-uri-nbd$(EXEEXT)'; \
	b='connect-uri-nbd'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
connect-uri-nbd-unix.log: connect-uri-nbd-unix$(EXEEXT)
	@p='connect-uri-nbd-unix$(EXEEXT)'; \
	b='connect-uri-nbd-unix'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
connect-uri-nbd-vsock.sh.log: connect-uri-nbd-vsock.sh
	@p='connect-uri-nbd-vsock.sh'; \
	b='connect-uri-nbd-vsock.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
connect-uri-nbds-certs.log: connect-uri-nbds-certs$(EXEEXT)
	@p='connect-uri-nbds-certs$(EXEEXT)'; \
	b='connect-uri-nbds-certs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
connect-uri-nbds-unix-certs.log: connect-uri-nbds-unix-certs$(EXEEXT)
	@p='connect-uri-nbds-unix-certs$(EXEEXT)'; \
	b='connect-uri-nbds-unix-certs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
connect-uri-nbds-psk.log: connect-uri-nbds-psk$(EXEEXT)
	@p='connect-uri-nbds-psk$(EXEEXT)'; \
	b='connect-uri-nbds-psk'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
connect-uri-nbds-unix-psk.log: connect-uri-nbds-unix-psk$(EXEEXT)
	@p='connect-uri-nbds-unix-psk$(EXEEXT)'; \
	b='connect-uri-nbds-unix-psk'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_DATA)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
@HAVE_NBDKIT_FALSE@distclean-local:
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/aio-connect-port.Po
	-rm -f ./$(DEPDIR)/aio-connect.Po
	-rm -f ./$(DEPDIR)/aio-parallel-load.Po
	-rm -f ./$(DEPDIR)/aio_parallel-aio-parallel.Po
	-rm -f ./$(DEPDIR)/aio_parallel_load_tls-aio-parallel-load.Po
	-rm -f ./$(DEPDIR)/aio_parallel_tls-aio-parallel.Po
	-rm -f ./$(DEPDIR)/can_cache_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_cache_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_df_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_df_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_fast_zero_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_fast_zero_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_flush_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_flush_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_fua_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_fua_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_multi_conn_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_multi_conn_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_cache_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_cache_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_df_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_df_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_fast_zero_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_fast_zero_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_flush_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_flush_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_fua_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_fua_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_multi_conn_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_multi_conn_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_trim_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_trim_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_zero_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_zero_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_trim_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_trim_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_zero_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_zero_flag-requires.Po
	-rm -f ./$(DEPDIR)/close-null.Po
	-rm -f ./$(DEPDIR)/closure-lifetimes.Po
	-rm -f ./$(DEPDIR)/compile-c.Po
	-rm -f ./$(DEPDIR)/compile-cxx.Po
	-rm -f ./$(DEPDIR)/compile-header-only.Po
	-rm -f ./$(DEPDIR)/compile_iso_c99-compile-iso-c99.Po
	-rm -f ./$(DEPDIR)/connect-systemd-socket-activation.Po
	-rm -f ./$(DEPDIR)/connect-tcp.Po
	-rm -f ./$(DEPDIR)/connect-tcp6.Po
	-rm -f ./$(DEPDIR)/connect-unix.Po
	-rm -f ./$(DEPDIR)/connect_tls_certs-connect-tls.Po
	-rm -f ./$(DEPDIR)/connect_tls_certs-requires.Po
	-rm -f ./$(DEPDIR)/connect_tls_psk-connect-tls.Po
	-rm -f ./$(DEPDIR)/connect_tls_psk-requires.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbd-connect-uri.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbd-requires.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbd_unix-connect-uri.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbd_unix-requires.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_certs-connect-uri.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_certs-requires.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_psk-connect-uri.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_psk-requires.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_unix_certs-connect-uri.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_unix_certs-requires.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_unix_psk-connect-uri.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_unix_psk-requires.Po
	-rm -f ./$(DEPDIR)/debug-environment.Po
	-rm -f ./$(DEPDIR)/debug.Po
	-rm -f ./$(DEPDIR)/dlopen-dlopen.Po
	-rm -f ./$(DEPDIR)/errors-bad-cookie.Po
	-rm -f ./$(DEPDIR)/errors-bitmask.Po
	-rm -f ./$(DEPDIR)/errors-client-oversize.Po
	-rm -f ./$(DEPDIR)/errors-client-unadvertised-cmd.Po
	-rm -f ./$(DEPDIR)/errors-client-unaligned.Po
	-rm -f ./$(DEPDIR)/errors-client-unknown-flags.Po
	-rm -f ./$(DEPDIR)/errors-client-zerosize.Po
	-rm -f ./$(DEPDIR)/errors-connect-null.Po
	-rm -f ./$(DEPDIR)/errors-connect-twice.Po
	-rm -f ./$(DEPDIR)/errors-enum.Po
	-rm -f ./$(DEPDIR)/errors-multiple-disconnects.Po
	-rm -f ./$(DEPDIR)/errors-name-too-long.Po
	-rm -f ./$(DEPDIR)/errors-not-connected.Po
	-rm -f ./$(DEPDIR)/errors-not-negotiating-aio.Po
	-rm -f ./$(DEPDIR)/errors-not-negotiating.Po
	-rm -f ./$(DEPDIR)/errors-notify-not-blocked.Po
	-rm -f ./$(DEPDIR)/errors-poll-no-fd.Po
	-rm -f ./$(DEPDIR)/errors-pread-structured.Po
	-rm -f ./$(DEPDIR)/errors-server-invalid-offset.Po
	-rm -f ./$(DEPDIR)/errors-server-oversize.Po
	-rm -f ./$(DEPDIR)/errors-server-unadvertised-cmd.Po
	-rm -f ./$(DEPDIR)/errors-server-unaligned.Po
	-rm -f ./$(DEPDIR)/errors-server-unknown-flags.Po
	-rm -f ./$(DEPDIR)/errors-server-zerosize.Po
	-rm -f ./$(DEPDIR)/export-name.Po
	-rm -f ./$(DEPDIR)/get-size.Po
	-rm -f ./$(DEPDIR)/get-version.Po
	-rm -f ./$(DEPDIR)/is_not_rotational_flag-eflags.Po
	-rm -f ./$(DEPDIR)/is_not_rotational_flag-requires.Po
	-rm -f ./$(DEPDIR)/is_rotational_flag-eflags.Po
	-rm -f ./$(DEPDIR)/is_rotational_flag-requires.Po
	-rm -f ./$(DEPDIR)/meta-base-allocation.Po
	-rm -f ./$(DEPDIR)/newstyle-limited.Po
	-rm -f ./$(DEPDIR)/oldstyle.Po
	-rm -f ./$(DEPDIR)/opt-abort.Po
	-rm -f ./$(DEPDIR)/opt-list-meta-queries.Po
	-rm -f ./$(DEPDIR)/opt-list-meta.Po
	-rm -f ./$(DEPDIR)/opt-set-meta-queries.Po
	-rm -f ./$(DEPDIR)/opt-starttls.Po
	-rm -f ./$(DEPDIR)/opt-structured-twice.Po
	-rm -f ./$(DEPDIR)/opt_info-opt-info.Po
	-rm -f ./$(DEPDIR)/opt_list-opt-list.Po
	-rm -f ./$(DEPDIR)/opt_list-requires.Po
	-rm -f ./$(DEPDIR)/opt_set_meta-opt-set-meta.Po
	-rm -f ./$(DEPDIR)/opt_set_meta-requires.Po
	-rm -f ./$(DEPDIR)/pick-a-port.Po
	-rm -f ./$(DEPDIR)/pread-initialize.Po
	-rm -f ./$(DEPDIR)/private-data.Po
	-rm -f ./$(DEPDIR)/pwrite-extended.Po
	-rm -f ./$(DEPDIR)/read-only-flag.Po
	-rm -f ./$(DEPDIR)/read-write-flag.Po
	-rm -f ./$(DEPDIR)/requires.Po
	-rm -f ./$(DEPDIR)/server-death.Po
	-rm -f ./$(DEPDIR)/shutdown-flags.Po
	-rm -f ./$(DEPDIR)/shutdown-opt-mode.Po
	-rm -f ./$(DEPDIR)/socket-activation-name.Po
	-rm -f ./$(DEPDIR)/synch_parallel-synch-parallel.Po
	-rm -f ./$(DEPDIR)/synch_parallel_tls-synch-parallel.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-local distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/aio-connect-port.Po
	-rm -f ./$(DEPDIR)/aio-connect.Po
	-rm -f ./$(DEPDIR)/aio-parallel-load.Po
	-rm -f ./$(DEPDIR)/aio_parallel-aio-parallel.Po
	-rm -f ./$(DEPDIR)/aio_parallel_load_tls-aio-parallel-load.Po
	-rm -f ./$(DEPDIR)/aio_parallel_tls-aio-parallel.Po
	-rm -f ./$(DEPDIR)/can_cache_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_cache_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_df_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_df_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_fast_zero_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_fast_zero_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_flush_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_flush_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_fua_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_fua_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_multi_conn_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_multi_conn_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_cache_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_cache_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_df_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_df_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_fast_zero_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_fast_zero_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_flush_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_flush_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_fua_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_fua_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_multi_conn_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_multi_conn_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_trim_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_trim_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_not_zero_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_not_zero_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_trim_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_trim_flag-requires.Po
	-rm -f ./$(DEPDIR)/can_zero_flag-eflags.Po
	-rm -f ./$(DEPDIR)/can_zero_flag-requires.Po
	-rm -f ./$(DEPDIR)/close-null.Po
	-rm -f ./$(DEPDIR)/closure-lifetimes.Po
	-rm -f ./$(DEPDIR)/compile-c.Po
	-rm -f ./$(DEPDIR)/compile-cxx.Po
	-rm -f ./$(DEPDIR)/compile-header-only.Po
	-rm -f ./$(DEPDIR)/compile_iso_c99-compile-iso-c99.Po
	-rm -f ./$(DEPDIR)/connect-systemd-socket-activation.Po
	-rm -f ./$(DEPDIR)/connect-tcp.Po
	-rm -f ./$(DEPDIR)/connect-tcp6.Po
	-rm -f ./$(DEPDIR)/connect-unix.Po
	-rm -f ./$(DEPDIR)/connect_tls_certs-connect-tls.Po
	-rm -f ./$(DEPDIR)/connect_tls_certs-requires.Po
	-rm -f ./$(DEPDIR)/connect_tls_psk-connect-tls.Po
	-rm -f ./$(DEPDIR)/connect_tls_psk-requires.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbd-connect-uri.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbd-requires.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbd_unix-connect-uri.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbd_unix-requires.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_certs-connect-uri.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_certs-requires.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_psk-connect-uri.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_psk-requires.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_unix_certs-connect-uri.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_unix_certs-requires.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_unix_psk-connect-uri.Po
	-rm -f ./$(DEPDIR)/connect_uri_nbds_unix_psk-requires.Po
	-rm -f ./$(DEPDIR)/debug-environment.Po
	-rm -f ./$(DEPDIR)/debug.Po
	-rm -f ./$(DEPDIR)/dlopen-dlopen.Po
	-rm -f ./$(DEPDIR)/errors-bad-cookie.Po
	-rm -f ./$(DEPDIR)/errors-bitmask.Po
	-rm -f ./$(DEPDIR)/errors-client-oversize.Po
	-rm -f ./$(DEPDIR)/errors-client-unadvertised-cmd.Po
	-rm -f ./$(DEPDIR)/errors-client-unaligned.Po
	-rm -f ./$(DEPDIR)/errors-client-unknown-flags.Po
	-rm -f ./$(DEPDIR)/errors-client-zerosize.Po
	-rm -f ./$(DEPDIR)/errors-connect-null.Po
	-rm -f ./$(DEPDIR)/errors-connect-twice.Po
	-rm -f ./$(DEPDIR)/errors-enum.Po
	-rm -f ./$(DEPDIR)/errors-multiple-disconnects.Po
	-rm -f ./$(DEPDIR)/errors-name-too-long.Po
	-rm -f ./$(DEPDIR)/errors-not-connected.Po
	-rm -f ./$(DEPDIR)/errors-not-negotiating-aio.Po
	-rm -f ./$(DEPDIR)/errors-not-negotiating.Po
	-rm -f ./$(DEPDIR)/errors-notify-not-blocked.Po
	-rm -f ./$(DEPDIR)/errors-poll-no-fd.Po
	-rm -f ./$(DEPDIR)/errors-pread-structured.Po
	-rm -f ./$(DEPDIR)/errors-server-invalid-offset.Po
	-rm -f ./$(DEPDIR)/errors-server-oversize.Po
	-rm -f ./$(DEPDIR)/errors-server-unadvertised-cmd.Po
	-rm -f ./$(DEPDIR)/errors-server-unaligned.Po
	-rm -f ./$(DEPDIR)/errors-server-unknown-flags.Po
	-rm -f ./$(DEPDIR)/errors-server-zerosize.Po
	-rm -f ./$(DEPDIR)/export-name.Po
	-rm -f ./$(DEPDIR)/get-size.Po
	-rm -f ./$(DEPDIR)/get-version.Po
	-rm -f ./$(DEPDIR)/is_not_rotational_flag-eflags.Po
	-rm -f ./$(DEPDIR)/is_not_rotational_flag-requires.Po
	-rm -f ./$(DEPDIR)/is_rotational_flag-eflags.Po
	-rm -f ./$(DEPDIR)/is_rotational_flag-requires.Po
	-rm -f ./$(DEPDIR)/meta-base-allocation.Po
	-rm -f ./$(DEPDIR)/newstyle-limited.Po
	-rm -f ./$(DEPDIR)/oldstyle.Po
	-rm -f ./$(DEPDIR)/opt-abort.Po
	-rm -f ./$(DEPDIR)/opt-list-meta-queries.Po
	-rm -f ./$(DEPDIR)/opt-list-meta.Po
	-rm -f ./$(DEPDIR)/opt-set-meta-queries.Po
	-rm -f ./$(DEPDIR)/opt-starttls.Po
	-rm -f ./$(DEPDIR)/opt-structured-twice.Po
	-rm -f ./$(DEPDIR)/opt_info-opt-info.Po
	-rm -f ./$(DEPDIR)/opt_list-opt-list.Po
	-rm -f ./$(DEPDIR)/opt_list-requires.Po
	-rm -f ./$(DEPDIR)/opt_set_meta-opt-set-meta.Po
	-rm -f ./$(DEPDIR)/opt_set_meta-requires.Po
	-rm -f ./$(DEPDIR)/pick-a-port.Po
	-rm -f ./$(DEPDIR)/pread-initialize.Po
	-rm -f ./$(DEPDIR)/private-data.Po
	-rm -f ./$(DEPDIR)/pwrite-extended.Po
	-rm -f ./$(DEPDIR)/read-only-flag.Po
	-rm -f ./$(DEPDIR)/read-write-flag.Po
	-rm -f ./$(DEPDIR)/requires.Po
	-rm -f ./$(DEPDIR)/server-death.Po
	-rm -f ./$(DEPDIR)/shutdown-flags.Po
	-rm -f ./$(DEPDIR)/shutdown-opt-mode.Po
	-rm -f ./$(DEPDIR)/socket-activation-name.Po
	-rm -f ./$(DEPDIR)/synch_parallel-synch-parallel.Po
	-rm -f ./$(DEPDIR)/synch_parallel_tls-synch-parallel.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-local \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile


$(generator_built): $(top_builddir)/generator/stamp-generator

$(top_builddir)/generator/stamp-generator: \
	  $(wildcard $(top_srcdir)/generator/*.ml) \
	  $(wildcard $(top_srcdir)/generator/*.mli) \
	  $(wildcard $(top_srcdir)/generator/states*.c)
	$(MAKE) -C $(top_builddir)/generator stamp-generator

%.cmi: %.mli
	$(OCAMLFIND) ocamlc $(OCAMLFLAGS) $(OCAMLPACKAGES) -c $< -o $@
%.cmo: %.ml
	$(OCAMLFIND) ocamlc $(OCAMLFLAGS) $(OCAMLPACKAGES) -c $< -o $@
@HAVE_OCAMLOPT_TRUE@%.cmx: %.ml
@HAVE_OCAMLOPT_TRUE@	$(OCAMLFIND) ocamlopt $(OCAMLFLAGS) $(OCAMLPACKAGES) -c $< -o $@

$(top_builddir)/podwrapper.pl: $(top_srcdir)/podwrapper.pl.in
	$(MAKE) -C $(top_builddir) podwrapper.pl

# Even though we have a compile.c, we do not want make to create a 'compile'
.PHONY: compile

@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@pki/stamp-pki: $(srcdir)/make-pki.sh
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	rm -rf pki pki-t
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	SRCDIR=$(srcdir) CERTTOOL=$(CERTTOOL) $(srcdir)/make-pki.sh pki-t
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	mv pki-t pki
@HAVE_CERTTOOL_TRUE@@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@	touch pki/stamp-pki

@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@keys.psk:
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	rm -f $@ $@-t
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	$(PSKTOOL) -u alice -p $@-t
@HAVE_GNUTLS_TRUE@@HAVE_NBDKIT_TRUE@@HAVE_PSKTOOL_TRUE@	mv $@-t $@
@HAVE_NBDKIT_TRUE@distclean-local: distclean-local-tls
@HAVE_NBDKIT_TRUE@distclean-local-tls:
@HAVE_NBDKIT_TRUE@	rm -rf pki

check-valgrind:
	LIBNBD_VALGRIND=1 $(MAKE) check

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
