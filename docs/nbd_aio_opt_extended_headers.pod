=head1 NAME

nbd_aio_opt_extended_headers - request the server to enable extended
headers

=head1 SYNOPSIS

 #include <libnbd.h>

 typedef struct {
   int (*callback) (void *user_data, int *error);
   void *user_data;
   void (*free) (void *user_data);
 } nbd_completion_callback;

 int nbd_aio_opt_extended_headers (
       struct nbd_handle *h,
       nbd_completion_callback completion_callback
     );

=head1 DESCRIPTION

Request that the server use extended headers, by sending
C<NBD_OPT_EXTENDED_HEADERS>.  This behaves like the synchronous
counterpart L<nbd_opt_extended_headers(3)>, except that it does
not wait for the server's response.

To determine when the request completes, wait for
L<nbd_aio_is_connecting(3)> to return false.  Or supply the optional
C<completion_callback> which will be invoked as described in
L<libnbd(3)/Completion callbacks>, except that it is automatically
retired regardless of return value.  Note that detecting whether the
server returns an error (as is done by the return value of the
synchronous counterpart) is only possible with a completion
callback.

=head1 RETURN VALUE

If the call is successful the function returns C<0>.

=head1 ERRORS

On error C<-1> is returned.

Refer to L<libnbd(3)/ERROR HANDLING>
for how to get further details of the error.

The following parameters must not be NULL: C<h>.
For more information see L<libnbd(3)/Non-NULL parameters>.

=head1 HANDLE STATE

The handle must be
negotiating,
otherwise this call will return an error.

=head1 VERSION

This function first appeared in libnbd 1.18.

If you need to test if this function is available at compile time
check if the following macro is defined:

 #define LIBNBD_HAVE_NBD_AIO_OPT_EXTENDED_HEADERS 1

=head1 SEE ALSO

L<nbd_aio_is_connecting(3)>,
L<nbd_create(3)>,
L<nbd_opt_extended_headers(3)>,
L<nbd_set_opt_mode(3)>,
L<libnbd(3)>.

=head1 AUTHORS

Eric Blake

Richard W.M. Jones

=head1 COPYRIGHT

Copyright Red Hat
