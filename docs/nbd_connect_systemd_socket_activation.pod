=head1 NAME

nbd_connect_systemd_socket_activation - connect using systemd socket
activation

=head1 SYNOPSIS

 #include <libnbd.h>

 int nbd_connect_systemd_socket_activation (
       struct nbd_handle *h, char **argv
     );

=head1 DESCRIPTION

Run the command as a subprocess and connect to it using
systemd socket activation.

This is especially useful for running L<qemu-nbd(1)> as
a subprocess of libnbd, for example to use it to open
qcow2 files.

To run nbdkit as a subprocess, this function can be used,
or L<nbd_connect_command(3)>.

To run L<nbd-server(1)> as a subprocess, this function
cannot be used, you must use L<nbd_connect_command(3)>.

=head2 Socket activation

Libnbd will fork the C<argv> command and pass an NBD
socket to it using special C<LISTEN_*> environment
variables (as defined by the systemd socket activation
protocol).

 ┌─────────┬─────────┐    ┌───────────────┐
 │ program │ libnbd  │    │  qemu-nbd or  │
 │         │         │    │  other server │
 │         │ socket ╍╍╍╍╍╍╍╍▶             │
 └─────────┴─────────┘    └───────────────┘

When the NBD handle is closed the server subprocess
is killed.

=head3 Socket name

The socket activation protocol lets you optionally give
the socket a name.  If used, the name is passed to the
NBD server using the C<LISTEN_FDNAMES> environment
variable.  To provide a socket name, call
L<nbd_set_socket_activation_name(3)> before calling
the connect function.


This call returns when the connection has been made.  By default,
this proceeds all the way to transmission phase, but
L<nbd_set_opt_mode(3)> can be used for manual control over
option negotiation performed before transmission phase.

=head1 RETURN VALUE

If the call is successful the function returns C<0>.

=head1 ERRORS

On error C<-1> is returned.

Refer to L<libnbd(3)/ERROR HANDLING>
for how to get further details of the error.

The following parameters must not be NULL: C<h>, C<argv>.
For more information see L<libnbd(3)/Non-NULL parameters>.

=head1 HANDLE STATE

The handle must be
newly created,
otherwise this call will return an error.

=head1 VERSION

This function first appeared in libnbd 1.2.

If you need to test if this function is available at compile time
check if the following macro is defined:

 #define LIBNBD_HAVE_NBD_CONNECT_SYSTEMD_SOCKET_ACTIVATION 1

=head1 EXAMPLE

This example is also available as F<examples/open-qcow2.c>
in the libnbd source code.

 /* This example shows how to use qemu-nbd
  * to open a local qcow2 file.
  */

 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>

 #include <libnbd.h>

 int
 main (int argc, const char *argv[])
 {
   const char *filename;
   struct nbd_handle *nbd;
   char buf[512];
   FILE *fp;

   if (argc != 2) {
     fprintf (stderr, "open-qcow2 file.qcow2\n");
     exit (EXIT_FAILURE);
   }
   filename = argv[1];

   /* Create the libnbd handle. */
   nbd = nbd_create ();
   if (nbd == NULL) {
     fprintf (stderr, "%s\n", nbd_get_error ());
     exit (EXIT_FAILURE);
   }

   /* Run qemu-nbd as a subprocess using
    * systemd socket activation.
    */
   char *args[] = {
     "qemu-nbd", "-f", "qcow2",
     (char *)filename,
     NULL
   };
   if (nbd_connect_systemd_socket_activation (nbd,
                                              args) == -1) {
     fprintf (stderr, "%s\n", nbd_get_error ());
     exit (EXIT_FAILURE);
   }

   /* Read the first sector and print it. */
   if (nbd_pread (nbd, buf, sizeof buf, 0, 0) == -1) {
     fprintf (stderr, "%s\n", nbd_get_error ());
     exit (EXIT_FAILURE);
   }

   fp = popen ("hexdump -C", "w");
   if (fp == NULL) {
     perror ("popen: hexdump");
     exit (EXIT_FAILURE);
   }
   fwrite (buf, sizeof buf, 1, fp);
   pclose (fp);

   /* Close the libnbd handle. */
   nbd_close (nbd);

   exit (EXIT_SUCCESS);
 }

=head1 SEE ALSO

L<nbd_aio_connect_systemd_socket_activation(3)>,
L<nbd_connect_command(3)>,
L<nbd_create(3)>,
L<nbd_get_socket_activation_name(3)>,
L<nbd_kill_subprocess(3)>,
L<nbd_set_opt_mode(3)>,
L<nbd_set_socket_activation_name(3)>,
L<libnbd(3)>,
L<qemu-nbd(1)>,
L<http://0pointer.de/blog/projects/socket-activation.html>.

=head1 AUTHORS

Eric Blake

Richard W.M. Jones

=head1 COPYRIGHT

Copyright Red Hat
