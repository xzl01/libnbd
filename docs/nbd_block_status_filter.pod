=head1 NAME

nbd_block_status_filter - send filtered block status command, with
64-bit callback

=head1 SYNOPSIS

 #include <libnbd.h>

 typedef struct {
   int (*callback) (void *user_data,
                    const char *metacontext,
                    uint64_t offset, nbd_extent *entries,
                    size_t nr_entries, int *error);
   void *user_data;
   void (*free) (void *user_data);
 } nbd_extent64_callback;

 int nbd_block_status_filter (
       struct nbd_handle *h, uint64_t count,
       uint64_t offset, char **contexts,
       nbd_extent64_callback extent64_callback,
       uint32_t flags
     );

=head1 DESCRIPTION

Issue a filtered block status command to the NBD server.  If
supported by the server (see L<nbd_can_block_status_payload(3)>),
this causes metadata context information about blocks beginning
from the specified offset to be returned, and with the result
limited to just the contexts specified in C<filter>.  Note that
all strings in C<filter> must be supported by
L<nbd_can_meta_context(3)>.

All other parameters to this function have the same semantics
as in L<nbd_block_status_64(3)>; except that for convenience,
unless <nbd_set_strict_flags(3)> was used to disable
C<LIBNBD_STRICT_AUTO_FLAG>, libnbd ignores the presence or
absence of the flag C<LIBNBD_CMD_FLAG_PAYLOAD_LEN>
in C<flags>, while correctly using the flag over the wire.

By default, libnbd will reject attempts to use this function with
parameters that are likely to result in server failure, such as
requesting an unknown command flag.  The L<nbd_set_strict_mode(3)>
function can be used to alter which scenarios should await a server
reply rather than failing fast.

=head1 RETURN VALUE

If the call is successful the function returns C<0>.

=head1 ERRORS

On error C<-1> is returned.

Refer to L<libnbd(3)/ERROR HANDLING>
for how to get further details of the error.

The following parameters must not be NULL: C<h>, C<contexts>.
For more information see L<libnbd(3)/Non-NULL parameters>.

=head1 HANDLE STATE

The handle must be
connected with the server,
otherwise this call will return an error.

=head1 VERSION

This function first appeared in libnbd 1.18.

If you need to test if this function is available at compile time
check if the following macro is defined:

 #define LIBNBD_HAVE_NBD_BLOCK_STATUS_FILTER 1

=head1 SEE ALSO

L<nbd_aio_block_status_filter(3)>,
L<nbd_block_status_64(3)>,
L<nbd_can_block_status_payload(3)>,
L<nbd_can_meta_context(3)>,
L<nbd_create(3)>,
L<nbd_set_strict_mode(3)>,
L<libnbd(3)>.

=head1 AUTHORS

Eric Blake

Richard W.M. Jones

=head1 COPYRIGHT

Copyright Red Hat
