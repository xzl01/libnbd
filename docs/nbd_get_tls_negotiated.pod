=head1 NAME

nbd_get_tls_negotiated - find out if TLS was negotiated on a connection

=head1 SYNOPSIS

 #include <libnbd.h>

 int nbd_get_tls_negotiated (
       struct nbd_handle *h
     );

=head1 DESCRIPTION

After connecting you may call this to find out if the
connection is using TLS.

This is normally useful only if you set the TLS request mode
to C<LIBNBD_TLS_ALLOW> (see L<nbd_set_tls(3)>), because in this
mode we try to use TLS but fall back to unencrypted if it was
not available.  This function will tell you if TLS was
negotiated or not.

In C<LIBNBD_TLS_REQUIRE> mode (the most secure) the connection
would have failed if TLS could not be negotiated.  With
C<LIBNBD_TLS_DISABLE> mode, TLS is not tried automatically;
but if the NBD server uses the less-common C<SELECTIVETLS>
mode, this function reports whether a manual L<nbd_opt_starttls(3)>
enabled TLS or if the connection is still plaintext.

=head1 RETURN VALUE

This call returns a boolean value.

=head1 ERRORS

On error C<-1> is returned.

Refer to L<libnbd(3)/ERROR HANDLING>
for how to get further details of the error.

The following parameters must not be NULL: C<h>.
For more information see L<libnbd(3)/Non-NULL parameters>.

=head1 HANDLE STATE

The handle must be
negotiating, or
connected with the server, or
shut down,
otherwise this call will return an error.

=head1 VERSION

This function first appeared in libnbd 1.2.

If you need to test if this function is available at compile time
check if the following macro is defined:

 #define LIBNBD_HAVE_NBD_GET_TLS_NEGOTIATED 1

=head1 SEE ALSO

L<nbd_create(3)>,
L<nbd_get_tls(3)>,
L<nbd_opt_starttls(3)>,
L<nbd_set_tls(3)>,
L<libnbd(3)>.

=head1 AUTHORS

Eric Blake

Richard W.M. Jones

=head1 COPYRIGHT

Copyright Red Hat
